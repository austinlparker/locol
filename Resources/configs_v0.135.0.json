{
  "version": "v0.135.0",
  "components": [
    {
      "name": "batch",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout sets the time after which a batch will be sent regardless of size. When this is set to zero, batched data will be sent immediately.",
            "required": false,
            "default": "200ms",
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "SendBatchSize",
            "type": "int",
            "description": "SendBatchSize is the size of a batch which after hit, will trigger it to be sent. When this is set to zero, the batch size is ignored and data will be sent immediately subject to only send_batch_max_size.",
            "required": false,
            "default": 8192,
            "path_tokens": [
              "send_batch_size"
            ]
          },
          {
            "name": "SendBatchMaxSize",
            "type": "int",
            "description": "SendBatchMaxSize is the maximum size of a batch. It must be larger than SendBatchSize. Larger batches are split into smaller units. Default value is 0, that means no maximum size.",
            "required": false,
            "validation": {
              "max": "0"
            },
            "path_tokens": [
              "send_batch_max_size"
            ]
          },
          {
            "name": "MetadataKeys",
            "type": "stringArray",
            "description": "MetadataKeys is a list of client.Metadata keys that will be used to form distinct batchers.  If this setting is empty, a single batcher instance will be used.  When this setting is not empty, one batcher will be used per distinct combination of values for the listed metadata keys. Empty value and unset metadata are treated as distinct cases. Entries are case-insensitive.  Duplicated entries will trigger a validation error.",
            "required": false,
            "path_tokens": [
              "metadata_keys"
            ]
          },
          {
            "name": "MetadataCardinalityLimit",
            "type": "int",
            "description": "MetadataCardinalityLimit indicates the maximum number of batcher instances that will be created through a distinct combination of MetadataKeys.",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "metadata_cardinality_limit"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "debug",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Verbosity",
            "type": "enum",
            "description": "Verbosity defines the debug exporter verbosity.",
            "required": false,
            "default": "basic",
            "path_tokens": [
              "verbosity"
            ],
            "enum_values": [
              "basic",
              "detailed",
              "levelbasicstr",
              "leveldetailedstr",
              "levelnonestr",
              "levelnormalstr",
              "none",
              "normal"
            ]
          },
          {
            "name": "SamplingInitial",
            "type": "int",
            "description": "SamplingInitial defines how many samples are initially logged during each second.",
            "required": false,
            "default": 2,
            "path_tokens": [
              "sampling_initial"
            ]
          },
          {
            "name": "SamplingThereafter",
            "type": "int",
            "description": "SamplingThereafter defines the sampling rate after the initial samples are logged.",
            "required": false,
            "default": 1,
            "path_tokens": [
              "sampling_thereafter"
            ]
          },
          {
            "name": "UseInternalLogger",
            "type": "bool",
            "description": "UseInternalLogger defines whether the exporter sends the output to the collector's internal logger.",
            "required": false,
            "default": true,
            "path_tokens": [
              "use_internal_logger"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "memorylimiter",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CheckInterval",
            "type": "duration",
            "description": "CheckInterval is the time between measurements of memory usage for the purposes of avoiding going over the limits. Defaults to zero, so no checks will be performed.",
            "required": false,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "check_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MinGCIntervalWhenSoftLimited",
            "type": "duration",
            "description": "MinGCIntervalWhenSoftLimited minimum interval between forced GC when in soft (=limit_mib - spike_limit_mib) limited mode. Zero value means no minimum interval. GCs is a CPU-heavy operation and executing it too frequently may affect the recovery capabilities of the collector.",
            "required": false,
            "path_tokens": [
              "min_gc_interval_when_soft_limited"
            ],
            "format": "duration"
          },
          {
            "name": "MinGCIntervalWhenHardLimited",
            "type": "duration",
            "description": "MinGCIntervalWhenHardLimited minimum interval between forced GC when in hard (=limit_mib) limited mode. Zero value means no minimum interval. GCs is a CPU-heavy operation and executing it too frequently may affect the recovery capabilities of the collector.",
            "required": false,
            "path_tokens": [
              "min_gc_interval_when_hard_limited"
            ],
            "format": "duration"
          },
          {
            "name": "MemoryLimitMiB",
            "type": "int",
            "description": "MemoryLimitMiB is the maximum amount of memory, in MiB, targeted to be allocated by the process.",
            "required": false,
            "validation": {
              "anyOf": "limit_mib,limit_percentage",
              "max": "0"
            },
            "path_tokens": [
              "limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MemorySpikeLimitMiB",
            "type": "int",
            "description": "MemorySpikeLimitMiB is the maximum, in MiB, spike expected between the measurements of memory usage.",
            "required": false,
            "path_tokens": [
              "spike_limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MemoryLimitPercentage",
            "type": "int",
            "description": "MemoryLimitPercentage is the maximum amount of memory, in %, targeted to be allocated by the process. The fixed memory settings MemoryLimitMiB has a higher precedence.",
            "required": false,
            "validation": {
              "anyOf": "limit_mib,limit_percentage",
              "max": "0"
            },
            "path_tokens": [
              "limit_percentage"
            ]
          },
          {
            "name": "MemorySpikePercentage",
            "type": "int",
            "description": "MemorySpikePercentage is the maximum, in percents against the total memory, spike expected between the measurements of memory usage.",
            "required": false,
            "validation": {
              "max": "100"
            },
            "path_tokens": [
              "spike_limit_percentage"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "memorylimiter",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CheckInterval",
            "type": "duration",
            "description": "CheckInterval is the time between measurements of memory usage for the purposes of avoiding going over the limits. Defaults to zero, so no checks will be performed.",
            "required": false,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "check_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MinGCIntervalWhenSoftLimited",
            "type": "duration",
            "description": "MinGCIntervalWhenSoftLimited minimum interval between forced GC when in soft (=limit_mib - spike_limit_mib) limited mode. Zero value means no minimum interval. GCs is a CPU-heavy operation and executing it too frequently may affect the recovery capabilities of the collector.",
            "required": false,
            "path_tokens": [
              "min_gc_interval_when_soft_limited"
            ],
            "format": "duration"
          },
          {
            "name": "MinGCIntervalWhenHardLimited",
            "type": "duration",
            "description": "MinGCIntervalWhenHardLimited minimum interval between forced GC when in hard (=limit_mib) limited mode. Zero value means no minimum interval. GCs is a CPU-heavy operation and executing it too frequently may affect the recovery capabilities of the collector.",
            "required": false,
            "path_tokens": [
              "min_gc_interval_when_hard_limited"
            ],
            "format": "duration"
          },
          {
            "name": "MemoryLimitMiB",
            "type": "int",
            "description": "MemoryLimitMiB is the maximum amount of memory, in MiB, targeted to be allocated by the process.",
            "required": false,
            "validation": {
              "anyOf": "limit_mib,limit_percentage",
              "max": "0"
            },
            "path_tokens": [
              "limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MemorySpikeLimitMiB",
            "type": "int",
            "description": "MemorySpikeLimitMiB is the maximum, in MiB, spike expected between the measurements of memory usage.",
            "required": false,
            "path_tokens": [
              "spike_limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MemoryLimitPercentage",
            "type": "int",
            "description": "MemoryLimitPercentage is the maximum amount of memory, in %, targeted to be allocated by the process. The fixed memory settings MemoryLimitMiB has a higher precedence.",
            "required": false,
            "validation": {
              "anyOf": "limit_mib,limit_percentage",
              "max": "0"
            },
            "path_tokens": [
              "limit_percentage"
            ]
          },
          {
            "name": "MemorySpikePercentage",
            "type": "int",
            "description": "MemorySpikePercentage is the maximum, in percents against the total memory, spike expected between the measurements of memory usage.",
            "required": false,
            "validation": {
              "max": "100"
            },
            "path_tokens": [
              "spike_limit_percentage"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "zpages",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to enable expvar service. (default = false)",
            "required": false,
            "path_tokens": [
              "expvar",
              "enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "otlp",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "middlewares"
            ]
          },
          {
            "name": "TracesURLPath",
            "type": "custom",
            "description": "The URL path to receive traces on. If omitted \"/v1/traces\" will be used.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "traces_url_path"
            ]
          },
          {
            "name": "MetricsURLPath",
            "type": "custom",
            "description": "The URL path to receive metrics on. If omitted \"/v1/metrics\" will be used.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "metrics_url_path"
            ]
          },
          {
            "name": "LogsURLPath",
            "type": "custom",
            "description": "The URL path to receive logs on. If omitted \"/v1/logs\" will be used.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "logs_url_path"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "otlphttp",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "validation": {
              "anyOf": "endpoint,traces_endpoint,metrics_endpoint,logs_endpoint,profiles_endpoint"
            },
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "default": 524288,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "default": "configcompression.TypeGzip",
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "default": "defaultTransport.MaxIdleConns",
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "default": "defaultTransport.IdleConnTimeout",
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "default": true,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "TracesEndpoint",
            "type": "string",
            "description": "The URL to send traces to. If omitted the Endpoint + \"/v1/traces\" will be used.",
            "required": false,
            "validation": {
              "anyOf": "endpoint,traces_endpoint,metrics_endpoint,logs_endpoint,profiles_endpoint"
            },
            "path_tokens": [
              "traces_endpoint"
            ]
          },
          {
            "name": "MetricsEndpoint",
            "type": "string",
            "description": "The URL to send metrics to. If omitted the Endpoint + \"/v1/metrics\" will be used.",
            "required": false,
            "validation": {
              "anyOf": "endpoint,traces_endpoint,metrics_endpoint,logs_endpoint,profiles_endpoint"
            },
            "path_tokens": [
              "metrics_endpoint"
            ]
          },
          {
            "name": "LogsEndpoint",
            "type": "string",
            "description": "The URL to send logs to. If omitted the Endpoint + \"/v1/logs\" will be used.",
            "required": false,
            "validation": {
              "anyOf": "endpoint,traces_endpoint,metrics_endpoint,logs_endpoint,profiles_endpoint"
            },
            "path_tokens": [
              "logs_endpoint"
            ]
          },
          {
            "name": "ProfilesEndpoint",
            "type": "string",
            "description": "The URL to send profiles to. If omitted the Endpoint + \"/v1development/profiles\" will be used.",
            "required": false,
            "validation": {
              "anyOf": "endpoint,traces_endpoint,metrics_endpoint,logs_endpoint,profiles_endpoint"
            },
            "path_tokens": [
              "profiles_endpoint"
            ]
          },
          {
            "name": "Encoding",
            "type": "enum",
            "description": "The encoding to export telemetry (default: \"proto\")",
            "required": false,
            "default": "proto",
            "path_tokens": [
              "encoding"
            ],
            "enum_values": [
              "json",
              "proto"
            ]
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "anyOf",
          "keys": [
            [
              "endpoint"
            ],
            [
              "logs_endpoint"
            ],
            [
              "metrics_endpoint"
            ],
            [
              "profiles_endpoint"
            ],
            [
              "traces_endpoint"
            ]
          ]
        }
      ]
    },
    {
      "name": "otlp",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "default": "configcompression.TypeGzip",
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "default": 524288,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "default": "",
            "path_tokens": [
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awsfirehose",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding identifies the encoding of records received from Firehose. Defaults to telemetry-specific encodings: \"cwlog\" for logs, and \"cwmetrics\" for metrics.",
            "required": false,
            "path_tokens": [
              "encoding"
            ]
          },
          {
            "name": "RecordType",
            "type": "string",
            "description": "RecordType is an alias for Encoding for backwards compatibility. It is an error to specify both encoding and record_type. Deprecated: [v0.121.0] use Encoding instead.",
            "required": false,
            "path_tokens": [
              "record_type"
            ]
          },
          {
            "name": "AccessKey",
            "type": "custom",
            "description": "AccessKey is checked against the one received with each request. This can be set when creating or updating the Firehose delivery stream.",
            "required": false,
            "path_tokens": [
              "access_key"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "atMostOne",
          "keys": [
            [
              "encoding"
            ],
            [
              "record_type"
            ]
          ]
        }
      ]
    },
    {
      "name": "awsecscontainermetrics",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval is the interval at which metrics should be collected",
            "required": false,
            "default": "20s",
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awss3",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Region",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "region"
            ]
          },
          {
            "name": "S3Bucket",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "s3_bucket"
            ]
          },
          {
            "name": "S3Prefix",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "s3_prefix"
            ]
          },
          {
            "name": "S3Partition",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "s3_partition"
            ]
          },
          {
            "name": "FilePrefix",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "file_prefix"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "endpoint"
            ]
          },
          {
            "name": "EndpointPartitionID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "endpoint_partition_id"
            ]
          },
          {
            "name": "S3ForcePathStyle",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "s3downloader",
              "s3_force_path_style"
            ]
          },
          {
            "name": "StartTime",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "starttime"
            ]
          },
          {
            "name": "EndTime",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "endtime"
            ]
          },
          {
            "name": "Encodings",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "encodings"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "notifications",
              "opampextension",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "notifications",
              "opampextension",
              "[]"
            ]
          },
          {
            "name": "QueueURL",
            "type": "string",
            "description": "QueueURL is the URL of the SQS queue to receive S3 notifications.",
            "required": false,
            "path_tokens": [
              "sqs",
              "queue_url"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Region specifies the AWS region of the SQS queue.",
            "required": false,
            "path_tokens": [
              "sqs",
              "region"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is the optional custom endpoint for SQS (useful for testing).",
            "required": false,
            "path_tokens": [
              "sqs",
              "endpoint"
            ]
          },
          {
            "name": "WaitTimeSeconds",
            "type": "int",
            "description": "WaitTimeSeconds specifies the duration (in seconds) for long polling SQS messages. Maximum is 20 seconds. Default is 20 seconds.",
            "required": false,
            "validation": {
              "max": "20",
              "min": "0"
            },
            "path_tokens": [
              "sqs",
              "wait_time_seconds"
            ]
          },
          {
            "name": "MaxNumberOfMessages",
            "type": "int",
            "description": "MaxNumberOfMessages specifies the maximum number of messages to receive in a single poll. Valid values: 1-10. Default is 10.",
            "required": false,
            "validation": {
              "max": "10",
              "min": "0"
            },
            "path_tokens": [
              "sqs",
              "max_number_of_messages"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "azureblob",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Authentication",
            "type": "enum",
            "description": "Type of authentication to use",
            "required": false,
            "default": "connection_string",
            "path_tokens": [
              "auth"
            ],
            "enum_values": [
              "connection_string",
              "default",
              "service_principal"
            ]
          },
          {
            "name": "ConnectionString",
            "type": "string",
            "description": "Azure Blob Storage connection key, which can be found in the Azure Blob Storage resource on the Azure Portal. (no default)",
            "required": false,
            "path_tokens": [
              "connection_string"
            ]
          },
          {
            "name": "StorageAccountURL",
            "type": "string",
            "description": "Storage Account URL, used with Service Principal authentication",
            "required": false,
            "path_tokens": [
              "storage_account_url"
            ]
          },
          {
            "name": "TenantID",
            "type": "string",
            "description": "Tenant ID, used with Service Principal authentication",
            "required": false,
            "path_tokens": [
              "service_principal",
              "tenant_id"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "Client ID, used with Service Principal authentication",
            "required": false,
            "path_tokens": [
              "service_principal",
              "client_id"
            ]
          },
          {
            "name": "ClientSecret",
            "type": "custom",
            "description": "Client secret, used with Service Principal authentication",
            "required": false,
            "path_tokens": [
              "service_principal",
              "client_secret"
            ],
            "sensitive": true
          },
          {
            "name": "Cloud",
            "type": "custom",
            "description": "Azure Cloud to authenticate against, used with Service Principal authentication",
            "required": false,
            "path_tokens": [
              "cloud"
            ]
          },
          {
            "name": "EndPoint",
            "type": "string",
            "description": "Azure Event Hub endpoint triggering on the `Blob Create` event",
            "required": false,
            "path_tokens": [
              "event_hub",
              "endpoint"
            ]
          },
          {
            "name": "ContainerName",
            "type": "string",
            "description": "Name of the blob container with the logs (default = \"logs\")",
            "required": false,
            "default": "logs",
            "path_tokens": [
              "logs",
              "container_name"
            ]
          },
          {
            "name": "ContainerName",
            "type": "string",
            "description": "Name of the blob container with the traces (default = \"traces\")",
            "required": false,
            "default": "traces",
            "path_tokens": [
              "traces",
              "container_name"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "azureeventhub",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Connection",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "connection"
            ]
          },
          {
            "name": "Partition",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "partition"
            ]
          },
          {
            "name": "Offset",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "offset"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ]
          },
          {
            "name": "Format",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "format"
            ]
          },
          {
            "name": "ConsumerGroup",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "group"
            ]
          },
          {
            "name": "ApplySemanticConventions",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "apply_semantic_conventions"
            ]
          },
          {
            "name": "Logs",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "time_formats",
              "logs"
            ]
          },
          {
            "name": "Metrics",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "time_formats",
              "metrics"
            ]
          },
          {
            "name": "Traces",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "time_formats",
              "traces"
            ]
          },
          {
            "name": "PollRate",
            "type": "int",
            "description": "azeventhub lib specific",
            "required": false,
            "path_tokens": [
              "poll_rate"
            ]
          },
          {
            "name": "MaxPollEvents",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "max_poll_events"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awscloudwatch",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Region",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "Profile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "profile"
            ]
          },
          {
            "name": "IMDSEndpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "imds_endpoint"
            ]
          },
          {
            "name": "StartFrom",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "start_from"
            ]
          },
          {
            "name": "PollInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "time.Minute",
            "path_tokens": [
              "logs",
              "poll_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxEventsPerRequest",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "logs",
              "max_events_per_request"
            ]
          },
          {
            "name": "Prefix",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "groups",
              "autodiscover",
              "prefix"
            ]
          },
          {
            "name": "Pattern",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "groups",
              "autodiscover",
              "pattern"
            ]
          },
          {
            "name": "Limit",
            "type": "int",
            "description": "",
            "required": false,
            "default": 50,
            "path_tokens": [
              "logs",
              "groups",
              "autodiscover",
              "limit"
            ]
          },
          {
            "name": "Prefixes",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "groups",
              "autodiscover",
              "streams",
              "prefixes"
            ]
          },
          {
            "name": "Names",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "groups",
              "autodiscover",
              "streams",
              "names"
            ]
          },
          {
            "name": "NamedConfigs",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "groups",
              "named"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awscontainerinsight",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval is the interval at which metrics should be collected. The default is 60 second.",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "ContainerOrchestrator",
            "type": "string",
            "description": "ContainerOrchestrator is the type of container orchestration service, e.g. eks or ecs. The default is eks.",
            "required": false,
            "default": "eks",
            "path_tokens": [
              "container_orchestrator"
            ]
          },
          {
            "name": "TagService",
            "type": "bool",
            "description": "Whether to add the associated service name as attribute. The default is true",
            "required": false,
            "default": true,
            "path_tokens": [
              "add_service_as_attribute"
            ]
          },
          {
            "name": "PrefFullPodName",
            "type": "bool",
            "description": "The \"PodName\" attribute is set based on the name of the relevant controllers like Daemonset, Job, ReplicaSet, ReplicationController, ... If it cannot be set that way and PrefFullPodName is true, the \"PodName\" attribute is set to the pod's own name. The default value is false",
            "required": false,
            "default": false,
            "path_tokens": [
              "prefer_full_pod_name"
            ]
          },
          {
            "name": "AddFullPodNameMetricLabel",
            "type": "bool",
            "description": "The \"FullPodName\" attribute is the pod name including suffix If false FullPodName label is not added The default value is false",
            "required": false,
            "default": false,
            "path_tokens": [
              "add_full_pod_name_metric_label"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awsxray",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "cloudfoundry",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "rlp_gateway",
              "middlewares"
            ]
          },
          {
            "name": "ShardID",
            "type": "string",
            "description": "",
            "required": false,
            "default": "opentelemetry",
            "path_tokens": [
              "rlp_gateway",
              "shard_id"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "uaa",
              "endpoint"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "uaa",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "default": "admin",
            "path_tokens": [
              "uaa",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": true,
            "path_tokens": [
              "uaa",
              "password"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "cloudflare",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Secret",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "secret"
            ],
            "sensitive": true
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "logs",
              "endpoint"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "attributes"
            ]
          },
          {
            "name": "TimestampField",
            "type": "string",
            "description": "",
            "required": false,
            "default": "EdgeStartTimestamp",
            "path_tokens": [
              "logs",
              "timestamp_field"
            ]
          },
          {
            "name": "TimestampFormat",
            "type": "string",
            "description": "",
            "required": false,
            "default": "rfc3339",
            "path_tokens": [
              "logs",
              "timestamp_format"
            ]
          },
          {
            "name": "Separator",
            "type": "string",
            "description": "",
            "required": false,
            "default": ".",
            "path_tokens": [
              "logs",
              "separator"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "collectd",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "",
            "required": false,
            "default": "json",
            "path_tokens": [
              "encoding"
            ]
          },
          {
            "name": "AttributesPrefix",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "attributes_prefix"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "apachespark",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "block_manager",
              "disk",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "block_manager",
              "disk",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "block_manager",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "block_manager",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "compilation",
              "average_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "compilation",
              "average_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "compilation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "compilation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_class",
              "average_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_class",
              "average_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_class",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_class",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_method",
              "average_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_method",
              "average_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_method",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "generated_method",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "source_code",
              "average_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "source_code",
              "average_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "source_code",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "code_generator",
              "source_code",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "job",
              "active",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "job",
              "active",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "job",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "job",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "stage",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "stage",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "stage",
              "failed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "dag_scheduler",
              "stage",
              "failed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "gc",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "gc",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "gc",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "gc",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "execution",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "execution",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "jvm",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "jvm",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "pool",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "pool",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "storage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "executor",
              "memory",
              "storage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "file_cache_hits",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "file_cache_hits",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "files_discovered",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "files_discovered",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "hive_client_calls",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "hive_client_calls",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "parallel_listing_jobs",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "parallel_listing_jobs",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "partitions_fetched",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "hive_external_catalog",
              "partitions_fetched",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "jvm_cpu_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "jvm_cpu_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "dropped",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "dropped",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "posted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "posted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "processing_time",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "processing_time",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "queue_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "driver",
              "live_listener_bus",
              "queue_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "disk",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "disk",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "gc_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "gc_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "input_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "input_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "shuffle",
              "io",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "shuffle",
              "io",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "storage_memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "storage_memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "task",
              "active",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "task",
              "active",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "task",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "task",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "task",
              "result",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "task",
              "result",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "executor",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "stage",
              "active",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "stage",
              "active",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "stage",
              "result",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "stage",
              "result",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "task",
              "active",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "task",
              "active",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "task",
              "result",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "job",
              "task",
              "result",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "disk",
              "spilled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "disk",
              "spilled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "executor",
              "cpu_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "executor",
              "cpu_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "executor",
              "run_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "executor",
              "run_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "io",
              "records",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "io",
              "records",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "io",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "io",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "jvm_gc_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "jvm_gc_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "memory",
              "peak",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "memory",
              "peak",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "memory",
              "spilled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "memory",
              "spilled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "blocks_fetched",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "blocks_fetched",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "fetch_wait_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "fetch_wait_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "disk",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "disk",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "read",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "read",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "records",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "records",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "write",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "io",
              "write",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "write_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "shuffle",
              "write_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "task",
              "active",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "task",
              "active",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "task",
              "result",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "task",
              "result",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "task",
              "result_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "spark",
              "stage",
              "task",
              "result_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "application",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "executor",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "executor",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "executor",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "executor",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "job",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "job",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "job",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "job",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "attempt",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "attempt",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "attempt",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "attempt",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "spark",
              "stage",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "ApplicationNames",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "application_names"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    spark.driver.block_manager.disk.usage:\n      enabled: true\n    spark.driver.block_manager.memory.usage:\n      enabled: true\n    spark.driver.code_generator.compilation.average_time:\n      enabled: true\n    spark.driver.code_generator.compilation.count:\n      enabled: true\n    spark.driver.code_generator.generated_class.average_size:\n      enabled: true\n    spark.driver.code_generator.generated_class.count:\n      enabled: true\n    spark.driver.code_generator.generated_method.average_size:\n      enabled: true\n    spark.driver.code_generator.generated_method.count:\n      enabled: true\n    spark.driver.code_generator.source_code.average_size:\n      enabled: true\n    spark.driver.code_generator.source_code.operations:\n      enabled: true\n    spark.driver.dag_scheduler.job.active:\n      enabled: true\n    spark.driver.dag_scheduler.job.count:\n      enabled: true\n    spark.driver.dag_scheduler.stage.count:\n      enabled: true\n    spark.driver.dag_scheduler.stage.failed:\n      enabled: true\n    spark.driver.executor.gc.operations:\n      enabled: true\n    spark.driver.executor.gc.time:\n      enabled: true\n    spark.driver.executor.memory.execution:\n      enabled: true\n    spark.driver.executor.memory.jvm:\n      enabled: true\n    spark.driver.executor.memory.pool:\n      enabled: true\n    spark.driver.executor.memory.storage:\n      enabled: true\n    spark.driver.hive_external_catalog.file_cache_hits:\n      enabled: true\n    spark.driver.hive_external_catalog.files_discovered:\n      enabled: true\n    spark.driver.hive_external_catalog.hive_client_calls:\n      enabled: true\n    spark.driver.hive_external_catalog.parallel_listing_jobs:\n      enabled: true\n    spark.driver.hive_external_catalog.partitions_fetched:\n      enabled: true\n    spark.driver.jvm_cpu_time:\n      enabled: true\n    spark.driver.live_listener_bus.dropped:\n      enabled: true\n    spark.driver.live_listener_bus.posted:\n      enabled: true\n    spark.driver.live_listener_bus.processing_time.average:\n      enabled: true\n    spark.driver.live_listener_bus.queue_size:\n      enabled: true\n    spark.executor.disk.usage:\n      enabled: true\n    spark.executor.gc_time:\n      enabled: true\n    spark.executor.input_size:\n      enabled: true\n    spark.executor.memory.usage:\n      enabled: true\n    spark.executor.shuffle.io.size:\n      enabled: true\n    spark.executor.storage_memory.usage:\n      enabled: true\n    spark.executor.task.active:\n      enabled: true\n    spark.executor.task.limit:\n      enabled: true\n    spark.executor.task.result:\n      enabled: true\n    spark.executor.time:\n      enabled: true\n    spark.job.stage.active:\n      enabled: true\n    spark.job.stage.result:\n      enabled: true\n    spark.job.task.active:\n      enabled: true\n    spark.job.task.result:\n      enabled: true\n    spark.stage.disk.spilled:\n      enabled: true\n    spark.stage.executor.cpu_time:\n      enabled: true\n    spark.stage.executor.run_time:\n      enabled: true\n    spark.stage.io.records:\n      enabled: true\n    spark.stage.io.size:\n      enabled: true\n    spark.stage.jvm_gc_time:\n      enabled: true\n    spark.stage.memory.peak:\n      enabled: true\n    spark.stage.memory.spilled:\n      enabled: true\n    spark.stage.shuffle.blocks_fetched:\n      enabled: true\n    spark.stage.shuffle.fetch_wait_time:\n      enabled: true\n    spark.stage.shuffle.io.disk:\n      enabled: true\n    spark.stage.shuffle.io.read.size:\n      enabled: true\n    spark.stage.shuffle.io.records:\n      enabled: true\n    spark.stage.shuffle.io.write.size:\n      enabled: true\n    spark.stage.shuffle.write_time:\n      enabled: true\n    spark.stage.status:\n      enabled: true\n    spark.stage.task.active:\n      enabled: true\n    spark.stage.task.result:\n      enabled: true\n    spark.stage.task.result_size:\n      enabled: true\n  resource_attributes:\n    spark.application.id:\n      enabled: true\n    spark.application.name:\n      enabled: true\n    spark.executor.id:\n      enabled: true\n    spark.job.id:\n      enabled: true\n    spark.stage.attempt.id:\n      enabled: true\n    spark.stage.id:\n      enabled: true\nnone_set:\n  metrics:\n    spark.driver.block_manager.disk.usage:\n      enabled: false\n    spark.driver.block_manager.memory.usage:\n      enabled: false\n    spark.driver.code_generator.compilation.average_time:\n      enabled: false\n    spark.driver.code_generator.compilation.count:\n      enabled: false\n    spark.driver.code_generator.generated_class.average_size:\n      enabled: false\n    spark.driver.code_generator.generated_class.count:\n      enabled: false\n    spark.driver.code_generator.generated_method.average_size:\n      enabled: false\n    spark.driver.code_generator.generated_method.count:\n      enabled: false\n    spark.driver.code_generator.source_code.average_size:\n      enabled: false\n    spark.driver.code_generator.source_code.operations:\n      enabled: false\n    spark.driver.dag_scheduler.job.active:\n      enabled: false\n    spark.driver.dag_scheduler.job.count:\n      enabled: false\n    spark.driver.dag_scheduler.stage.count:\n      enabled: false\n    spark.driver.dag_scheduler.stage.failed:\n      enabled: false\n    spark.driver.executor.gc.operations:\n      enabled: false\n    spark.driver.executor.gc.time:\n      enabled: false\n    spark.driver.executor.memory.execution:\n      enabled: false\n    spark.driver.executor.memory.jvm:\n      enabled: false\n    spark.driver.executor.memory.pool:\n      enabled: false\n    spark.driver.executor.memory.storage:\n      enabled: false\n    spark.driver.hive_external_catalog.file_cache_hits:\n      enabled: false\n    spark.driver.hive_external_catalog.files_discovered:\n      enabled: false\n    spark.driver.hive_external_catalog.hive_client_calls:\n      enabled: false\n    spark.driver.hive_external_catalog.parallel_listing_jobs:\n      enabled: false\n    spark.driver.hive_external_catalog.partitions_fetched:\n      enabled: false\n    spark.driver.jvm_cpu_time:\n      enabled: false\n    spark.driver.live_listener_bus.dropped:\n      enabled: false\n    spark.driver.live_listener_bus.posted:\n      enabled: false\n    spark.driver.live_listener_bus.processing_time.average:\n      enabled: false\n    spark.driver.live_listener_bus.queue_size:\n      enabled: false\n    spark.executor.disk.usage:\n      enabled: false\n    spark.executor.gc_time:\n      enabled: false\n    spark.executor.input_size:\n      enabled: false\n    spark.executor.memory.usage:\n      enabled: false\n    spark.executor.shuffle.io.size:\n      enabled: false\n    spark.executor.storage_memory.usage:\n      enabled: false\n    spark.executor.task.active:\n      enabled: false\n    spark.executor.task.limit:\n      enabled: false\n    spark.executor.task.result:\n      enabled: false\n    spark.executor.time:\n      enabled: false\n    spark.job.stage.active:\n      enabled: false\n    spark.job.stage.result:\n      enabled: false\n    spark.job.task.active:\n      enabled: false\n    spark.job.task.result:\n      enabled: false\n    spark.stage.disk.spilled:\n      enabled: false\n    spark.stage.executor.cpu_time:\n      enabled: false\n    spark.stage.executor.run_time:\n      enabled: false\n    spark.stage.io.records:\n      enabled: false\n    spark.stage.io.size:\n      enabled: false\n    spark.stage.jvm_gc_time:\n      enabled: false\n    spark.stage.memory.peak:\n      enabled: false\n    spark.stage.memory.spilled:\n      enabled: false\n    spark.stage.shuffle.blocks_fetched:\n      enabled: false\n    spark.stage.shuffle.fetch_wait_time:\n      enabled: false\n    spark.stage.shuffle.io.disk:\n      enabled: false\n    spark.stage.shuffle.io.read.size:\n      enabled: false\n    spark.stage.shuffle.io.records:\n      enabled: false\n    spark.stage.shuffle.io.write.size:\n      enabled: false\n    spark.stage.shuffle.write_time:\n      enabled: false\n    spark.stage.status:\n      enabled: false\n    spark.stage.task.active:\n      enabled: false\n    spark.stage.task.result:\n      enabled: false\n    spark.stage.task.result_size:\n      enabled: false\n  resource_attributes:\n    spark.application.id:\n      enabled: false\n    spark.application.name:\n      enabled: false\n    spark.executor.id:\n      enabled: false\n    spark.job.id:\n      enabled: false\n    spark.stage.attempt.id:\n      enabled: false\n    spark.stage.id:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    spark.application.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    spark.application.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    spark.executor.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    spark.job.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    spark.stage.attempt.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    spark.stage.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    spark.application.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"spark.application.id-val\"\n    spark.application.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"spark.application.name-val\"\n    spark.executor.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"spark.executor.id-val\"\n    spark.job.id:\n      enabled: true\n      metrics_exclude:\n        - regexp: \".*\"\n    spark.stage.attempt.id:\n      enabled: true\n      metrics_exclude:\n        - regexp: \".*\"\n    spark.stage.id:\n      enabled: true\n      metrics_exclude:\n        - regexp: \".*\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "apache",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "connections",
              "async",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "connections",
              "async",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "cpu",
              "load",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "cpu",
              "load",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "current_connections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "current_connections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "load",
              "1",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "load",
              "1",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "load",
              "15",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "load",
              "15",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "load",
              "5",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "load",
              "5",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "request",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "request",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "requests",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "scoreboard",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "scoreboard",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "traffic",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "traffic",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "apache",
              "workers",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "apache",
              "workers",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "port",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "port",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "port",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "apache",
              "server",
              "port",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    apache.connections.async:\n      enabled: true\n    apache.cpu.load:\n      enabled: true\n    apache.cpu.time:\n      enabled: true\n    apache.current_connections:\n      enabled: true\n    apache.load.1:\n      enabled: true\n    apache.load.15:\n      enabled: true\n    apache.load.5:\n      enabled: true\n    apache.request.time:\n      enabled: true\n    apache.requests:\n      enabled: true\n    apache.scoreboard:\n      enabled: true\n    apache.traffic:\n      enabled: true\n    apache.uptime:\n      enabled: true\n    apache.workers:\n      enabled: true\n  resource_attributes:\n    apache.server.name:\n      enabled: true\n    apache.server.port:\n      enabled: true\nnone_set:\n  metrics:\n    apache.connections.async:\n      enabled: false\n    apache.cpu.load:\n      enabled: false\n    apache.cpu.time:\n      enabled: false\n    apache.current_connections:\n      enabled: false\n    apache.load.1:\n      enabled: false\n    apache.load.15:\n      enabled: false\n    apache.load.5:\n      enabled: false\n    apache.request.time:\n      enabled: false\n    apache.requests:\n      enabled: false\n    apache.scoreboard:\n      enabled: false\n    apache.traffic:\n      enabled: false\n    apache.uptime:\n      enabled: false\n    apache.workers:\n      enabled: false\n  resource_attributes:\n    apache.server.name:\n      enabled: false\n    apache.server.port:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    apache.server.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    apache.server.port:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    apache.server.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"apache.server.name-val\"\n    apache.server.port:\n      enabled: true\n      metrics_exclude:\n        - strict: \"apache.server.port-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "aerospike",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "default": "20s",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "default": "localhost:3000",
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "TLSName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tlsname"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "CollectClusterMetrics",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "collect_cluster_metrics"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "20s",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "disk",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "disk",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_cells",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_cells",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_false_positive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_false_positive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_points",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_points",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "geojson",
              "region_query_requests",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "memory",
              "free",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "memory",
              "free",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "query",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "query",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "scan",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "scan",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "transaction",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "namespace",
              "transaction",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "connection",
              "open",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "connection",
              "open",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "memory",
              "free",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "memory",
              "free",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "query",
              "tracked",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "aerospike",
              "node",
              "query",
              "tracked",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "namespace",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "namespace",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "namespace",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "namespace",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aerospike",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    aerospike.namespace.disk.available:\n      enabled: true\n    aerospike.namespace.geojson.region_query_cells:\n      enabled: true\n    aerospike.namespace.geojson.region_query_false_positive:\n      enabled: true\n    aerospike.namespace.geojson.region_query_points:\n      enabled: true\n    aerospike.namespace.geojson.region_query_requests:\n      enabled: true\n    aerospike.namespace.memory.free:\n      enabled: true\n    aerospike.namespace.memory.usage:\n      enabled: true\n    aerospike.namespace.query.count:\n      enabled: true\n    aerospike.namespace.scan.count:\n      enabled: true\n    aerospike.namespace.transaction.count:\n      enabled: true\n    aerospike.node.connection.count:\n      enabled: true\n    aerospike.node.connection.open:\n      enabled: true\n    aerospike.node.memory.free:\n      enabled: true\n    aerospike.node.query.tracked:\n      enabled: true\n  resource_attributes:\n    aerospike.namespace:\n      enabled: true\n    aerospike.node.name:\n      enabled: true\nnone_set:\n  metrics:\n    aerospike.namespace.disk.available:\n      enabled: false\n    aerospike.namespace.geojson.region_query_cells:\n      enabled: false\n    aerospike.namespace.geojson.region_query_false_positive:\n      enabled: false\n    aerospike.namespace.geojson.region_query_points:\n      enabled: false\n    aerospike.namespace.geojson.region_query_requests:\n      enabled: false\n    aerospike.namespace.memory.free:\n      enabled: false\n    aerospike.namespace.memory.usage:\n      enabled: false\n    aerospike.namespace.query.count:\n      enabled: false\n    aerospike.namespace.scan.count:\n      enabled: false\n    aerospike.namespace.transaction.count:\n      enabled: false\n    aerospike.node.connection.count:\n      enabled: false\n    aerospike.node.connection.open:\n      enabled: false\n    aerospike.node.memory.free:\n      enabled: false\n    aerospike.node.query.tracked:\n      enabled: false\n  resource_attributes:\n    aerospike.namespace:\n      enabled: false\n    aerospike.node.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    aerospike.namespace:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    aerospike.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    aerospike.namespace:\n      enabled: true\n      metrics_exclude:\n        - strict: \"aerospike.namespace-val\"\n    aerospike.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"aerospike.node.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "activedirectoryds",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "bind",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "bind",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "bind",
              "last_successful",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "bind",
              "last_successful",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "bind",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "bind",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "client",
              "session",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "client",
              "session",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "search",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "ldap",
              "search",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "name_cache",
              "hit_rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "name_cache",
              "hit_rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "notification",
              "queued",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "notification",
              "queued",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "operation",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "operation",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "network",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "network",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "object",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "object",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "operation",
              "pending",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "operation",
              "pending",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "property",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "property",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "sync",
              "object",
              "pending",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "sync",
              "object",
              "pending",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "sync",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "sync",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "value",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "replication",
              "value",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "security_descriptor_propagations_event",
              "queued",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "security_descriptor_propagations_event",
              "queued",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "suboperation",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "suboperation",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "thread",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "active_directory",
              "ds",
              "thread",
              "count",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    active_directory.ds.bind.rate:\n      enabled: true\n    active_directory.ds.ldap.bind.last_successful.time:\n      enabled: true\n    active_directory.ds.ldap.bind.rate:\n      enabled: true\n    active_directory.ds.ldap.client.session.count:\n      enabled: true\n    active_directory.ds.ldap.search.rate:\n      enabled: true\n    active_directory.ds.name_cache.hit_rate:\n      enabled: true\n    active_directory.ds.notification.queued:\n      enabled: true\n    active_directory.ds.operation.rate:\n      enabled: true\n    active_directory.ds.replication.network.io:\n      enabled: true\n    active_directory.ds.replication.object.rate:\n      enabled: true\n    active_directory.ds.replication.operation.pending:\n      enabled: true\n    active_directory.ds.replication.property.rate:\n      enabled: true\n    active_directory.ds.replication.sync.object.pending:\n      enabled: true\n    active_directory.ds.replication.sync.request.count:\n      enabled: true\n    active_directory.ds.replication.value.rate:\n      enabled: true\n    active_directory.ds.security_descriptor_propagations_event.queued:\n      enabled: true\n    active_directory.ds.suboperation.rate:\n      enabled: true\n    active_directory.ds.thread.count:\n      enabled: true\nnone_set:\n  metrics:\n    active_directory.ds.bind.rate:\n      enabled: false\n    active_directory.ds.ldap.bind.last_successful.time:\n      enabled: false\n    active_directory.ds.ldap.bind.rate:\n      enabled: false\n    active_directory.ds.ldap.client.session.count:\n      enabled: false\n    active_directory.ds.ldap.search.rate:\n      enabled: false\n    active_directory.ds.name_cache.hit_rate:\n      enabled: false\n    active_directory.ds.notification.queued:\n      enabled: false\n    active_directory.ds.operation.rate:\n      enabled: false\n    active_directory.ds.replication.network.io:\n      enabled: false\n    active_directory.ds.replication.object.rate:\n      enabled: false\n    active_directory.ds.replication.operation.pending:\n      enabled: false\n    active_directory.ds.replication.property.rate:\n      enabled: false\n    active_directory.ds.replication.sync.object.pending:\n      enabled: false\n    active_directory.ds.replication.sync.request.count:\n      enabled: false\n    active_directory.ds.replication.value.rate:\n      enabled: false\n    active_directory.ds.security_descriptor_propagations_event.queued:\n      enabled: false\n    active_directory.ds.suboperation.rate:\n      enabled: false\n    active_directory.ds.thread.count:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "bigip",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "availability",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "availability",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "data",
              "transmitted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "data",
              "transmitted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "enabled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "enabled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "packet",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "packet",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "session",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "node",
              "session",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "availability",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "availability",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "data",
              "transmitted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "data",
              "transmitted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "enabled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "enabled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "member",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "member",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "packet",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "packet",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "availability",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "availability",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "data",
              "transmitted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "data",
              "transmitted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "enabled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "enabled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "packet",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "packet",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "session",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "pool_member",
              "session",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "availability",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "availability",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "data",
              "transmitted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "data",
              "transmitted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "enabled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "enabled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "packet",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "packet",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "bigip",
              "virtual_server",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "ip_address",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "ip_address",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "ip_address",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "ip_address",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "ip_address",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "ip_address",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "ip_address",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "ip_address",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "pool_member",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "destination",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "destination",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "destination",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "destination",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "bigip",
              "virtual_server",
              "name",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    bigip.node.availability:\n      enabled: true\n    bigip.node.connection.count:\n      enabled: true\n    bigip.node.data.transmitted:\n      enabled: true\n    bigip.node.enabled:\n      enabled: true\n    bigip.node.packet.count:\n      enabled: true\n    bigip.node.request.count:\n      enabled: true\n    bigip.node.session.count:\n      enabled: true\n    bigip.pool.availability:\n      enabled: true\n    bigip.pool.connection.count:\n      enabled: true\n    bigip.pool.data.transmitted:\n      enabled: true\n    bigip.pool.enabled:\n      enabled: true\n    bigip.pool.member.count:\n      enabled: true\n    bigip.pool.packet.count:\n      enabled: true\n    bigip.pool.request.count:\n      enabled: true\n    bigip.pool_member.availability:\n      enabled: true\n    bigip.pool_member.connection.count:\n      enabled: true\n    bigip.pool_member.data.transmitted:\n      enabled: true\n    bigip.pool_member.enabled:\n      enabled: true\n    bigip.pool_member.packet.count:\n      enabled: true\n    bigip.pool_member.request.count:\n      enabled: true\n    bigip.pool_member.session.count:\n      enabled: true\n    bigip.virtual_server.availability:\n      enabled: true\n    bigip.virtual_server.connection.count:\n      enabled: true\n    bigip.virtual_server.data.transmitted:\n      enabled: true\n    bigip.virtual_server.enabled:\n      enabled: true\n    bigip.virtual_server.packet.count:\n      enabled: true\n    bigip.virtual_server.request.count:\n      enabled: true\n  resource_attributes:\n    bigip.node.ip_address:\n      enabled: true\n    bigip.node.name:\n      enabled: true\n    bigip.pool.name:\n      enabled: true\n    bigip.pool_member.ip_address:\n      enabled: true\n    bigip.pool_member.name:\n      enabled: true\n    bigip.virtual_server.destination:\n      enabled: true\n    bigip.virtual_server.name:\n      enabled: true\nnone_set:\n  metrics:\n    bigip.node.availability:\n      enabled: false\n    bigip.node.connection.count:\n      enabled: false\n    bigip.node.data.transmitted:\n      enabled: false\n    bigip.node.enabled:\n      enabled: false\n    bigip.node.packet.count:\n      enabled: false\n    bigip.node.request.count:\n      enabled: false\n    bigip.node.session.count:\n      enabled: false\n    bigip.pool.availability:\n      enabled: false\n    bigip.pool.connection.count:\n      enabled: false\n    bigip.pool.data.transmitted:\n      enabled: false\n    bigip.pool.enabled:\n      enabled: false\n    bigip.pool.member.count:\n      enabled: false\n    bigip.pool.packet.count:\n      enabled: false\n    bigip.pool.request.count:\n      enabled: false\n    bigip.pool_member.availability:\n      enabled: false\n    bigip.pool_member.connection.count:\n      enabled: false\n    bigip.pool_member.data.transmitted:\n      enabled: false\n    bigip.pool_member.enabled:\n      enabled: false\n    bigip.pool_member.packet.count:\n      enabled: false\n    bigip.pool_member.request.count:\n      enabled: false\n    bigip.pool_member.session.count:\n      enabled: false\n    bigip.virtual_server.availability:\n      enabled: false\n    bigip.virtual_server.connection.count:\n      enabled: false\n    bigip.virtual_server.data.transmitted:\n      enabled: false\n    bigip.virtual_server.enabled:\n      enabled: false\n    bigip.virtual_server.packet.count:\n      enabled: false\n    bigip.virtual_server.request.count:\n      enabled: false\n  resource_attributes:\n    bigip.node.ip_address:\n      enabled: false\n    bigip.node.name:\n      enabled: false\n    bigip.pool.name:\n      enabled: false\n    bigip.pool_member.ip_address:\n      enabled: false\n    bigip.pool_member.name:\n      enabled: false\n    bigip.virtual_server.destination:\n      enabled: false\n    bigip.virtual_server.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    bigip.node.ip_address:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    bigip.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    bigip.pool.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    bigip.pool_member.ip_address:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    bigip.pool_member.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    bigip.virtual_server.destination:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    bigip.virtual_server.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    bigip.node.ip_address:\n      enabled: true\n      metrics_exclude:\n        - strict: \"bigip.node.ip_address-val\"\n    bigip.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"bigip.node.name-val\"\n    bigip.pool.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"bigip.pool.name-val\"\n    bigip.pool_member.ip_address:\n      enabled: true\n      metrics_exclude:\n        - strict: \"bigip.pool_member.ip_address-val\"\n    bigip.pool_member.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"bigip.pool_member.name-val\"\n    bigip.virtual_server.destination:\n      enabled: true\n      metrics_exclude:\n        - strict: \"bigip.virtual_server.destination-val\"\n    bigip.virtual_server.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"bigip.virtual_server.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "azuremonitor",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "azuremonitor",
              "subscription",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "azuremonitor",
              "subscription",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "azuremonitor",
              "subscription_id",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "azuremonitor",
              "subscription_id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "azuremonitor",
              "tenant_id",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "azuremonitor",
              "tenant_id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Cloud",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "cloud"
            ]
          },
          {
            "name": "SubscriptionIDs",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "subscription_ids"
            ]
          },
          {
            "name": "DiscoverSubscriptions",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "discover_subscriptions"
            ]
          },
          {
            "name": "TenantID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tenant_id"
            ]
          },
          {
            "name": "ResourceGroups",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_groups"
            ]
          },
          {
            "name": "Services",
            "type": "stringArray",
            "description": "",
            "required": false,
            "default": [
              "Microsoft.EventGrid/eventSubscriptions",
              "Microsoft.EventGrid/topics",
              "Microsoft.EventGrid/domains",
              "Microsoft.EventGrid/extensionTopics",
              "Microsoft.EventGrid/systemTopics",
              "Microsoft.EventGrid/partnerNamespaces",
              "Microsoft.EventGrid/partnerTopics",
              "Microsoft.Logic/workflows",
              "Microsoft.Logic/integrationServiceEnvironments",
              "Microsoft.SignalRService/SignalR",
              "Microsoft.SignalRService/WebPubSub",
              "Microsoft.Batch/batchAccounts",
              "microsoft.insights/components",
              "microsoft.insights/autoscalesettings",
              "Microsoft.Automation/automationAccounts",
              "Microsoft.ContainerInstance/containerGroups",
              "Microsoft.Devices/IotHubs",
              "Microsoft.Devices/ProvisioningServices",
              "Microsoft.StorageSync/storageSyncServices",
              "Microsoft.DBforPostgreSQL/servers",
              "Microsoft.DBforPostgreSQL/flexibleServers",
              "Microsoft.DataShare/accounts",
              "Microsoft.AVS/privateClouds",
              "Microsoft.DataCollaboration/workspaces",
              "Microsoft.PowerBIDedicated/capacities",
              "Microsoft.ContainerService/managedClusters",
              "Microsoft.Sql/servers",
              "Microsoft.Sql/servers/databases",
              "Microsoft.Sql/servers/elasticpools",
              "Microsoft.Sql/managedInstances",
              "Microsoft.AnalysisServices/servers",
              "Microsoft.StreamAnalytics/streamingjobs",
              "microsoft.aadiam/azureADMetrics",
              "Microsoft.Cache/Redis",
              "Microsoft.Cache/redisEnterprise",
              "Microsoft.AppPlatform/Spring",
              "Microsoft.ContainerRegistry/registries",
              "Microsoft.EventHub/namespaces",
              "Microsoft.EventHub/clusters",
              "Microsoft.NetApp/netAppAccounts/capacityPools",
              "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
              "Microsoft.ClassicCompute/domainNames/slots/roles",
              "Microsoft.ClassicCompute/virtualMachines",
              "Microsoft.Compute/virtualMachines",
              "Microsoft.Compute/virtualMachineScaleSets",
              "Microsoft.Compute/virtualMachineScaleSets/virtualMachines",
              "Microsoft.Compute/cloudServices",
              "Microsoft.Compute/cloudServices/roles",
              "Microsoft.Peering/peerings",
              "Microsoft.Peering/peeringServices",
              "Microsoft.NotificationHubs/namespaces/notificationHubs",
              "Microsoft.AppConfiguration/configurationStores",
              "Microsoft.TimeSeriesInsights/environments",
              "Microsoft.TimeSeriesInsights/environments/eventsources",
              "Microsoft.ClassicStorage/storageAccounts",
              "Microsoft.ClassicStorage/storageAccounts/blobServices",
              "Microsoft.ClassicStorage/storageAccounts/tableServices",
              "Microsoft.ClassicStorage/storageAccounts/fileServices",
              "Microsoft.ClassicStorage/storageAccounts/queueServices",
              "Microsoft.Kusto/clusters",
              "Microsoft.MachineLearningServices/workspaces",
              "Microsoft.DBforMariaDB/servers",
              "Microsoft.Relay/namespaces",
              "Microsoft.OperationalInsights/workspaces",
              "Microsoft.Network/virtualNetworks",
              "Microsoft.Network/natGateways",
              "Microsoft.Network/publicIPAddresses",
              "Microsoft.Network/networkInterfaces",
              "Microsoft.Network/privateEndpoints",
              "Microsoft.Network/loadBalancers",
              "Microsoft.Network/networkWatchers/connectionMonitors",
              "Microsoft.Network/virtualNetworkGateways",
              "Microsoft.Network/connections",
              "Microsoft.Network/applicationGateways",
              "Microsoft.Network/dnszones",
              "Microsoft.Network/privateDnsZones",
              "Microsoft.Network/trafficmanagerprofiles",
              "Microsoft.Network/expressRouteCircuits",
              "Microsoft.Network/vpnGateways",
              "Microsoft.Network/p2sVpnGateways",
              "Microsoft.Network/expressRouteGateways",
              "Microsoft.Network/expressRoutePorts",
              "Microsoft.Network/azureFirewalls",
              "Microsoft.Network/privateLinkServices",
              "Microsoft.Network/frontdoors",
              "Microsoft.Network/virtualRouters",
              "Microsoft.Purview/accounts",
              "Microsoft.CognitiveServices/accounts",
              "Microsoft.Maps/accounts",
              "Microsoft.MixedReality/spatialAnchorsAccounts",
              "Microsoft.MixedReality/remoteRenderingAccounts",
              "Microsoft.DBforMySQL/servers",
              "Microsoft.DBforMySQL/flexibleServers",
              "Microsoft.DataBoxEdge/DataBoxEdgeDevices",
              "Microsoft.IoTCentral/IoTApps",
              "Microsoft.Web/staticSites",
              "Microsoft.Web/serverFarms",
              "Microsoft.Web/sites",
              "Microsoft.Web/sites/slots",
              "Microsoft.Web/hostingEnvironments",
              "Microsoft.Web/hostingEnvironments/multiRolePools",
              "Microsoft.Web/hostingEnvironments/workerPools",
              "Microsoft.Web/connections",
              "Microsoft.HDInsight/clusters",
              "Microsoft.Search/searchServices",
              "Microsoft.ServiceFabricMesh/applications",
              "Microsoft.HealthcareApis/services",
              "Microsoft.HealthcareApis/workspaces/analyticsconnectors",
              "Microsoft.HealthcareApis/workspaces/iotconnectors",
              "Microsoft.HealthcareApis/workspaces/fhirservices",
              "Microsoft.ApiManagement/service",
              "Microsoft.DataLakeAnalytics/accounts",
              "Microsoft.DocumentDB/databaseAccounts",
              "Microsoft.Synapse/workspaces",
              "Microsoft.Synapse/workspaces/bigDataPools",
              "Microsoft.Synapse/workspaces/sqlPools",
              "Microsoft.Synapse/workspaces/kustoPools",
              "Microsoft.Storage/storageAccounts",
              "Microsoft.Storage/storageAccounts/blobServices",
              "Microsoft.Storage/storageAccounts/tableServices",
              "Microsoft.Storage/storageAccounts/queueServices",
              "Microsoft.Storage/storageAccounts/fileServices",
              "Microsoft.Cdn/profiles",
              "Microsoft.Cdn/CdnWebApplicationFirewallPolicies",
              "Microsoft.KeyVault/vaults",
              "Microsoft.KeyVault/managedHSMs",
              "Microsoft.Media/mediaservices",
              "Microsoft.Media/mediaservices/streamingEndpoints",
              "Microsoft.Media/mediaservices/liveEvents",
              "Microsoft.DigitalTwins/digitalTwinsInstances",
              "Microsoft.DataFactory/dataFactories",
              "Microsoft.DataFactory/factories",
              "Microsoft.DataLakeStore/accounts",
              "Microsoft.ServiceBus/namespaces",
              "Microsoft.AAD/DomainServices",
              "Microsoft.Orbital/spacecrafts",
              "Microsoft.Orbital/contactProfiles",
              "Microsoft.Logic/IntegrationServiceEnvironments",
              "Microsoft.Logic/Workflows",
              "Microsoft.Batch/batchaccounts",
              "Microsoft.HybridContainerService/provisionedClusters",
              "microsoft.securitydetonation/chambers",
              "microsoft.hybridnetwork/networkfunctions",
              "Microsoft.DBForPostgreSQL/serverGroupsv2",
              "microsoft.avs/privateClouds",
              "Microsoft.StorageMover/storageMovers",
              "Microsoft.NetworkFunction/azureTrafficCollectors",
              "Microsoft.Cache/redis",
              "Microsoft.DataProtection/BackupVaults",
              "Microsoft.ConnectedVehicle/platformAccounts",
              "Microsoft.EventHub/Namespaces",
              "Microsoft.ConnectedCache/ispCustomers",
              "Microsoft.ConnectedCache/CacheNodes",
              "Microsoft.Compute/cloudservices",
              "microsoft.compute/disks",
              "Microsoft.Compute/virtualmachineScaleSets",
              "Wandisco.Fusion/migrators/liveDataMigrations",
              "Wandisco.Fusion/migrators",
              "Wandisco.Fusion/migrators/metadataMigrations",
              "Microsoft.VoiceServices/CommunicationsGateways",
              "microsoft.kubernetes/connectedClusters",
              "Microsoft.PlayFab/titles",
              "Microsoft.Communication/CommunicationServices",
              "Microsoft.ManagedNetworkFabric/networkDevices",
              "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
              "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
              "Microsoft.RecoveryServices/Vaults",
              "Microsoft.StorageCache/caches",
              "Microsoft.StorageCache/amlFilesystems",
              "microsoft.purview/accounts",
              "Microsoft.Network/applicationgateways",
              "Microsoft.Network/dnsForwardingRulesets",
              "microsoft.network/virtualnetworkgateways",
              "microsoft.network/vpngateways",
              "Microsoft.Network/dnsResolvers",
              "microsoft.network/bastionHosts",
              "microsoft.network/expressroutegateways",
              "microsoft.network/p2svpngateways",
              "Microsoft.Network/virtualHubs",
              "Microsoft.Web/containerapps",
              "Microsoft.Web/serverfarms",
              "Microsoft.Web/hostingenvironments/multirolepools",
              "Microsoft.Web/hostingenvironments/workerpools",
              "microsoft.singularity/accounts",
              "Microsoft.DocumentDB/DatabaseAccounts",
              "Microsoft.DocumentDB/cassandraClusters",
              "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
              "Microsoft.Cdn/cdnwebapplicationfirewallpolicies",
              "microsoft.keyvault/managedhsms",
              "Microsoft.Dashboard/grafana",
              "Microsoft.Cloudtest/hostedpools",
              "Microsoft.Cloudtest/pools",
              "Microsoft.Monitor/accounts",
              "Microsoft.App/containerapps",
              "Microsoft.App/managedEnvironments",
              "Microsoft.ServiceBus/Namespaces"
            ],
            "path_tokens": [
              "services"
            ]
          },
          {
            "name": "Metrics",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics"
            ]
          },
          {
            "name": "CacheResources",
            "type": "double",
            "description": "",
            "required": false,
            "default": 86400,
            "path_tokens": [
              "cache_resources"
            ]
          },
          {
            "name": "CacheResourcesDefinitions",
            "type": "double",
            "description": "",
            "required": false,
            "default": 86400,
            "path_tokens": [
              "cache_resources_definitions"
            ]
          },
          {
            "name": "MaximumNumberOfMetricsInACall",
            "type": "int",
            "description": "",
            "required": false,
            "default": 20,
            "path_tokens": [
              "maximum_number_of_metrics_in_a_call"
            ]
          },
          {
            "name": "MaximumNumberOfRecordsPerResource",
            "type": "int",
            "description": "",
            "required": false,
            "default": 10,
            "path_tokens": [
              "maximum_number_of_records_per_resource"
            ]
          },
          {
            "name": "AppendTagsAsAttributes",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "append_tags_as_attributes"
            ]
          },
          {
            "name": "UseBatchAPI",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "use_batch_api"
            ]
          },
          {
            "name": "Enabled",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "dimensions",
              "enabled"
            ]
          },
          {
            "name": "Overrides",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "dimensions",
              "overrides"
            ]
          },
          {
            "name": "MaximumResourcesPerBatch",
            "type": "int",
            "description": "",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "maximum_resources_per_batch"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Credentials",
            "type": "string",
            "description": "Deprecated: Credentials is deprecated.",
            "required": false,
            "default": "service_principal",
            "path_tokens": [
              "credentials"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "client_id"
            ]
          },
          {
            "name": "ClientSecret",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "client_secret"
            ],
            "sensitive": true
          },
          {
            "name": "FederatedTokenFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "federated_token_file"
            ],
            "sensitive": true
          }
        ],
        "examples": [
          "default:\nall_set:\n  resource_attributes:\n    azuremonitor.subscription:\n      enabled: true\n    azuremonitor.subscription_id:\n      enabled: true\n    azuremonitor.tenant_id:\n      enabled: true\nnone_set:\n  resource_attributes:\n    azuremonitor.subscription:\n      enabled: false\n    azuremonitor.subscription_id:\n      enabled: false\n    azuremonitor.tenant_id:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "carbon",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "TCPIdleTimeout",
            "type": "duration",
            "description": "TCPIdleTimeout is the timeout for idle TCP connections, it is ignored if transport being used is UDP.",
            "required": false,
            "default": "30s",
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "tcp_idle_timeout"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "chrony",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "frequency",
              "offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "frequency",
              "offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "skew",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "skew",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "stratum",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "stratum",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "correction",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "correction",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "last_offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "last_offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "rms_offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "rms_offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "root_delay",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "time",
              "root_delay",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is the published address or unix socket that allows clients to connect to: The allowed format is:   unix:///path/to/chronyd/unix.sock   udp://localhost:323 The default value is unix:///var/run/chrony/chronyd.sock",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    ntp.frequency.offset:\n      enabled: true\n    ntp.skew:\n      enabled: true\n    ntp.stratum:\n      enabled: true\n    ntp.time.correction:\n      enabled: true\n    ntp.time.last_offset:\n      enabled: true\n    ntp.time.rms_offset:\n      enabled: true\n    ntp.time.root_delay:\n      enabled: true\nnone_set:\n  metrics:\n    ntp.frequency.offset:\n      enabled: false\n    ntp.skew:\n      enabled: false\n    ntp.stratum:\n      enabled: false\n    ntp.time.correction:\n      enabled: false\n    ntp.time.last_offset:\n      enabled: false\n    ntp.time.rms_offset:\n      enabled: false\n    ntp.time.root_delay:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "couchdb",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "average_request_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "average_request_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "database",
              "open",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "database",
              "open",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "database",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "database",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "file_descriptor",
              "open",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "file_descriptor",
              "open",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "bulk_requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "bulk_requests",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "requests",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "responses",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "responses",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "views",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "couchdb",
              "httpd",
              "views",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "couchdb",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "couchdb",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "couchdb",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "couchdb",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    couchdb.average_request_time:\n      enabled: true\n    couchdb.database.open:\n      enabled: true\n    couchdb.database.operations:\n      enabled: true\n    couchdb.file_descriptor.open:\n      enabled: true\n    couchdb.httpd.bulk_requests:\n      enabled: true\n    couchdb.httpd.requests:\n      enabled: true\n    couchdb.httpd.responses:\n      enabled: true\n    couchdb.httpd.views:\n      enabled: true\n  resource_attributes:\n    couchdb.node.name:\n      enabled: true\nnone_set:\n  metrics:\n    couchdb.average_request_time:\n      enabled: false\n    couchdb.database.open:\n      enabled: false\n    couchdb.database.operations:\n      enabled: false\n    couchdb.file_descriptor.open:\n      enabled: false\n    couchdb.httpd.bulk_requests:\n      enabled: false\n    couchdb.httpd.requests:\n      enabled: false\n    couchdb.httpd.responses:\n      enabled: false\n    couchdb.httpd.views:\n      enabled: false\n  resource_attributes:\n    couchdb.node.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    couchdb.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    couchdb.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"couchdb.node.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "fluentforward",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ListenAddress",
            "type": "string",
            "description": "The address to listen on for incoming Fluent Forward events.  Should be of the form `\u003cip addr\u003e:\u003cport\u003e` (TCP) or `unix://\u003csocket_path\u003e` (Unix domain socket).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "envoyals",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "faro",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "expvar",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "buck_hash_sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "buck_hash_sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "frees",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "frees",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "gc_cpu_fraction",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "gc_cpu_fraction",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "gc_sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "gc_sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_alloc",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_alloc",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_idle",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_idle",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_inuse",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_inuse",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_objects",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_objects",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_released",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_released",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "heap_sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "last_pause",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "last_pause",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "lookups",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "lookups",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mallocs",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mallocs",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mcache_inuse",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mcache_inuse",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mcache_sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mcache_sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mspan_inuse",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mspan_inuse",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mspan_sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "mspan_sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "next_gc",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "next_gc",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "num_forced_gc",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "num_forced_gc",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "num_gc",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "num_gc",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "other_sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "other_sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "pause_total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "pause_total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "stack_inuse",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "stack_inuse",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "stack_sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "stack_sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "sys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "sys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "total_alloc",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "process",
              "runtime",
              "memstats",
              "total_alloc",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    process.runtime.memstats.buck_hash_sys:\n      enabled: true\n    process.runtime.memstats.frees:\n      enabled: true\n    process.runtime.memstats.gc_cpu_fraction:\n      enabled: true\n    process.runtime.memstats.gc_sys:\n      enabled: true\n    process.runtime.memstats.heap_alloc:\n      enabled: true\n    process.runtime.memstats.heap_idle:\n      enabled: true\n    process.runtime.memstats.heap_inuse:\n      enabled: true\n    process.runtime.memstats.heap_objects:\n      enabled: true\n    process.runtime.memstats.heap_released:\n      enabled: true\n    process.runtime.memstats.heap_sys:\n      enabled: true\n    process.runtime.memstats.last_pause:\n      enabled: true\n    process.runtime.memstats.lookups:\n      enabled: true\n    process.runtime.memstats.mallocs:\n      enabled: true\n    process.runtime.memstats.mcache_inuse:\n      enabled: true\n    process.runtime.memstats.mcache_sys:\n      enabled: true\n    process.runtime.memstats.mspan_inuse:\n      enabled: true\n    process.runtime.memstats.mspan_sys:\n      enabled: true\n    process.runtime.memstats.next_gc:\n      enabled: true\n    process.runtime.memstats.num_forced_gc:\n      enabled: true\n    process.runtime.memstats.num_gc:\n      enabled: true\n    process.runtime.memstats.other_sys:\n      enabled: true\n    process.runtime.memstats.pause_total:\n      enabled: true\n    process.runtime.memstats.stack_inuse:\n      enabled: true\n    process.runtime.memstats.stack_sys:\n      enabled: true\n    process.runtime.memstats.sys:\n      enabled: true\n    process.runtime.memstats.total_alloc:\n      enabled: true\nnone_set:\n  metrics:\n    process.runtime.memstats.buck_hash_sys:\n      enabled: false\n    process.runtime.memstats.frees:\n      enabled: false\n    process.runtime.memstats.gc_cpu_fraction:\n      enabled: false\n    process.runtime.memstats.gc_sys:\n      enabled: false\n    process.runtime.memstats.heap_alloc:\n      enabled: false\n    process.runtime.memstats.heap_idle:\n      enabled: false\n    process.runtime.memstats.heap_inuse:\n      enabled: false\n    process.runtime.memstats.heap_objects:\n      enabled: false\n    process.runtime.memstats.heap_released:\n      enabled: false\n    process.runtime.memstats.heap_sys:\n      enabled: false\n    process.runtime.memstats.last_pause:\n      enabled: false\n    process.runtime.memstats.lookups:\n      enabled: false\n    process.runtime.memstats.mallocs:\n      enabled: false\n    process.runtime.memstats.mcache_inuse:\n      enabled: false\n    process.runtime.memstats.mcache_sys:\n      enabled: false\n    process.runtime.memstats.mspan_inuse:\n      enabled: false\n    process.runtime.memstats.mspan_sys:\n      enabled: false\n    process.runtime.memstats.next_gc:\n      enabled: false\n    process.runtime.memstats.num_forced_gc:\n      enabled: false\n    process.runtime.memstats.num_gc:\n      enabled: false\n    process.runtime.memstats.other_sys:\n      enabled: false\n    process.runtime.memstats.pause_total:\n      enabled: false\n    process.runtime.memstats.stack_inuse:\n      enabled: false\n    process.runtime.memstats.stack_sys:\n      enabled: false\n    process.runtime.memstats.sys:\n      enabled: false\n    process.runtime.memstats.total_alloc:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "flinkmetrics",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "checkpoint",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "checkpoint",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "checkpoint",
              "in_progress",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "checkpoint",
              "in_progress",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "last_checkpoint",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "last_checkpoint",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "last_checkpoint",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "last_checkpoint",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "restart",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "job",
              "restart",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "class_loader",
              "classes_loaded",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "class_loader",
              "classes_loaded",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "cpu",
              "load",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "cpu",
              "load",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "gc",
              "collections",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "gc",
              "collections",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "gc",
              "collections",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "gc",
              "collections",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "direct",
              "total_capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "direct",
              "total_capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "direct",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "direct",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "heap",
              "committed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "heap",
              "committed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "heap",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "heap",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "heap",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "heap",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "mapped",
              "total_capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "mapped",
              "total_capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "mapped",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "mapped",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "metaspace",
              "committed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "metaspace",
              "committed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "metaspace",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "metaspace",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "metaspace",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "metaspace",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "nonheap",
              "committed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "nonheap",
              "committed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "nonheap",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "nonheap",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "nonheap",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "memory",
              "nonheap",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "threads",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "jvm",
              "threads",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "memory",
              "managed",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "memory",
              "managed",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "memory",
              "managed",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "memory",
              "managed",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "operator",
              "record",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "operator",
              "record",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "operator",
              "watermark",
              "output",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "operator",
              "watermark",
              "output",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "task",
              "record",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "flink",
              "task",
              "record",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "job",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "job",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "job",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "job",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "resource",
              "type",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "resource",
              "type",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "resource",
              "type",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "resource",
              "type",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "subtask",
              "index",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "subtask",
              "index",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "subtask",
              "index",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "subtask",
              "index",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "task",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "task",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "task",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "task",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "taskmanager",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "taskmanager",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "taskmanager",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "flink",
              "taskmanager",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    flink.job.checkpoint.count:\n      enabled: true\n    flink.job.checkpoint.in_progress:\n      enabled: true\n    flink.job.last_checkpoint.size:\n      enabled: true\n    flink.job.last_checkpoint.time:\n      enabled: true\n    flink.job.restart.count:\n      enabled: true\n    flink.jvm.class_loader.classes_loaded:\n      enabled: true\n    flink.jvm.cpu.load:\n      enabled: true\n    flink.jvm.cpu.time:\n      enabled: true\n    flink.jvm.gc.collections.count:\n      enabled: true\n    flink.jvm.gc.collections.time:\n      enabled: true\n    flink.jvm.memory.direct.total_capacity:\n      enabled: true\n    flink.jvm.memory.direct.used:\n      enabled: true\n    flink.jvm.memory.heap.committed:\n      enabled: true\n    flink.jvm.memory.heap.max:\n      enabled: true\n    flink.jvm.memory.heap.used:\n      enabled: true\n    flink.jvm.memory.mapped.total_capacity:\n      enabled: true\n    flink.jvm.memory.mapped.used:\n      enabled: true\n    flink.jvm.memory.metaspace.committed:\n      enabled: true\n    flink.jvm.memory.metaspace.max:\n      enabled: true\n    flink.jvm.memory.metaspace.used:\n      enabled: true\n    flink.jvm.memory.nonheap.committed:\n      enabled: true\n    flink.jvm.memory.nonheap.max:\n      enabled: true\n    flink.jvm.memory.nonheap.used:\n      enabled: true\n    flink.jvm.threads.count:\n      enabled: true\n    flink.memory.managed.total:\n      enabled: true\n    flink.memory.managed.used:\n      enabled: true\n    flink.operator.record.count:\n      enabled: true\n    flink.operator.watermark.output:\n      enabled: true\n    flink.task.record.count:\n      enabled: true\n  resource_attributes:\n    flink.job.name:\n      enabled: true\n    flink.resource.type:\n      enabled: true\n    flink.subtask.index:\n      enabled: true\n    flink.task.name:\n      enabled: true\n    flink.taskmanager.id:\n      enabled: true\n    host.name:\n      enabled: true\nnone_set:\n  metrics:\n    flink.job.checkpoint.count:\n      enabled: false\n    flink.job.checkpoint.in_progress:\n      enabled: false\n    flink.job.last_checkpoint.size:\n      enabled: false\n    flink.job.last_checkpoint.time:\n      enabled: false\n    flink.job.restart.count:\n      enabled: false\n    flink.jvm.class_loader.classes_loaded:\n      enabled: false\n    flink.jvm.cpu.load:\n      enabled: false\n    flink.jvm.cpu.time:\n      enabled: false\n    flink.jvm.gc.collections.count:\n      enabled: false\n    flink.jvm.gc.collections.time:\n      enabled: false\n    flink.jvm.memory.direct.total_capacity:\n      enabled: false\n    flink.jvm.memory.direct.used:\n      enabled: false\n    flink.jvm.memory.heap.committed:\n      enabled: false\n    flink.jvm.memory.heap.max:\n      enabled: false\n    flink.jvm.memory.heap.used:\n      enabled: false\n    flink.jvm.memory.mapped.total_capacity:\n      enabled: false\n    flink.jvm.memory.mapped.used:\n      enabled: false\n    flink.jvm.memory.metaspace.committed:\n      enabled: false\n    flink.jvm.memory.metaspace.max:\n      enabled: false\n    flink.jvm.memory.metaspace.used:\n      enabled: false\n    flink.jvm.memory.nonheap.committed:\n      enabled: false\n    flink.jvm.memory.nonheap.max:\n      enabled: false\n    flink.jvm.memory.nonheap.used:\n      enabled: false\n    flink.jvm.threads.count:\n      enabled: false\n    flink.memory.managed.total:\n      enabled: false\n    flink.memory.managed.used:\n      enabled: false\n    flink.operator.record.count:\n      enabled: false\n    flink.operator.watermark.output:\n      enabled: false\n    flink.task.record.count:\n      enabled: false\n  resource_attributes:\n    flink.job.name:\n      enabled: false\n    flink.resource.type:\n      enabled: false\n    flink.subtask.index:\n      enabled: false\n    flink.task.name:\n      enabled: false\n    flink.taskmanager.id:\n      enabled: false\n    host.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    flink.job.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    flink.resource.type:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    flink.subtask.index:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    flink.task.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    flink.taskmanager.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    host.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    flink.job.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"flink.job.name-val\"\n    flink.resource.type:\n      enabled: true\n      metrics_exclude:\n        - strict: \"jobmanager\"\n    flink.subtask.index:\n      enabled: true\n      metrics_exclude:\n        - strict: \"flink.subtask.index-val\"\n    flink.task.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"flink.task.name-val\"\n    flink.taskmanager.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"flink.taskmanager.id-val\"\n    host.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"host.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "elasticsearch",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "breaker",
              "memory",
              "estimated",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "breaker",
              "memory",
              "estimated",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "breaker",
              "memory",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "breaker",
              "memory",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "breaker",
              "tripped",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "breaker",
              "tripped",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "data_nodes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "data_nodes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "health",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "health",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "in_flight_fetch",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "in_flight_fetch",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "indices",
              "cache",
              "evictions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "indices",
              "cache",
              "evictions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "nodes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "nodes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "pending_tasks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "pending_tasks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "published_states",
              "differences",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "published_states",
              "differences",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "published_states",
              "full",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "published_states",
              "full",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "shards",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "shards",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "state_queue",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "state_queue",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "state_update",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "state_update",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "state_update",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "cluster",
              "state_update",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "cache",
              "evictions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "cache",
              "evictions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "cache",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "cache",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "cache",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "cache",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "documents",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "documents",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "completed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "completed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "merge",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "merge",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "merge",
              "docs_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "merge",
              "docs_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "merge",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "merge",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "operations",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "segments",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "segments",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "segments",
              "memory",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "segments",
              "memory",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "segments",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "segments",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "shards",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "shards",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "translog",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "translog",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "translog",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "index",
              "translog",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "indexing_pressure",
              "memory",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "indexing_pressure",
              "memory",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "indexing_pressure",
              "memory",
              "total",
              "primary_rejections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "indexing_pressure",
              "memory",
              "total",
              "primary_rejections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "indexing_pressure",
              "memory",
              "total",
              "replica_rejections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "indexing_pressure",
              "memory",
              "total",
              "replica_rejections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "memory",
              "indexing_pressure",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "memory",
              "indexing_pressure",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "evictions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "evictions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cache",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cluster",
              "connections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cluster",
              "connections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cluster",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "cluster",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "disk",
              "io",
              "read",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "disk",
              "io",
              "read",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "disk",
              "io",
              "write",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "disk",
              "io",
              "write",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "documents",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "documents",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "fs",
              "disk",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "fs",
              "disk",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "fs",
              "disk",
              "free",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "fs",
              "disk",
              "free",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "fs",
              "disk",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "fs",
              "disk",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "http",
              "connections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "http",
              "connections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "ingest",
              "documents",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "ingest",
              "documents",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "ingest",
              "documents",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "ingest",
              "documents",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "ingest",
              "operations",
              "failed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "ingest",
              "operations",
              "failed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "open_files",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "open_files",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "completed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "completed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "get",
              "completed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "get",
              "completed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "get",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "get",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "operations",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "pipeline",
              "ingest",
              "documents",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "pipeline",
              "ingest",
              "documents",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "pipeline",
              "ingest",
              "documents",
              "preprocessed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "pipeline",
              "ingest",
              "documents",
              "preprocessed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "pipeline",
              "ingest",
              "operations",
              "failed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "pipeline",
              "ingest",
              "operations",
              "failed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "script",
              "cache_evictions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "script",
              "cache_evictions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "script",
              "compilation_limit_triggered",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "script",
              "compilation_limit_triggered",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "script",
              "compilations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "script",
              "compilations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "segments",
              "memory",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "segments",
              "memory",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "shards",
              "data_set",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "shards",
              "data_set",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "shards",
              "reserved",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "shards",
              "reserved",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "shards",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "shards",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "thread_pool",
              "tasks",
              "finished",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "thread_pool",
              "tasks",
              "finished",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "thread_pool",
              "tasks",
              "queued",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "thread_pool",
              "tasks",
              "queued",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "thread_pool",
              "threads",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "thread_pool",
              "threads",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "translog",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "translog",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "translog",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "translog",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "translog",
              "uncommitted",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "node",
              "translog",
              "uncommitted",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "load_avg",
              "15m",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "load_avg",
              "15m",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "load_avg",
              "1m",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "load_avg",
              "1m",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "load_avg",
              "5m",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "load_avg",
              "5m",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "memory",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "os",
              "memory",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "process",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "process",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "process",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "process",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "process",
              "memory",
              "virtual",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "elasticsearch",
              "process",
              "memory",
              "virtual",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "classes",
              "loaded",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "classes",
              "loaded",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "gc",
              "collections",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "gc",
              "collections",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "gc",
              "collections",
              "elapsed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "gc",
              "collections",
              "elapsed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "committed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "committed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "heap",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "nonheap",
              "committed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "nonheap",
              "committed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "nonheap",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "nonheap",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "pool",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "pool",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "pool",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "memory",
              "pool",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "threads",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "jvm",
              "threads",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "cluster",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "cluster",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "cluster",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "cluster",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "index",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "index",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "index",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "index",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "version",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "version",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "version",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "elasticsearch",
              "node",
              "version",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Nodes",
            "type": "stringArray",
            "description": "Nodes defines the nodes to scrape. See https://www.elastic.co/guide/en/elasticsearch/reference/7.9/cluster.html#cluster-nodes for which selectors may be used here. If Nodes is empty, no nodes will be scraped.",
            "required": false,
            "path_tokens": [
              "nodes"
            ]
          },
          {
            "name": "SkipClusterMetrics",
            "type": "bool",
            "description": "SkipClusterMetrics indicates whether cluster level metrics from /_cluster/* endpoints should be scraped or not.",
            "required": false,
            "path_tokens": [
              "skip_cluster_metrics"
            ]
          },
          {
            "name": "Indices",
            "type": "stringArray",
            "description": "Indices defines the indices to scrape. See https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-stats.html#index-stats-api-path-params for which names are viable. If Indices is empty, no indices will be scraped.",
            "required": false,
            "path_tokens": [
              "indices"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username is the username used when making REST calls to elasticsearch. Must be specified if Password is. Not required.",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "Password is the password used when making REST calls to elasticsearch. Must be specified if Username is. Not required.",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    elasticsearch.breaker.memory.estimated:\n      enabled: true\n    elasticsearch.breaker.memory.limit:\n      enabled: true\n    elasticsearch.breaker.tripped:\n      enabled: true\n    elasticsearch.cluster.data_nodes:\n      enabled: true\n    elasticsearch.cluster.health:\n      enabled: true\n    elasticsearch.cluster.in_flight_fetch:\n      enabled: true\n    elasticsearch.cluster.indices.cache.evictions:\n      enabled: true\n    elasticsearch.cluster.nodes:\n      enabled: true\n    elasticsearch.cluster.pending_tasks:\n      enabled: true\n    elasticsearch.cluster.published_states.differences:\n      enabled: true\n    elasticsearch.cluster.published_states.full:\n      enabled: true\n    elasticsearch.cluster.shards:\n      enabled: true\n    elasticsearch.cluster.state_queue:\n      enabled: true\n    elasticsearch.cluster.state_update.count:\n      enabled: true\n    elasticsearch.cluster.state_update.time:\n      enabled: true\n    elasticsearch.index.cache.evictions:\n      enabled: true\n    elasticsearch.index.cache.memory.usage:\n      enabled: true\n    elasticsearch.index.cache.size:\n      enabled: true\n    elasticsearch.index.documents:\n      enabled: true\n    elasticsearch.index.operations.completed:\n      enabled: true\n    elasticsearch.index.operations.merge.current:\n      enabled: true\n    elasticsearch.index.operations.merge.docs_count:\n      enabled: true\n    elasticsearch.index.operations.merge.size:\n      enabled: true\n    elasticsearch.index.operations.time:\n      enabled: true\n    elasticsearch.index.segments.count:\n      enabled: true\n    elasticsearch.index.segments.memory:\n      enabled: true\n    elasticsearch.index.segments.size:\n      enabled: true\n    elasticsearch.index.shards.size:\n      enabled: true\n    elasticsearch.index.translog.operations:\n      enabled: true\n    elasticsearch.index.translog.size:\n      enabled: true\n    elasticsearch.indexing_pressure.memory.limit:\n      enabled: true\n    elasticsearch.indexing_pressure.memory.total.primary_rejections:\n      enabled: true\n    elasticsearch.indexing_pressure.memory.total.replica_rejections:\n      enabled: true\n    elasticsearch.memory.indexing_pressure:\n      enabled: true\n    elasticsearch.node.cache.count:\n      enabled: true\n    elasticsearch.node.cache.evictions:\n      enabled: true\n    elasticsearch.node.cache.memory.usage:\n      enabled: true\n    elasticsearch.node.cache.size:\n      enabled: true\n    elasticsearch.node.cluster.connections:\n      enabled: true\n    elasticsearch.node.cluster.io:\n      enabled: true\n    elasticsearch.node.disk.io.read:\n      enabled: true\n    elasticsearch.node.disk.io.write:\n      enabled: true\n    elasticsearch.node.documents:\n      enabled: true\n    elasticsearch.node.fs.disk.available:\n      enabled: true\n    elasticsearch.node.fs.disk.free:\n      enabled: true\n    elasticsearch.node.fs.disk.total:\n      enabled: true\n    elasticsearch.node.http.connections:\n      enabled: true\n    elasticsearch.node.ingest.documents:\n      enabled: true\n    elasticsearch.node.ingest.documents.current:\n      enabled: true\n    elasticsearch.node.ingest.operations.failed:\n      enabled: true\n    elasticsearch.node.open_files:\n      enabled: true\n    elasticsearch.node.operations.completed:\n      enabled: true\n    elasticsearch.node.operations.current:\n      enabled: true\n    elasticsearch.node.operations.get.completed:\n      enabled: true\n    elasticsearch.node.operations.get.time:\n      enabled: true\n    elasticsearch.node.operations.time:\n      enabled: true\n    elasticsearch.node.pipeline.ingest.documents.current:\n      enabled: true\n    elasticsearch.node.pipeline.ingest.documents.preprocessed:\n      enabled: true\n    elasticsearch.node.pipeline.ingest.operations.failed:\n      enabled: true\n    elasticsearch.node.script.cache_evictions:\n      enabled: true\n    elasticsearch.node.script.compilation_limit_triggered:\n      enabled: true\n    elasticsearch.node.script.compilations:\n      enabled: true\n    elasticsearch.node.segments.memory:\n      enabled: true\n    elasticsearch.node.shards.data_set.size:\n      enabled: true\n    elasticsearch.node.shards.reserved.size:\n      enabled: true\n    elasticsearch.node.shards.size:\n      enabled: true\n    elasticsearch.node.thread_pool.tasks.finished:\n      enabled: true\n    elasticsearch.node.thread_pool.tasks.queued:\n      enabled: true\n    elasticsearch.node.thread_pool.threads:\n      enabled: true\n    elasticsearch.node.translog.operations:\n      enabled: true\n    elasticsearch.node.translog.size:\n      enabled: true\n    elasticsearch.node.translog.uncommitted.size:\n      enabled: true\n    elasticsearch.os.cpu.load_avg.15m:\n      enabled: true\n    elasticsearch.os.cpu.load_avg.1m:\n      enabled: true\n    elasticsearch.os.cpu.load_avg.5m:\n      enabled: true\n    elasticsearch.os.cpu.usage:\n      enabled: true\n    elasticsearch.os.memory:\n      enabled: true\n    elasticsearch.process.cpu.time:\n      enabled: true\n    elasticsearch.process.cpu.usage:\n      enabled: true\n    elasticsearch.process.memory.virtual:\n      enabled: true\n    jvm.classes.loaded:\n      enabled: true\n    jvm.gc.collections.count:\n      enabled: true\n    jvm.gc.collections.elapsed:\n      enabled: true\n    jvm.memory.heap.committed:\n      enabled: true\n    jvm.memory.heap.max:\n      enabled: true\n    jvm.memory.heap.used:\n      enabled: true\n    jvm.memory.heap.utilization:\n      enabled: true\n    jvm.memory.nonheap.committed:\n      enabled: true\n    jvm.memory.nonheap.used:\n      enabled: true\n    jvm.memory.pool.max:\n      enabled: true\n    jvm.memory.pool.used:\n      enabled: true\n    jvm.threads.count:\n      enabled: true\n  resource_attributes:\n    elasticsearch.cluster.name:\n      enabled: true\n    elasticsearch.index.name:\n      enabled: true\n    elasticsearch.node.name:\n      enabled: true\n    elasticsearch.node.version:\n      enabled: true\nnone_set:\n  metrics:\n    elasticsearch.breaker.memory.estimated:\n      enabled: false\n    elasticsearch.breaker.memory.limit:\n      enabled: false\n    elasticsearch.breaker.tripped:\n      enabled: false\n    elasticsearch.cluster.data_nodes:\n      enabled: false\n    elasticsearch.cluster.health:\n      enabled: false\n    elasticsearch.cluster.in_flight_fetch:\n      enabled: false\n    elasticsearch.cluster.indices.cache.evictions:\n      enabled: false\n    elasticsearch.cluster.nodes:\n      enabled: false\n    elasticsearch.cluster.pending_tasks:\n      enabled: false\n    elasticsearch.cluster.published_states.differences:\n      enabled: false\n    elasticsearch.cluster.published_states.full:\n      enabled: false\n    elasticsearch.cluster.shards:\n      enabled: false\n    elasticsearch.cluster.state_queue:\n      enabled: false\n    elasticsearch.cluster.state_update.count:\n      enabled: false\n    elasticsearch.cluster.state_update.time:\n      enabled: false\n    elasticsearch.index.cache.evictions:\n      enabled: false\n    elasticsearch.index.cache.memory.usage:\n      enabled: false\n    elasticsearch.index.cache.size:\n      enabled: false\n    elasticsearch.index.documents:\n      enabled: false\n    elasticsearch.index.operations.completed:\n      enabled: false\n    elasticsearch.index.operations.merge.current:\n      enabled: false\n    elasticsearch.index.operations.merge.docs_count:\n      enabled: false\n    elasticsearch.index.operations.merge.size:\n      enabled: false\n    elasticsearch.index.operations.time:\n      enabled: false\n    elasticsearch.index.segments.count:\n      enabled: false\n    elasticsearch.index.segments.memory:\n      enabled: false\n    elasticsearch.index.segments.size:\n      enabled: false\n    elasticsearch.index.shards.size:\n      enabled: false\n    elasticsearch.index.translog.operations:\n      enabled: false\n    elasticsearch.index.translog.size:\n      enabled: false\n    elasticsearch.indexing_pressure.memory.limit:\n      enabled: false\n    elasticsearch.indexing_pressure.memory.total.primary_rejections:\n      enabled: false\n    elasticsearch.indexing_pressure.memory.total.replica_rejections:\n      enabled: false\n    elasticsearch.memory.indexing_pressure:\n      enabled: false\n    elasticsearch.node.cache.count:\n      enabled: false\n    elasticsearch.node.cache.evictions:\n      enabled: false\n    elasticsearch.node.cache.memory.usage:\n      enabled: false\n    elasticsearch.node.cache.size:\n      enabled: false\n    elasticsearch.node.cluster.connections:\n      enabled: false\n    elasticsearch.node.cluster.io:\n      enabled: false\n    elasticsearch.node.disk.io.read:\n      enabled: false\n    elasticsearch.node.disk.io.write:\n      enabled: false\n    elasticsearch.node.documents:\n      enabled: false\n    elasticsearch.node.fs.disk.available:\n      enabled: false\n    elasticsearch.node.fs.disk.free:\n      enabled: false\n    elasticsearch.node.fs.disk.total:\n      enabled: false\n    elasticsearch.node.http.connections:\n      enabled: false\n    elasticsearch.node.ingest.documents:\n      enabled: false\n    elasticsearch.node.ingest.documents.current:\n      enabled: false\n    elasticsearch.node.ingest.operations.failed:\n      enabled: false\n    elasticsearch.node.open_files:\n      enabled: false\n    elasticsearch.node.operations.completed:\n      enabled: false\n    elasticsearch.node.operations.current:\n      enabled: false\n    elasticsearch.node.operations.get.completed:\n      enabled: false\n    elasticsearch.node.operations.get.time:\n      enabled: false\n    elasticsearch.node.operations.time:\n      enabled: false\n    elasticsearch.node.pipeline.ingest.documents.current:\n      enabled: false\n    elasticsearch.node.pipeline.ingest.documents.preprocessed:\n      enabled: false\n    elasticsearch.node.pipeline.ingest.operations.failed:\n      enabled: false\n    elasticsearch.node.script.cache_evictions:\n      enabled: false\n    elasticsearch.node.script.compilation_limit_triggered:\n      enabled: false\n    elasticsearch.node.script.compilations:\n      enabled: false\n    elasticsearch.node.segments.memory:\n      enabled: false\n    elasticsearch.node.shards.data_set.size:\n      enabled: false\n    elasticsearch.node.shards.reserved.size:\n      enabled: false\n    elasticsearch.node.shards.size:\n      enabled: false\n    elasticsearch.node.thread_pool.tasks.finished:\n      enabled: false\n    elasticsearch.node.thread_pool.tasks.queued:\n      enabled: false\n    elasticsearch.node.thread_pool.threads:\n      enabled: false\n    elasticsearch.node.translog.operations:\n      enabled: false\n    elasticsearch.node.translog.size:\n      enabled: false\n    elasticsearch.node.translog.uncommitted.size:\n      enabled: false\n    elasticsearch.os.cpu.load_avg.15m:\n      enabled: false\n    elasticsearch.os.cpu.load_avg.1m:\n      enabled: false\n    elasticsearch.os.cpu.load_avg.5m:\n      enabled: false\n    elasticsearch.os.cpu.usage:\n      enabled: false\n    elasticsearch.os.memory:\n      enabled: false\n    elasticsearch.process.cpu.time:\n      enabled: false\n    elasticsearch.process.cpu.usage:\n      enabled: false\n    elasticsearch.process.memory.virtual:\n      enabled: false\n    jvm.classes.loaded:\n      enabled: false\n    jvm.gc.collections.count:\n      enabled: false\n    jvm.gc.collections.elapsed:\n      enabled: false\n    jvm.memory.heap.committed:\n      enabled: false\n    jvm.memory.heap.max:\n      enabled: false\n    jvm.memory.heap.used:\n      enabled: false\n    jvm.memory.heap.utilization:\n      enabled: false\n    jvm.memory.nonheap.committed:\n      enabled: false\n    jvm.memory.nonheap.used:\n      enabled: false\n    jvm.memory.pool.max:\n      enabled: false\n    jvm.memory.pool.used:\n      enabled: false\n    jvm.threads.count:\n      enabled: false\n  resource_attributes:\n    elasticsearch.cluster.name:\n      enabled: false\n    elasticsearch.index.name:\n      enabled: false\n    elasticsearch.node.name:\n      enabled: false\n    elasticsearch.node.version:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    elasticsearch.cluster.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    elasticsearch.index.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    elasticsearch.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    elasticsearch.node.version:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    elasticsearch.cluster.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"elasticsearch.cluster.name-val\"\n    elasticsearch.index.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"elasticsearch.index.name-val\"\n    elasticsearch.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"elasticsearch.node.name-val\"\n    elasticsearch.node.version:\n      enabled: true\n      metrics_exclude:\n        - strict: \"elasticsearch.node.version-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "googlecloudmonitoring",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ProjectID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "project_id"
            ]
          },
          {
            "name": "MetricsList",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics_list"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "gitlab",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "webhook",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "webhook",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "webhook",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "webhook",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "webhook",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "webhook",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "webhook",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "webhook",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "webhook",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "webhook",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "webhook",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "webhook",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "webhook",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "webhook",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "webhook",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "webhook",
              "middlewares"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "path for data collection. default is /events",
            "required": false,
            "path_tokens": [
              "webhook",
              "path"
            ]
          },
          {
            "name": "HealthPath",
            "type": "string",
            "description": "path for health check api. default is /health_check",
            "required": false,
            "path_tokens": [
              "webhook",
              "health_path"
            ]
          },
          {
            "name": "RequiredHeaders",
            "type": "stringMap",
            "description": "optional setting to set one or more required headers for all requests to have (except the health check)",
            "required": false,
            "path_tokens": [
              "webhook",
              "required_headers"
            ],
            "sensitive": true
          },
          {
            "name": "Customizable",
            "type": "stringMap",
            "description": "can be overwritten via required_headers",
            "required": false,
            "path_tokens": [
              "webhook",
              ""
            ]
          },
          {
            "name": "Fixed",
            "type": "stringMap",
            "description": "are not allowed to be overwritten",
            "required": false,
            "path_tokens": [
              "webhook",
              ""
            ]
          },
          {
            "name": "Secret",
            "type": "string",
            "description": "secret for webhook",
            "required": false,
            "path_tokens": [
              "webhook",
              "secret"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "filestats",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "atime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "atime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "ctime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "ctime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "mtime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "mtime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "file",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "path",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "path",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "path",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "file",
              "path",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Include",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "include"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    file.atime:\n      enabled: true\n    file.count:\n      enabled: true\n    file.ctime:\n      enabled: true\n    file.mtime:\n      enabled: true\n    file.size:\n      enabled: true\n  resource_attributes:\n    file.name:\n      enabled: true\n    file.path:\n      enabled: true\nnone_set:\n  metrics:\n    file.atime:\n      enabled: false\n    file.count:\n      enabled: false\n    file.ctime:\n      enabled: false\n    file.mtime:\n      enabled: false\n    file.size:\n      enabled: false\n  resource_attributes:\n    file.name:\n      enabled: false\n    file.path:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    file.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    file.path:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    file.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"file.name-val\"\n    file.path:\n      enabled: true\n      metrics_exclude:\n        - strict: \"file.path-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "googlecloudpubsub",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ProjectID",
            "type": "string",
            "description": "Google Cloud Project ID where the Pubsub client will connect to",
            "required": false,
            "path_tokens": [
              "project"
            ]
          },
          {
            "name": "UserAgent",
            "type": "string",
            "description": "User agent that will be used by the Pubsub client to connect to the service",
            "required": false,
            "path_tokens": [
              "user_agent"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Override of the Pubsub Endpoint, leave empty for the default endpoint",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "Only has effect if Endpoint is not \"\"",
            "required": false,
            "path_tokens": [
              "insecure"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Subscription",
            "type": "string",
            "description": "The fully qualified resource name of the Pubsub subscription",
            "required": false,
            "path_tokens": [
              "subscription"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Lock down the encoding of the payload, leave empty for attribute based detection",
            "required": false,
            "path_tokens": [
              "encoding"
            ]
          },
          {
            "name": "Compression",
            "type": "string",
            "description": "Lock down the compression of the payload, leave empty for attribute based detection",
            "required": false,
            "path_tokens": [
              "compression"
            ]
          },
          {
            "name": "IgnoreEncodingError",
            "type": "bool",
            "description": "Ignore errors when the configured encoder fails to decoding a PubSub messages",
            "required": false,
            "path_tokens": [
              "ignore_encoding_error"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "The client id that will be used by Pubsub to make load balancing decisions",
            "required": false,
            "path_tokens": [
              "client_id"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "dockerstats",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ContainerLabelsToMetricLabels",
            "type": "stringMap",
            "description": "A mapping of container label names to MetricDescriptor label keys. The corresponding container label value will become the DataPoint label value for the mapped name.  E.g. `io.kubernetes.container.name: container_spec_name` would result in a MetricDescriptor label called `container_spec_name` whose Metric DataPoints have the value of the `io.kubernetes.container.name` container label.",
            "required": false,
            "path_tokens": [
              "container_labels_to_metric_labels"
            ]
          },
          {
            "name": "EnvVarsToMetricLabels",
            "type": "stringMap",
            "description": "A mapping of container environment variable names to MetricDescriptor label keys.  The corresponding env var values become the DataPoint label value. E.g. `APP_VERSION: version` would result MetricDescriptors having a label key called `version` whose DataPoint label values are the value of the `APP_VERSION` environment variable configured for that particular container, if present.",
            "required": false,
            "path_tokens": [
              "env_vars_to_metric_labels"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_merged_recursive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_merged_recursive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_queued_recursive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_queued_recursive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_bytes_recursive",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_bytes_recursive",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_time_recursive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_time_recursive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_serviced_recursive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_serviced_recursive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_time_recursive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_time_recursive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_wait_time_recursive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_wait_time_recursive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "sectors_recursive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "sectors_recursive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "logical",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "logical",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "shares",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "shares",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "throttling_data",
              "periods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "throttling_data",
              "periods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "throttling_data",
              "throttled_periods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "throttling_data",
              "throttled_periods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "throttling_data",
              "throttled_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "throttling_data",
              "throttled_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "kernelmode",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "kernelmode",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "percpu",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "percpu",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "system",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "system",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "usermode",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "usermode",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "active_anon",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "active_anon",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "active_file",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "active_file",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "anon",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "anon",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "cache",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "cache",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "dirty",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "dirty",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "fails",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "fails",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "file",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "file",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "hierarchical_memory_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "hierarchical_memory_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "hierarchical_memsw_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "hierarchical_memsw_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "inactive_anon",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "inactive_anon",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "inactive_file",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "inactive_file",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "mapped_file",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "mapped_file",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "percent",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "percent",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgfault",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgfault",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgmajfault",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgmajfault",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgpgin",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgpgin",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgpgout",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "pgpgout",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "rss",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "rss",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "rss_huge",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "rss_huge",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_active_anon",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_active_anon",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_active_file",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_active_file",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_cache",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_cache",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_dirty",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_dirty",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_inactive_anon",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_inactive_anon",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_inactive_file",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_inactive_file",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_mapped_file",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_mapped_file",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgfault",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgfault",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgmajfault",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgmajfault",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgpgin",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgpgin",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgpgout",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_pgpgout",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_rss",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_rss",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_rss_huge",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_rss_huge",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_unevictable",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_unevictable",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_writeback",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "total_writeback",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "unevictable",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "unevictable",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "writeback",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "writeback",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_bytes",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_bytes",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_dropped",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_dropped",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_packets",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_packets",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_bytes",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_bytes",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_dropped",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_dropped",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_packets",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_packets",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "pids",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "pids",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "pids",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "pids",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "restarts",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "restarts",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "command_line",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "command_line",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "command_line",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "command_line",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "hostname",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "hostname",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "hostname",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "hostname",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    container.blockio.io_merged_recursive:\n      enabled: true\n    container.blockio.io_queued_recursive:\n      enabled: true\n    container.blockio.io_service_bytes_recursive:\n      enabled: true\n    container.blockio.io_service_time_recursive:\n      enabled: true\n    container.blockio.io_serviced_recursive:\n      enabled: true\n    container.blockio.io_time_recursive:\n      enabled: true\n    container.blockio.io_wait_time_recursive:\n      enabled: true\n    container.blockio.sectors_recursive:\n      enabled: true\n    container.cpu.limit:\n      enabled: true\n    container.cpu.logical.count:\n      enabled: true\n    container.cpu.shares:\n      enabled: true\n    container.cpu.throttling_data.periods:\n      enabled: true\n    container.cpu.throttling_data.throttled_periods:\n      enabled: true\n    container.cpu.throttling_data.throttled_time:\n      enabled: true\n    container.cpu.usage.kernelmode:\n      enabled: true\n    container.cpu.usage.percpu:\n      enabled: true\n    container.cpu.usage.system:\n      enabled: true\n    container.cpu.usage.total:\n      enabled: true\n    container.cpu.usage.usermode:\n      enabled: true\n    container.cpu.utilization:\n      enabled: true\n    container.memory.active_anon:\n      enabled: true\n    container.memory.active_file:\n      enabled: true\n    container.memory.anon:\n      enabled: true\n    container.memory.cache:\n      enabled: true\n    container.memory.dirty:\n      enabled: true\n    container.memory.fails:\n      enabled: true\n    container.memory.file:\n      enabled: true\n    container.memory.hierarchical_memory_limit:\n      enabled: true\n    container.memory.hierarchical_memsw_limit:\n      enabled: true\n    container.memory.inactive_anon:\n      enabled: true\n    container.memory.inactive_file:\n      enabled: true\n    container.memory.mapped_file:\n      enabled: true\n    container.memory.percent:\n      enabled: true\n    container.memory.pgfault:\n      enabled: true\n    container.memory.pgmajfault:\n      enabled: true\n    container.memory.pgpgin:\n      enabled: true\n    container.memory.pgpgout:\n      enabled: true\n    container.memory.rss:\n      enabled: true\n    container.memory.rss_huge:\n      enabled: true\n    container.memory.total_active_anon:\n      enabled: true\n    container.memory.total_active_file:\n      enabled: true\n    container.memory.total_cache:\n      enabled: true\n    container.memory.total_dirty:\n      enabled: true\n    container.memory.total_inactive_anon:\n      enabled: true\n    container.memory.total_inactive_file:\n      enabled: true\n    container.memory.total_mapped_file:\n      enabled: true\n    container.memory.total_pgfault:\n      enabled: true\n    container.memory.total_pgmajfault:\n      enabled: true\n    container.memory.total_pgpgin:\n      enabled: true\n    container.memory.total_pgpgout:\n      enabled: true\n    container.memory.total_rss:\n      enabled: true\n    container.memory.total_rss_huge:\n      enabled: true\n    container.memory.total_unevictable:\n      enabled: true\n    container.memory.total_writeback:\n      enabled: true\n    container.memory.unevictable:\n      enabled: true\n    container.memory.usage.limit:\n      enabled: true\n    container.memory.usage.max:\n      enabled: true\n    container.memory.usage.total:\n      enabled: true\n    container.memory.writeback:\n      enabled: true\n    container.network.io.usage.rx_bytes:\n      enabled: true\n    container.network.io.usage.rx_dropped:\n      enabled: true\n    container.network.io.usage.rx_errors:\n      enabled: true\n    container.network.io.usage.rx_packets:\n      enabled: true\n    container.network.io.usage.tx_bytes:\n      enabled: true\n    container.network.io.usage.tx_dropped:\n      enabled: true\n    container.network.io.usage.tx_errors:\n      enabled: true\n    container.network.io.usage.tx_packets:\n      enabled: true\n    container.pids.count:\n      enabled: true\n    container.pids.limit:\n      enabled: true\n    container.restarts:\n      enabled: true\n    container.uptime:\n      enabled: true\n  resource_attributes:\n    container.command_line:\n      enabled: true\n    container.hostname:\n      enabled: true\n    container.id:\n      enabled: true\n    container.image.id:\n      enabled: true\n    container.image.name:\n      enabled: true\n    container.name:\n      enabled: true\n    container.runtime:\n      enabled: true\nnone_set:\n  metrics:\n    container.blockio.io_merged_recursive:\n      enabled: false\n    container.blockio.io_queued_recursive:\n      enabled: false\n    container.blockio.io_service_bytes_recursive:\n      enabled: false\n    container.blockio.io_service_time_recursive:\n      enabled: false\n    container.blockio.io_serviced_recursive:\n      enabled: false\n    container.blockio.io_time_recursive:\n      enabled: false\n    container.blockio.io_wait_time_recursive:\n      enabled: false\n    container.blockio.sectors_recursive:\n      enabled: false\n    container.cpu.limit:\n      enabled: false\n    container.cpu.logical.count:\n      enabled: false\n    container.cpu.shares:\n      enabled: false\n    container.cpu.throttling_data.periods:\n      enabled: false\n    container.cpu.throttling_data.throttled_periods:\n      enabled: false\n    container.cpu.throttling_data.throttled_time:\n      enabled: false\n    container.cpu.usage.kernelmode:\n      enabled: false\n    container.cpu.usage.percpu:\n      enabled: false\n    container.cpu.usage.system:\n      enabled: false\n    container.cpu.usage.total:\n      enabled: false\n    container.cpu.usage.usermode:\n      enabled: false\n    container.cpu.utilization:\n      enabled: false\n    container.memory.active_anon:\n      enabled: false\n    container.memory.active_file:\n      enabled: false\n    container.memory.anon:\n      enabled: false\n    container.memory.cache:\n      enabled: false\n    container.memory.dirty:\n      enabled: false\n    container.memory.fails:\n      enabled: false\n    container.memory.file:\n      enabled: false\n    container.memory.hierarchical_memory_limit:\n      enabled: false\n    container.memory.hierarchical_memsw_limit:\n      enabled: false\n    container.memory.inactive_anon:\n      enabled: false\n    container.memory.inactive_file:\n      enabled: false\n    container.memory.mapped_file:\n      enabled: false\n    container.memory.percent:\n      enabled: false\n    container.memory.pgfault:\n      enabled: false\n    container.memory.pgmajfault:\n      enabled: false\n    container.memory.pgpgin:\n      enabled: false\n    container.memory.pgpgout:\n      enabled: false\n    container.memory.rss:\n      enabled: false\n    container.memory.rss_huge:\n      enabled: false\n    container.memory.total_active_anon:\n      enabled: false\n    container.memory.total_active_file:\n      enabled: false\n    container.memory.total_cache:\n      enabled: false\n    container.memory.total_dirty:\n      enabled: false\n    container.memory.total_inactive_anon:\n      enabled: false\n    container.memory.total_inactive_file:\n      enabled: false\n    container.memory.total_mapped_file:\n      enabled: false\n    container.memory.total_pgfault:\n      enabled: false\n    container.memory.total_pgmajfault:\n      enabled: false\n    container.memory.total_pgpgin:\n      enabled: false\n    container.memory.total_pgpgout:\n      enabled: false\n    container.memory.total_rss:\n      enabled: false\n    container.memory.total_rss_huge:\n      enabled: false\n    container.memory.total_unevictable:\n      enabled: false\n    container.memory.total_writeback:\n      enabled: false\n    container.memory.unevictable:\n      enabled: false\n    container.memory.usage.limit:\n      enabled: false\n    container.memory.usage.max:\n      enabled: false\n    container.memory.usage.total:\n      enabled: false\n    container.memory.writeback:\n      enabled: false\n    container.network.io.usage.rx_bytes:\n      enabled: false\n    container.network.io.usage.rx_dropped:\n      enabled: false\n    container.network.io.usage.rx_errors:\n      enabled: false\n    container.network.io.usage.rx_packets:\n      enabled: false\n    container.network.io.usage.tx_bytes:\n      enabled: false\n    container.network.io.usage.tx_dropped:\n      enabled: false\n    container.network.io.usage.tx_errors:\n      enabled: false\n    container.network.io.usage.tx_packets:\n      enabled: false\n    container.pids.count:\n      enabled: false\n    container.pids.limit:\n      enabled: false\n    container.restarts:\n      enabled: false\n    container.uptime:\n      enabled: false\n  resource_attributes:\n    container.command_line:\n      enabled: false\n    container.hostname:\n      enabled: false\n    container.id:\n      enabled: false\n    container.image.id:\n      enabled: false\n    container.image.name:\n      enabled: false\n    container.name:\n      enabled: false\n    container.runtime:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    container.command_line:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.hostname:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.image.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.image.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.runtime:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    container.command_line:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.command_line-val\"\n    container.hostname:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.hostname-val\"\n    container.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.id-val\"\n    container.image.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.image.id-val\"\n    container.image.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.image.name-val\"\n    container.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.name-val\"\n    container.runtime:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.runtime-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "jmx",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "JARPath",
            "type": "string",
            "description": "The path for the JMX Metric Gatherer or JMX Scraper JAR (/opt/opentelemetry-java-contrib-jmx-metrics.jar by default). Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "default": "/opt/opentelemetry-java-contrib-jmx-metrics.jar",
            "path_tokens": [
              "jar_path"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The Service URL or host:port for the target coerced to one of form: service:jmx:rmi:///jndi/rmi://\u003chost\u003e:\u003cport\u003e/jmxrmi. Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "TargetSystem",
            "type": "string",
            "description": "Comma-separated list of systems to monitor Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "target_system"
            ]
          },
          {
            "name": "TargetSource",
            "type": "string",
            "description": "The target source of metric definitions to use for the target system. Supported values are: auto, instrumentation and legacy. Supported by: jmx-scraper",
            "required": false,
            "path_tokens": [
              "target_source"
            ]
          },
          {
            "name": "JmxConfigs",
            "type": "string",
            "description": "Comma-separated list of paths to custom YAML metrics definition, mandatory when TargetSystem is not set. Supported by: jmx-scraper",
            "required": false,
            "path_tokens": [
              "jmx_configs"
            ]
          },
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "The duration in between groovy script invocations and metric exports (10 seconds by default). Will be converted to milliseconds. Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "default": "10s",
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The OTLP Receiver endpoint to send metrics to (\"0.0.0.0:\u003crandom open port\u003e\" by default).",
            "required": false,
            "default": "0.0.0.0:0",
            "path_tokens": [
              "otlp",
              "endpoint"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "otlp",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers to include in OTLP metric submission requests.",
            "required": false,
            "path_tokens": [
              "otlp",
              "headers"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "The JMX username Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "The JMX password Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "KeystorePath",
            "type": "string",
            "description": "The keystore path for SSL Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "keystore_path"
            ]
          },
          {
            "name": "KeystorePassword",
            "type": "custom",
            "description": "The keystore password for SSL Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "keystore_password"
            ],
            "sensitive": true
          },
          {
            "name": "KeystoreType",
            "type": "string",
            "description": "The keystore type for SSL Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "keystore_type"
            ]
          },
          {
            "name": "TruststorePath",
            "type": "string",
            "description": "The truststore path for SSL Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "truststore_path"
            ]
          },
          {
            "name": "TruststorePassword",
            "type": "custom",
            "description": "The truststore password for SSL Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "truststore_password"
            ],
            "sensitive": true
          },
          {
            "name": "TruststoreType",
            "type": "string",
            "description": "The truststore type for SSL Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "truststore_type"
            ]
          },
          {
            "name": "RemoteProfile",
            "type": "string",
            "description": "The JMX remote profile.  Should be one of: `\"SASL/PLAIN\"`, `\"SASL/DIGEST-MD5\"`, `\"SASL/CRAM-MD5\"`, `\"TLS SASL/PLAIN\"`, `\"TLS SASL/DIGEST-MD5\"`, or `\"TLS SASL/CRAM-MD5\"`, though no enforcement is applied. Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "remote_profile"
            ]
          },
          {
            "name": "Realm",
            "type": "string",
            "description": "The SASL/DIGEST-MD5 realm Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "realm"
            ]
          },
          {
            "name": "AdditionalJars",
            "type": "stringArray",
            "description": "Array of additional JARs to be added to the class path when launching the JMX Metric Gatherer JAR Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "additional_jars"
            ]
          },
          {
            "name": "ResourceAttributes",
            "type": "stringMap",
            "description": "Map of resource attributes used by the Java SDK Autoconfigure to set resource attributes Supported by: jmx-scraper and jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "resource_attributes"
            ]
          },
          {
            "name": "LogLevel",
            "type": "string",
            "description": "Log level used by the JMX metric gatherer. Should be one of: `\"trace\"`, `\"debug\"`, `\"info\"`, `\"warn\"`, `\"error\"`, `\"off\"` Supported by: jmx-metric-gatherer",
            "required": false,
            "path_tokens": [
              "log_level"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "googlecloudspanner",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "TopMetricsQueryMaxRows",
            "type": "int",
            "description": "",
            "required": false,
            "default": 100,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "top_metrics_query_max_rows"
            ]
          },
          {
            "name": "BackfillEnabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "backfill_enabled"
            ]
          },
          {
            "name": "CardinalityTotalLimit",
            "type": "int",
            "description": "",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "cardinality_total_limit"
            ]
          },
          {
            "name": "Projects",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "projects"
            ]
          },
          {
            "name": "HideTopnLockstatsRowrangestartkey",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "hide_topn_lockstats_rowrangestartkey"
            ]
          },
          {
            "name": "TruncateText",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "truncate_text"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "influxdb",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "jaeger",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_http",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_binary",
              "endpoint"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_binary",
              "queue_size"
            ]
          },
          {
            "name": "MaxPacketSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_binary",
              "max_packet_size"
            ]
          },
          {
            "name": "Workers",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_binary",
              "workers"
            ]
          },
          {
            "name": "SocketBufferSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_binary",
              "socket_buffer_size"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_compact",
              "endpoint"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_compact",
              "queue_size"
            ]
          },
          {
            "name": "MaxPacketSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_compact",
              "max_packet_size"
            ]
          },
          {
            "name": "Workers",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_compact",
              "workers"
            ]
          },
          {
            "name": "SocketBufferSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "thrift_compact",
              "socket_buffer_size"
            ]
          },
          {
            "name": "HostEndpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "host_endpoint"
            ]
          },
          {
            "name": "StrategyFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "strategy_file"
            ]
          },
          {
            "name": "StrategyFileReloadInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "strategy_file_reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "remote_sampling",
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "hostmetrics",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Scrapers",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "[]",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "RootPath",
            "type": "string",
            "description": "RootPath is the host's root directory (linux only).",
            "required": false,
            "path_tokens": [
              "root_path"
            ]
          },
          {
            "name": "MetadataCollectionInterval",
            "type": "duration",
            "description": "Collection interval for metadata. Metadata of the particular entity is collected when the entity changes. In addition metadata of all entities is collected periodically even if no changes happen. Setting the duration to 0 will disable periodic collection (however will not impact metadata collection on changes).",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "metadata_collection_interval"
            ],
            "format": "duration"
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    system.cpu.frequency:\n      enabled: true\n    system.cpu.logical.count:\n      enabled: true\n    system.cpu.physical.count:\n      enabled: true\n    system.cpu.time:\n      enabled: true\n    system.cpu.utilization:\n      enabled: true\nnone_set:\n  metrics:\n    system.cpu.frequency:\n      enabled: false\n    system.cpu.logical.count:\n      enabled: false\n    system.cpu.physical.count:\n      enabled: false\n    system.cpu.time:\n      enabled: false\n    system.cpu.utilization:\n      enabled: false\n",
          "default:\nall_set:\n  metrics:\n    system.disk.io:\n      enabled: true\n    system.disk.io_time:\n      enabled: true\n    system.disk.merged:\n      enabled: true\n    system.disk.operation_time:\n      enabled: true\n    system.disk.operations:\n      enabled: true\n    system.disk.pending_operations:\n      enabled: true\n    system.disk.weighted_io_time:\n      enabled: true\nnone_set:\n  metrics:\n    system.disk.io:\n      enabled: false\n    system.disk.io_time:\n      enabled: false\n    system.disk.merged:\n      enabled: false\n    system.disk.operation_time:\n      enabled: false\n    system.disk.operations:\n      enabled: false\n    system.disk.pending_operations:\n      enabled: false\n    system.disk.weighted_io_time:\n      enabled: false\n",
          "default:\nall_set:\n  metrics:\n    system.filesystem.inodes.usage:\n      enabled: true\n    system.filesystem.usage:\n      enabled: true\n    system.filesystem.utilization:\n      enabled: true\nnone_set:\n  metrics:\n    system.filesystem.inodes.usage:\n      enabled: false\n    system.filesystem.usage:\n      enabled: false\n    system.filesystem.utilization:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "github",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Scrapers",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "scrapers"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "time_to_approval",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "time_to_approval",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "time_to_merge",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "change",
              "time_to_merge",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "contributor",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "contributor",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "lines_delta",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "lines_delta",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "revisions_delta",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "revisions_delta",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "ref",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "repository",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcs",
              "repository",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "owner",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "owner",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "owner",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "owner",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "provider",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "provider",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "provider",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcs",
              "provider",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "webhook",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "webhook",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "webhook",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "webhook",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "webhook",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "webhook",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "webhook",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "webhook",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "webhook",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "webhook",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "webhook",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "webhook",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "webhook",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "webhook",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "webhook",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "webhook",
              "middlewares"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "path for data collection. Default is /events",
            "required": false,
            "default": "/events",
            "path_tokens": [
              "webhook",
              "path"
            ]
          },
          {
            "name": "HealthPath",
            "type": "string",
            "description": "path for health check api. Default is /health_check",
            "required": false,
            "default": "/health",
            "path_tokens": [
              "webhook",
              "health_path"
            ]
          },
          {
            "name": "RequiredHeaders",
            "type": "stringMap",
            "description": "optional setting to set one or more required headers for all requests to have (except the health check)",
            "required": false,
            "path_tokens": [
              "webhook",
              "required_headers"
            ],
            "sensitive": true
          },
          {
            "name": "Customizable",
            "type": "stringMap",
            "description": "can be overwritten via required_headers",
            "required": false,
            "path_tokens": [
              "webhook",
              ""
            ]
          },
          {
            "name": "Fixed",
            "type": "stringMap",
            "description": "are not allowed to be overwritten",
            "required": false,
            "path_tokens": [
              "webhook",
              ""
            ]
          },
          {
            "name": "Secret",
            "type": "string",
            "description": "secret for webhook",
            "required": false,
            "path_tokens": [
              "webhook",
              "secret"
            ],
            "sensitive": true
          },
          {
            "name": "ServiceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "webhook",
              "service_name"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    vcs.change.count:\n      enabled: true\n    vcs.change.duration:\n      enabled: true\n    vcs.change.time_to_approval:\n      enabled: true\n    vcs.change.time_to_merge:\n      enabled: true\n    vcs.contributor.count:\n      enabled: true\n    vcs.ref.count:\n      enabled: true\n    vcs.ref.lines_delta:\n      enabled: true\n    vcs.ref.revisions_delta:\n      enabled: true\n    vcs.ref.time:\n      enabled: true\n    vcs.repository.count:\n      enabled: true\n  resource_attributes:\n    vcs.owner.name:\n      enabled: true\n    vcs.provider.name:\n      enabled: true\nnone_set:\n  metrics:\n    vcs.change.count:\n      enabled: false\n    vcs.change.duration:\n      enabled: false\n    vcs.change.time_to_approval:\n      enabled: false\n    vcs.change.time_to_merge:\n      enabled: false\n    vcs.contributor.count:\n      enabled: false\n    vcs.ref.count:\n      enabled: false\n    vcs.ref.lines_delta:\n      enabled: false\n    vcs.ref.revisions_delta:\n      enabled: false\n    vcs.ref.time:\n      enabled: false\n    vcs.repository.count:\n      enabled: false\n  resource_attributes:\n    vcs.owner.name:\n      enabled: false\n    vcs.provider.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    vcs.owner.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcs.provider.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    vcs.owner.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcs.owner.name-val\"\n    vcs.provider.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcs.provider.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "huaweicloudces",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Nodes",
            "type": "stringArray",
            "description": "Nodes defines the nodes to scrape. See https://www.elastic.co/guide/en/elasticsearch/reference/7.9/cluster.html#cluster-nodes for which selectors may be used here. If Nodes is empty, no nodes will be scraped.",
            "required": false,
            "path_tokens": [
              "nodes"
            ]
          },
          {
            "name": "SkipClusterMetrics",
            "type": "bool",
            "description": "SkipClusterMetrics indicates whether cluster level metrics from /_cluster/* endpoints should be scraped or not.",
            "required": false,
            "path_tokens": [
              "skip_cluster_metrics"
            ]
          },
          {
            "name": "Indices",
            "type": "stringArray",
            "description": "Indices defines the indices to scrape. See https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-stats.html#index-stats-api-path-params for which names are viable. If Indices is empty, no indices will be scraped.",
            "required": false,
            "path_tokens": [
              "indices"
            ]
          },
          {
            "name": "AccessKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "access_key"
            ],
            "sensitive": true
          },
          {
            "name": "SecretKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "secret_key"
            ],
            "sensitive": true
          },
          {
            "name": "NoVerifySSL",
            "type": "bool",
            "description": "Number of seconds before timing out a request.",
            "required": false,
            "path_tokens": [
              "no_verify_ssl"
            ]
          },
          {
            "name": "ProxyAddress",
            "type": "string",
            "description": "Upload segments to AWS X-Ray through a proxy.",
            "required": false,
            "path_tokens": [
              "proxy_address"
            ]
          },
          {
            "name": "ProxyUser",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "proxy_user"
            ]
          },
          {
            "name": "ProxyPassword",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "proxy_password"
            ],
            "sensitive": true
          },
          {
            "name": "ProjectID",
            "type": "string",
            "description": "ProjectID is a string to reference project where metrics should be associated with. If ProjectID is not filled in, the SDK will automatically call the IAM service to query the project id corresponding to the region.",
            "required": false,
            "path_tokens": [
              "project_id"
            ]
          },
          {
            "name": "RegionID",
            "type": "string",
            "description": "RegionID is the ID of the CES region.",
            "required": false,
            "path_tokens": [
              "region_id"
            ]
          },
          {
            "name": "Period",
            "type": "int",
            "description": "How retrieved data from Cloud Eye is aggregated. Possible values are 1, 300, 1200, 3600, 14400, and 86400. 1: Cloud Eye performs no aggregation and displays raw data. 300: Cloud Eye aggregates data every 5 minutes. 1200: Cloud Eye aggregates data every 20 minutes. 3600: Cloud Eye aggregates data every hour. 14400: Cloud Eye aggregates data every 4 hours. 86400: Cloud Eye aggregates data every 24 hours. For details about the aggregation, see https://support.huaweicloud.com/intl/en-us/ces_faq/ces_faq_0009.html",
            "required": false,
            "path_tokens": [
              "period"
            ]
          },
          {
            "name": "Filter",
            "type": "string",
            "description": "Data aggregation method. The supported values ​​are max, min, average, sum, variance.",
            "required": false,
            "path_tokens": [
              "filter"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "haproxy",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "bytes",
              "input",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "bytes",
              "input",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "bytes",
              "output",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "bytes",
              "output",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "clients",
              "canceled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "clients",
              "canceled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "bypass",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "bypass",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "input",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "input",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "output",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "compression",
              "output",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "retries",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "retries",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "connections",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "downtime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "downtime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "failed_checks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "failed_checks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "denied",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "denied",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "queued",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "queued",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "redispatched",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "redispatched",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "requests",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "responses",
              "denied",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "responses",
              "denied",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "responses",
              "errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "responses",
              "errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "server_selected",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "server_selected",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "haproxy",
              "sessions",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "addr",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "addr",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "addr",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "addr",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "proxy_name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "proxy_name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "proxy_name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "proxy_name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "service_name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "service_name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "service_name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "haproxy",
              "service_name",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    haproxy.bytes.input:\n      enabled: true\n    haproxy.bytes.output:\n      enabled: true\n    haproxy.clients.canceled:\n      enabled: true\n    haproxy.compression.bypass:\n      enabled: true\n    haproxy.compression.count:\n      enabled: true\n    haproxy.compression.input:\n      enabled: true\n    haproxy.compression.output:\n      enabled: true\n    haproxy.connections.errors:\n      enabled: true\n    haproxy.connections.rate:\n      enabled: true\n    haproxy.connections.retries:\n      enabled: true\n    haproxy.connections.total:\n      enabled: true\n    haproxy.downtime:\n      enabled: true\n    haproxy.failed_checks:\n      enabled: true\n    haproxy.requests.denied:\n      enabled: true\n    haproxy.requests.errors:\n      enabled: true\n    haproxy.requests.queued:\n      enabled: true\n    haproxy.requests.rate:\n      enabled: true\n    haproxy.requests.redispatched:\n      enabled: true\n    haproxy.requests.total:\n      enabled: true\n    haproxy.responses.denied:\n      enabled: true\n    haproxy.responses.errors:\n      enabled: true\n    haproxy.server_selected.total:\n      enabled: true\n    haproxy.sessions.average:\n      enabled: true\n    haproxy.sessions.count:\n      enabled: true\n    haproxy.sessions.rate:\n      enabled: true\n    haproxy.sessions.total:\n      enabled: true\n  resource_attributes:\n    haproxy.addr:\n      enabled: true\n    haproxy.proxy_name:\n      enabled: true\n    haproxy.service_name:\n      enabled: true\nnone_set:\n  metrics:\n    haproxy.bytes.input:\n      enabled: false\n    haproxy.bytes.output:\n      enabled: false\n    haproxy.clients.canceled:\n      enabled: false\n    haproxy.compression.bypass:\n      enabled: false\n    haproxy.compression.count:\n      enabled: false\n    haproxy.compression.input:\n      enabled: false\n    haproxy.compression.output:\n      enabled: false\n    haproxy.connections.errors:\n      enabled: false\n    haproxy.connections.rate:\n      enabled: false\n    haproxy.connections.retries:\n      enabled: false\n    haproxy.connections.total:\n      enabled: false\n    haproxy.downtime:\n      enabled: false\n    haproxy.failed_checks:\n      enabled: false\n    haproxy.requests.denied:\n      enabled: false\n    haproxy.requests.errors:\n      enabled: false\n    haproxy.requests.queued:\n      enabled: false\n    haproxy.requests.rate:\n      enabled: false\n    haproxy.requests.redispatched:\n      enabled: false\n    haproxy.requests.total:\n      enabled: false\n    haproxy.responses.denied:\n      enabled: false\n    haproxy.responses.errors:\n      enabled: false\n    haproxy.server_selected.total:\n      enabled: false\n    haproxy.sessions.average:\n      enabled: false\n    haproxy.sessions.count:\n      enabled: false\n    haproxy.sessions.rate:\n      enabled: false\n    haproxy.sessions.total:\n      enabled: false\n  resource_attributes:\n    haproxy.addr:\n      enabled: false\n    haproxy.proxy_name:\n      enabled: false\n    haproxy.service_name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    haproxy.addr:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    haproxy.proxy_name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    haproxy.service_name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    haproxy.addr:\n      enabled: true\n      metrics_exclude:\n        - strict: \"haproxy.addr-val\"\n    haproxy.proxy_name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"haproxy.proxy_name-val\"\n    haproxy.service_name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"haproxy.service_name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "datadog",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout of the http server",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "TraceIDCacheSize",
            "type": "int",
            "description": "TraceIDCacheSize sets the cache size for the 64 bits to 128 bits mapping",
            "required": false,
            "default": 100,
            "path_tokens": [
              "trace_id_cache_size"
            ]
          },
          {
            "name": "Behavior",
            "type": "string",
            "description": "Behavior sets how the `/intake` endpoint should behave. The value should be one of: `disable` (default) - disable the endpoint entirely `proxy` - proxy the requests to Datadog itself",
            "required": false,
            "path_tokens": [
              "intake",
              "behavior"
            ]
          },
          {
            "name": "Key",
            "type": "custom",
            "description": "Key is the Datadog API key to associate your Agent's data with your organization. Create a new API key here: https://app.datadoghq.com/account/settings",
            "required": false,
            "path_tokens": [
              "intake",
              "proxy",
              "api",
              "key"
            ],
            "sensitive": true
          },
          {
            "name": "Site",
            "type": "string",
            "description": "Site is the site of the Datadog intake to send data to. The default value is \"datadoghq.com\".",
            "required": false,
            "path_tokens": [
              "intake",
              "proxy",
              "api",
              "site"
            ]
          },
          {
            "name": "FailOnInvalidKey",
            "type": "bool",
            "description": "FailOnInvalidKey states whether to exit at startup on invalid API key. The default value is false.",
            "required": false,
            "path_tokens": [
              "intake",
              "proxy",
              "api",
              "fail_on_invalid_key"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "iis",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "application_pool",
              "state",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "application_pool",
              "state",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "application_pool",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "application_pool",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "connection",
              "active",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "connection",
              "active",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "connection",
              "anonymous",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "connection",
              "anonymous",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "connection",
              "attempt",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "connection",
              "attempt",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "network",
              "blocked",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "network",
              "blocked",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "network",
              "file",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "network",
              "file",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "network",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "network",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "queue",
              "age",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "queue",
              "age",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "queue",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "queue",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "rejected",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "request",
              "rejected",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "thread",
              "active",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "thread",
              "active",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "iis",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "application_pool",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "application_pool",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "application_pool",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "application_pool",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "site",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "site",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "site",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "iis",
              "site",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    iis.application_pool.state:\n      enabled: true\n    iis.application_pool.uptime:\n      enabled: true\n    iis.connection.active:\n      enabled: true\n    iis.connection.anonymous:\n      enabled: true\n    iis.connection.attempt.count:\n      enabled: true\n    iis.network.blocked:\n      enabled: true\n    iis.network.file.count:\n      enabled: true\n    iis.network.io:\n      enabled: true\n    iis.request.count:\n      enabled: true\n    iis.request.queue.age.max:\n      enabled: true\n    iis.request.queue.count:\n      enabled: true\n    iis.request.rejected:\n      enabled: true\n    iis.thread.active:\n      enabled: true\n    iis.uptime:\n      enabled: true\n  resource_attributes:\n    iis.application_pool:\n      enabled: true\n    iis.site:\n      enabled: true\nnone_set:\n  metrics:\n    iis.application_pool.state:\n      enabled: false\n    iis.application_pool.uptime:\n      enabled: false\n    iis.connection.active:\n      enabled: false\n    iis.connection.anonymous:\n      enabled: false\n    iis.connection.attempt.count:\n      enabled: false\n    iis.network.blocked:\n      enabled: false\n    iis.network.file.count:\n      enabled: false\n    iis.network.io:\n      enabled: false\n    iis.request.count:\n      enabled: false\n    iis.request.queue.age.max:\n      enabled: false\n    iis.request.queue.count:\n      enabled: false\n    iis.request.rejected:\n      enabled: false\n    iis.thread.active:\n      enabled: false\n    iis.uptime:\n      enabled: false\n  resource_attributes:\n    iis.application_pool:\n      enabled: false\n    iis.site:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    iis.application_pool:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    iis.site:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    iis.application_pool:\n      enabled: true\n      metrics_exclude:\n        - strict: \"iis.application_pool-val\"\n    iis.site:\n      enabled: true\n      metrics_exclude:\n        - strict: \"iis.site-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "httpcheck",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "client",
              "connection",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "client",
              "connection",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "client",
              "request",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "client",
              "request",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "dns",
              "lookup",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "dns",
              "lookup",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "error",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "error",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "response",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "response",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "response",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "response",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "tls",
              "cert_remaining",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "tls",
              "cert_remaining",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "tls",
              "handshake",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "tls",
              "handshake",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "validation",
              "failed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "validation",
              "failed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "validation",
              "passed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "httpcheck",
              "validation",
              "passed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Targets",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "targets"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    httpcheck.client.connection.duration:\n      enabled: true\n    httpcheck.client.request.duration:\n      enabled: true\n    httpcheck.dns.lookup.duration:\n      enabled: true\n    httpcheck.duration:\n      enabled: true\n    httpcheck.error:\n      enabled: true\n    httpcheck.response.duration:\n      enabled: true\n    httpcheck.response.size:\n      enabled: true\n    httpcheck.status:\n      enabled: true\n    httpcheck.tls.cert_remaining:\n      enabled: true\n    httpcheck.tls.handshake.duration:\n      enabled: true\n    httpcheck.validation.failed:\n      enabled: true\n    httpcheck.validation.passed:\n      enabled: true\nnone_set:\n  metrics:\n    httpcheck.client.connection.duration:\n      enabled: false\n    httpcheck.client.request.duration:\n      enabled: false\n    httpcheck.dns.lookup.duration:\n      enabled: false\n    httpcheck.duration:\n      enabled: false\n    httpcheck.error:\n      enabled: false\n    httpcheck.response.duration:\n      enabled: false\n    httpcheck.response.size:\n      enabled: false\n    httpcheck.status:\n      enabled: false\n    httpcheck.tls.cert_remaining:\n      enabled: false\n    httpcheck.tls.handshake.duration:\n      enabled: false\n    httpcheck.validation.failed:\n      enabled: false\n    httpcheck.validation.passed:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "kafka",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Brokers",
            "type": "stringArray",
            "description": "Brokers holds the list of Kafka bootstrap servers (default localhost:9092).",
            "required": false,
            "path_tokens": [
              "brokers"
            ]
          },
          {
            "name": "ResolveCanonicalBootstrapServersOnly",
            "type": "bool",
            "description": "ResolveCanonicalBootstrapServersOnly configures the Kafka client to perform a DNS lookup on each of the provided brokers, and then perform a reverse lookup on the resulting IPs to obtain the canonical hostnames to use as the bootstrap servers. This can be required in SASL environments.",
            "required": false,
            "path_tokens": [
              "resolve_canonical_bootstrap_servers_only"
            ]
          },
          {
            "name": "ProtocolVersion",
            "type": "string",
            "description": "ProtocolVersion defines the Kafka protocol version that the client will assume it is running against.",
            "required": false,
            "path_tokens": [
              "protocol_version"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "ClientID holds the client ID advertised to Kafka, which can be used for enforcing ACLs, throttling quotas, and more (default \"otel-collector\")",
            "required": false,
            "path_tokens": [
              "client_id"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "plain_text",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "plain_text",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username to be used on authentication",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "Password to be used on authentication",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Mechanism",
            "type": "string",
            "description": "SASL Mechanism to be used, possible values are: (PLAIN, AWS_MSK_IAM_OAUTHBEARER, SCRAM-SHA-256 or SCRAM-SHA-512).",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "mechanism"
            ]
          },
          {
            "name": "Version",
            "type": "int",
            "description": "SASL Protocol Version to be used, possible values are: (0, 1). Defaults to 0.",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "version"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Region is the AWS region the MSK cluster is based in",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "aws_msk",
              "region"
            ]
          },
          {
            "name": "ServiceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "service_name"
            ]
          },
          {
            "name": "Realm",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "realm"
            ]
          },
          {
            "name": "UseKeyTab",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "use_keytab"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "ConfigPath",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "config_file"
            ]
          },
          {
            "name": "KeyTabPath",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "keytab_file"
            ]
          },
          {
            "name": "DisablePAFXFAST",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "disable_fast_negotiation"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Full",
            "type": "bool",
            "description": "Whether to maintain a full set of metadata for all topics, or just the minimal set that has been necessary so far. The full set is simpler and usually more convenient, but can take up a substantial amount of memory if you have many topics and partitions. Defaults to true.",
            "required": false,
            "path_tokens": [
              "metadata",
              "full"
            ]
          },
          {
            "name": "RefreshInterval",
            "type": "duration",
            "description": "RefreshInterval controls the frequency at which cluster metadata is refreshed. Defaults to 10 minutes.",
            "required": false,
            "path_tokens": [
              "metadata",
              "refresh_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Max",
            "type": "int",
            "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election or at startup (default 3).",
            "required": false,
            "path_tokens": [
              "metadata",
              "retry",
              "max"
            ]
          },
          {
            "name": "Backoff",
            "type": "duration",
            "description": "How long to wait for leader election to occur before retrying (default 250ms). Similar to the JVM's `retry.backoff.ms`.",
            "required": false,
            "path_tokens": [
              "metadata",
              "retry",
              "backoff"
            ],
            "format": "duration"
          },
          {
            "name": "RackID",
            "type": "string",
            "description": "RackID provides the rack identifier for this client to enable rack-aware replica selection when supported by the brokers. This maps to Kafka's standard \"client.rack\" setting. By default, this is empty.",
            "required": false,
            "path_tokens": [
              "rack_id"
            ]
          },
          {
            "name": "SessionTimeout",
            "type": "duration",
            "description": "SessionTimeout controls the Kafka consumer group session timeout. The session timeout is used to detect the consumer's liveness.",
            "required": false,
            "path_tokens": [
              "session_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HeartbeatInterval",
            "type": "duration",
            "description": "HeartbeatInterval controls the Kafka consumer group coordination heartbeat interval. Heartbeats ensure the consumer's session remains active.",
            "required": false,
            "path_tokens": [
              "heartbeat_interval"
            ],
            "format": "duration"
          },
          {
            "name": "GroupID",
            "type": "string",
            "description": "GroupID specifies the ID of the consumer group that will be consuming messages from (default \"otel-collector\").",
            "required": false,
            "path_tokens": [
              "group_id"
            ]
          },
          {
            "name": "InitialOffset",
            "type": "string",
            "description": "InitialOffset specifies the initial offset to use if no offset was previously committed. Must be `latest` or `earliest` (default \"latest\").",
            "required": false,
            "path_tokens": [
              "initial_offset"
            ]
          },
          {
            "name": "Enable",
            "type": "bool",
            "description": "Whether or not to auto-commit updated offsets back to the broker. (default enabled).",
            "required": false,
            "path_tokens": [
              "autocommit",
              "enable"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "How frequently to commit updated offsets. Ineffective unless auto-commit is enabled (default 1s)",
            "required": false,
            "path_tokens": [
              "autocommit",
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "MinFetchSize",
            "type": "int",
            "description": "The minimum bytes per fetch from Kafka (default \"1\")",
            "required": false,
            "path_tokens": [
              "min_fetch_size"
            ]
          },
          {
            "name": "DefaultFetchSize",
            "type": "int",
            "description": "The default bytes per fetch from Kafka (default \"1048576\")",
            "required": false,
            "path_tokens": [
              "default_fetch_size"
            ]
          },
          {
            "name": "MaxFetchSize",
            "type": "int",
            "description": "The maximum bytes per fetch from Kafka (default \"0\", no limit)",
            "required": false,
            "path_tokens": [
              "max_fetch_size"
            ]
          },
          {
            "name": "MaxFetchWait",
            "type": "duration",
            "description": "The maximum amount of time to wait for MinFetchSize bytes to be available before the broker returns a response (default 250ms)",
            "required": false,
            "path_tokens": [
              "max_fetch_wait"
            ],
            "format": "duration"
          },
          {
            "name": "GroupRebalanceStrategy",
            "type": "string",
            "description": "RebalanceStrategy specifies the strategy to use for partition assignment. Possible values are \"range\", \"roundrobin\", and \"sticky\". Defaults to \"range\".",
            "required": false,
            "path_tokens": [
              "group_rebalance_strategy"
            ]
          },
          {
            "name": "GroupInstanceID",
            "type": "string",
            "description": "GroupInstanceID specifies the ID of the consumer",
            "required": false,
            "path_tokens": [
              "group_instance_id"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic from which messages of the signal type should be consumed. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_logs",
            "path_tokens": [
              "logs",
              "topic"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the expected encoding of messages for the signal type Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "logs",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic from which messages of the signal type should be consumed. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_metrics",
            "path_tokens": [
              "metrics",
              "topic"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the expected encoding of messages for the signal type Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "metrics",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic from which messages of the signal type should be consumed. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_spans",
            "path_tokens": [
              "traces",
              "topic"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the expected encoding of messages for the signal type Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "traces",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic from which messages of the signal type should be consumed. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_profiles",
            "path_tokens": [
              "profiles",
              "topic"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the expected encoding of messages for the signal type Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "profiles",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic from which to consume data. Topic has no default. If explicitly specified, it will take precedence over the default values of Logs.Topic, Traces.Topic, and Metrics.Topic. Deprecated [v0.124.0]: Use Logs.Topic, Traces.Topic, and Metrics.Topic.",
            "required": false,
            "path_tokens": [
              "topic"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the expected encoding of messages (default \"otlp_proto\") Encoding has no default. If explicitly specified, it will take precedence over the default values of Logs.Encoding, Traces.Encoding, and Metrics.Encoding. Deprecated [v0.124.0]: Use Logs.Encoding, Traces.Encoding, and Metrics.Encoding.",
            "required": false,
            "path_tokens": [
              "encoding"
            ]
          },
          {
            "name": "After",
            "type": "bool",
            "description": "If true, the messages are marked after the pipeline execution",
            "required": false,
            "default": false,
            "path_tokens": [
              "message_marking",
              "after"
            ]
          },
          {
            "name": "OnError",
            "type": "bool",
            "description": "If false, only the successfully processed messages are marked. This only applies to non-permanent errors. It has no impact if After is set to false. Note: this can block the entire partition in case a message processing returns a non-permanent error.",
            "required": false,
            "default": false,
            "path_tokens": [
              "message_marking",
              "on_error"
            ]
          },
          {
            "name": "OnPermanentError",
            "type": "bool",
            "description": "If false, only the successfully processed messages are marked. This only applies to permanent errors. It has no impact if After is set to false. Default value inherits from OnError for backward compatibility. Note: this can block the entire partition in case a message processing returns a permanent error.",
            "required": false,
            "default": false,
            "path_tokens": [
              "message_marking",
              "on_permanent_error"
            ]
          },
          {
            "name": "ExtractHeaders",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "header_extraction",
              "extract_headers"
            ]
          },
          {
            "name": "Headers",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "header_extraction",
              "headers"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "error_backoff",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "error_backoff",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "error_backoff",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "error_backoff",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "error_backoff",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "error_backoff",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "telemetry",
              "metrics",
              "kafka_receiver_records_delay",
              "enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "loki",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "middlewares"
            ]
          },
          {
            "name": "KeepTimestamp",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "use_incoming_timestamp"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "k8sevents",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "context"
            ]
          },
          {
            "name": "Namespaces",
            "type": "stringArray",
            "description": "List of ‘namespaces’ to collect events from.",
            "required": false,
            "path_tokens": [
              "namespaces"
            ]
          },
          {
            "name": "makeClient",
            "type": "custom",
            "description": "For mocking",
            "required": false,
            "path_tokens": [
              "make_client"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "k8slog",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Mode",
            "type": "string",
            "description": "Mode represents the mode of the k8slog receiver. Valid values are: - \"daemonset-stdout\": (default) otel is deployed as a daemonset and collects logs from stdout of containers. Will be supported in the future: - \"daemonset-file\": otel is deployed as a daemonset and collects logs from files inside containers. - \"sidecar\": otel is deployed as a sidecar and collects logs from files.",
            "required": false,
            "path_tokens": [
              "discovery",
              "mode"
            ]
          },
          {
            "name": "NodeFromEnv",
            "type": "string",
            "description": "NodeFromEnv represents the environment variable which contains the node name.",
            "required": false,
            "default": "KUBE_NODE_NAME",
            "path_tokens": [
              "discovery",
              "node_from_env"
            ]
          },
          {
            "name": "HostRoot",
            "type": "string",
            "description": "HostRoot represents the path which is used to mount the host's root filesystem.",
            "required": false,
            "default": "/host_root",
            "path_tokens": [
              "discovery",
              "host_root"
            ]
          },
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "discovery",
              "k8s_api",
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "discovery",
              "k8s_api",
              "context"
            ]
          },
          {
            "name": "RuntimeAPIs",
            "type": "array",
            "description": "RuntimeAPIs represents the configuration for the runtime APIs.",
            "required": false,
            "path_tokens": [
              "discovery",
              "runtime_apis"
            ]
          },
          {
            "name": "Filter",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "discovery",
              "filter"
            ]
          },
          {
            "name": "Metadata",
            "type": "stringArray",
            "description": "Metadata represents the list of metadata fields to extract from pod. TODO: supported metadata fields and default values.",
            "required": false,
            "path_tokens": [
              "extract",
              "metadata"
            ]
          },
          {
            "name": "Annotations",
            "type": "array",
            "description": "Annotations represents the rules to extract from pod annotations.",
            "required": false,
            "path_tokens": [
              "extract",
              "annotations"
            ]
          },
          {
            "name": "Labels",
            "type": "array",
            "description": "Labels represents the rules to extract from pod labels.",
            "required": false,
            "path_tokens": [
              "extract",
              "labels"
            ]
          },
          {
            "name": "Env",
            "type": "array",
            "description": "Env represents the rules to extract from container environment variables.",
            "required": false,
            "path_tokens": [
              "extract",
              "env"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "memcached",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "bytes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "bytes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "commands",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "commands",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "connections",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "connections",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "connections",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "connections",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "current_items",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "current_items",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "evictions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "evictions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "network",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "network",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "operation_hit_ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "operation_hit_ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "threads",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "memcached",
              "threads",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    memcached.bytes:\n      enabled: true\n    memcached.commands:\n      enabled: true\n    memcached.connections.current:\n      enabled: true\n    memcached.connections.total:\n      enabled: true\n    memcached.cpu.usage:\n      enabled: true\n    memcached.current_items:\n      enabled: true\n    memcached.evictions:\n      enabled: true\n    memcached.network:\n      enabled: true\n    memcached.operation_hit_ratio:\n      enabled: true\n    memcached.operations:\n      enabled: true\n    memcached.threads:\n      enabled: true\nnone_set:\n  metrics:\n    memcached.bytes:\n      enabled: false\n    memcached.commands:\n      enabled: false\n    memcached.connections.current:\n      enabled: false\n    memcached.connections.total:\n      enabled: false\n    memcached.cpu.usage:\n      enabled: false\n    memcached.current_items:\n      enabled: false\n    memcached.evictions:\n      enabled: false\n    memcached.network:\n      enabled: false\n    memcached.operation_hit_ratio:\n      enabled: false\n    memcached.operations:\n      enabled: false\n    memcached.threads:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "k8sobjects",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "context"
            ]
          },
          {
            "name": "Objects",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "objects"
            ]
          },
          {
            "name": "ErrorMode",
            "type": "enum",
            "description": "",
            "required": false,
            "default": "propagate",
            "path_tokens": [
              "error_mode"
            ],
            "enum_values": [
              "ignore",
              "propagate",
              "silent"
            ]
          },
          {
            "name": "IncludeInitialState",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "include_initial_state"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "k8s_leader_elector",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "k8s_leader_elector",
              "[]"
            ]
          },
          {
            "name": "makeDiscoveryClient",
            "type": "custom",
            "description": "For mocking purposes only.",
            "required": false,
            "path_tokens": [
              "make_discovery_client"
            ]
          },
          {
            "name": "makeDynamicClient",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "make_dynamic_client"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "libhoney",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "http",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "http",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "http",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "http",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "http",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "http",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "http",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "http",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "http",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "http",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "http",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "http",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "http",
              "middlewares"
            ]
          },
          {
            "name": "TracesURLPaths",
            "type": "stringArray",
            "description": "The URL path to receive traces on. If omitted \"/\" will be used.",
            "required": false,
            "path_tokens": [
              "http",
              "traces_url_paths"
            ]
          },
          {
            "name": "AuthAPI",
            "type": "string",
            "description": "",
            "required": false,
            "default": "",
            "path_tokens": [
              "auth_api"
            ]
          },
          {
            "name": "Wrapper",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "wrapper"
            ]
          },
          {
            "name": "ServiceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "resources",
              "service_name"
            ]
          },
          {
            "name": "LibraryName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "scopes",
              "library_name"
            ]
          },
          {
            "name": "LibraryVersion",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "scopes",
              "library_version"
            ]
          },
          {
            "name": "TraceID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "attributes",
              "trace_id"
            ]
          },
          {
            "name": "ParentID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "attributes",
              "parent_id"
            ]
          },
          {
            "name": "SpanID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "attributes",
              "span_id"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "attributes",
              "name"
            ]
          },
          {
            "name": "Error",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "attributes",
              "error"
            ]
          },
          {
            "name": "SpanKind",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "attributes",
              "spankind"
            ]
          },
          {
            "name": "DurationFields",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "fields",
              "attributes",
              "durationFields"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "netflow",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Scheme",
            "type": "string",
            "description": "The scheme defines the type of flow data that the listener will receive The scheme must be one of sflow, netflow, or flow",
            "required": false,
            "default": "netflow",
            "path_tokens": [
              "scheme"
            ]
          },
          {
            "name": "Hostname",
            "type": "string",
            "description": "The hostname or IP address that the listener will bind to",
            "required": false,
            "path_tokens": [
              "hostname"
            ]
          },
          {
            "name": "Port",
            "type": "int",
            "description": "The port that the listener will bind to",
            "required": false,
            "default": 2055,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "port"
            ]
          },
          {
            "name": "Sockets",
            "type": "int",
            "description": "The number of sockets that the listener will use",
            "required": false,
            "default": 1,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "sockets"
            ]
          },
          {
            "name": "Workers",
            "type": "int",
            "description": "The number of workers that the listener will use to decode incoming flow messages By default it will be two times the number of sockets Ideally set this to the number of CPU cores",
            "required": false,
            "default": 2,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "workers"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "The size of the queue that the listener will use This is a buffer that will hold flow messages before they are processed by a worker",
            "required": false,
            "default": "1_000",
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "queue_size"
            ]
          },
          {
            "name": "SendRaw",
            "type": "bool",
            "description": "SendRaw determines whether to send raw flow messages instead of parsing them",
            "required": false,
            "path_tokens": [
              "send_raw"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "kafkametrics",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Brokers",
            "type": "stringArray",
            "description": "Brokers holds the list of Kafka bootstrap servers (default localhost:9092).",
            "required": false,
            "path_tokens": [
              "brokers"
            ]
          },
          {
            "name": "ResolveCanonicalBootstrapServersOnly",
            "type": "bool",
            "description": "ResolveCanonicalBootstrapServersOnly configures the Kafka client to perform a DNS lookup on each of the provided brokers, and then perform a reverse lookup on the resulting IPs to obtain the canonical hostnames to use as the bootstrap servers. This can be required in SASL environments.",
            "required": false,
            "path_tokens": [
              "resolve_canonical_bootstrap_servers_only"
            ]
          },
          {
            "name": "ProtocolVersion",
            "type": "string",
            "description": "ProtocolVersion defines the Kafka protocol version that the client will assume it is running against.",
            "required": false,
            "path_tokens": [
              "protocol_version"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "ClientID holds the client ID advertised to Kafka, which can be used for enforcing ACLs, throttling quotas, and more (default \"otel-collector\")",
            "required": false,
            "path_tokens": [
              "client_id"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "plain_text",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "plain_text",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username to be used on authentication",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "Password to be used on authentication",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Mechanism",
            "type": "string",
            "description": "SASL Mechanism to be used, possible values are: (PLAIN, AWS_MSK_IAM_OAUTHBEARER, SCRAM-SHA-256 or SCRAM-SHA-512).",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "mechanism"
            ]
          },
          {
            "name": "Version",
            "type": "int",
            "description": "SASL Protocol Version to be used, possible values are: (0, 1). Defaults to 0.",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "version"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Region is the AWS region the MSK cluster is based in",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "aws_msk",
              "region"
            ]
          },
          {
            "name": "ServiceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "service_name"
            ]
          },
          {
            "name": "Realm",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "realm"
            ]
          },
          {
            "name": "UseKeyTab",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "use_keytab"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "ConfigPath",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "config_file"
            ]
          },
          {
            "name": "KeyTabPath",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "keytab_file"
            ]
          },
          {
            "name": "DisablePAFXFAST",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "disable_fast_negotiation"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Full",
            "type": "bool",
            "description": "Whether to maintain a full set of metadata for all topics, or just the minimal set that has been necessary so far. The full set is simpler and usually more convenient, but can take up a substantial amount of memory if you have many topics and partitions. Defaults to true.",
            "required": false,
            "path_tokens": [
              "metadata",
              "full"
            ]
          },
          {
            "name": "RefreshInterval",
            "type": "duration",
            "description": "RefreshInterval controls the frequency at which cluster metadata is refreshed. Defaults to 10 minutes.",
            "required": false,
            "path_tokens": [
              "metadata",
              "refresh_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Max",
            "type": "int",
            "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election or at startup (default 3).",
            "required": false,
            "path_tokens": [
              "metadata",
              "retry",
              "max"
            ]
          },
          {
            "name": "Backoff",
            "type": "duration",
            "description": "How long to wait for leader election to occur before retrying (default 250ms). Similar to the JVM's `retry.backoff.ms`.",
            "required": false,
            "path_tokens": [
              "metadata",
              "retry",
              "backoff"
            ],
            "format": "duration"
          },
          {
            "name": "RackID",
            "type": "string",
            "description": "RackID provides the rack identifier for this client to enable rack-aware replica selection when supported by the brokers. This maps to Kafka's standard \"client.rack\" setting. By default, this is empty.",
            "required": false,
            "path_tokens": [
              "rack_id"
            ]
          },
          {
            "name": "ClusterAlias",
            "type": "string",
            "description": "Alias name of the kafka cluster",
            "required": false,
            "path_tokens": [
              "cluster_alias"
            ]
          },
          {
            "name": "TopicMatch",
            "type": "string",
            "description": "TopicMatch topics to collect metrics on",
            "required": false,
            "default": "^[^_].*$",
            "path_tokens": [
              "topic_match"
            ]
          },
          {
            "name": "GroupMatch",
            "type": "string",
            "description": "GroupMatch consumer groups to collect on",
            "required": false,
            "default": ".*",
            "path_tokens": [
              "group_match"
            ]
          },
          {
            "name": "RefreshFrequency",
            "type": "duration",
            "description": "Cluster metadata refresh frequency Configures the refresh frequency to update cached cluster metadata Defaults to 10 minutes from Sarama library If Metadata.RefreshInterval is set, this will be ignored. Deprecated [v0.122.0]: use Metadata.RefreshInterval instead.",
            "required": false,
            "path_tokens": [
              "refresh_frequency"
            ],
            "format": "duration"
          },
          {
            "name": "Scrapers",
            "type": "stringArray",
            "description": "Scrapers defines which metric data points to be captured from kafka",
            "required": false,
            "path_tokens": [
              "scrapers"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "broker",
              "log_retention_period",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "broker",
              "log_retention_period",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "brokers",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "brokers",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "lag",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "lag",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "lag_sum",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "lag_sum",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "members",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "members",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "offset_sum",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "consumer_group",
              "offset_sum",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "current_offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "current_offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "oldest_offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "oldest_offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "replicas",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "replicas",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "replicas_in_sync",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "partition",
              "replicas_in_sync",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "log_retention_period",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "log_retention_period",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "log_retention_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "log_retention_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "min_insync_replicas",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "min_insync_replicas",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "partitions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "partitions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "replication_factor",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "kafka",
              "topic",
              "replication_factor",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "kafka",
              "cluster",
              "alias",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "kafka",
              "cluster",
              "alias",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "kafka",
              "cluster",
              "alias",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "kafka",
              "cluster",
              "alias",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    kafka.broker.log_retention_period:\n      enabled: true\n    kafka.brokers:\n      enabled: true\n    kafka.consumer_group.lag:\n      enabled: true\n    kafka.consumer_group.lag_sum:\n      enabled: true\n    kafka.consumer_group.members:\n      enabled: true\n    kafka.consumer_group.offset:\n      enabled: true\n    kafka.consumer_group.offset_sum:\n      enabled: true\n    kafka.partition.current_offset:\n      enabled: true\n    kafka.partition.oldest_offset:\n      enabled: true\n    kafka.partition.replicas:\n      enabled: true\n    kafka.partition.replicas_in_sync:\n      enabled: true\n    kafka.topic.log_retention_period:\n      enabled: true\n    kafka.topic.log_retention_size:\n      enabled: true\n    kafka.topic.min_insync_replicas:\n      enabled: true\n    kafka.topic.partitions:\n      enabled: true\n    kafka.topic.replication_factor:\n      enabled: true\n  resource_attributes:\n    kafka.cluster.alias:\n      enabled: true\nnone_set:\n  metrics:\n    kafka.broker.log_retention_period:\n      enabled: false\n    kafka.brokers:\n      enabled: false\n    kafka.consumer_group.lag:\n      enabled: false\n    kafka.consumer_group.lag_sum:\n      enabled: false\n    kafka.consumer_group.members:\n      enabled: false\n    kafka.consumer_group.offset:\n      enabled: false\n    kafka.consumer_group.offset_sum:\n      enabled: false\n    kafka.partition.current_offset:\n      enabled: false\n    kafka.partition.oldest_offset:\n      enabled: false\n    kafka.partition.replicas:\n      enabled: false\n    kafka.partition.replicas_in_sync:\n      enabled: false\n    kafka.topic.log_retention_period:\n      enabled: false\n    kafka.topic.log_retention_size:\n      enabled: false\n    kafka.topic.min_insync_replicas:\n      enabled: false\n    kafka.topic.partitions:\n      enabled: false\n    kafka.topic.replication_factor:\n      enabled: false\n  resource_attributes:\n    kafka.cluster.alias:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    kafka.cluster.alias:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    kafka.cluster.alias:\n      enabled: true\n      metrics_exclude:\n        - strict: \"kafka.cluster.alias-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "mongodbatlas",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "BaseURL",
            "type": "string",
            "description": "",
            "required": false,
            "default": "mongodbatlas.CloudURL",
            "path_tokens": [
              "base_url"
            ]
          },
          {
            "name": "PublicKey",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "public_key"
            ]
          },
          {
            "name": "PrivateKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "private_key"
            ],
            "sensitive": true
          },
          {
            "name": "Granularity",
            "type": "string",
            "description": "",
            "required": false,
            "default": "PT1M",
            "path_tokens": [
              "granularity"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "db",
              "counts",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "db",
              "counts",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "db",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "db",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "iops",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "iops",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "iops",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "iops",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "latency",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "latency",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "latency",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "latency",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "queue",
              "depth",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "queue",
              "depth",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "space",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "space",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "space",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "space",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "utilization",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "utilization",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "utilization",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "disk",
              "partition",
              "utilization",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "asserts",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "asserts",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "background_flush",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "background_flush",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cache",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cache",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cache",
              "ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cache",
              "ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cache",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cache",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "connections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "connections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "normalized",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "normalized",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "normalized",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "normalized",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "children",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "normalized",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "normalized",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "normalized",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "normalized",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cpu",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cursors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "cursors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "document",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "document",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "operations",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "operations",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "operations",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "operations",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "query_executor",
              "scanned",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "query_executor",
              "scanned",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "query_targeting",
              "scanned_per_returned",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "query_targeting",
              "scanned_per_returned",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "storage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "db",
              "storage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "global_lock",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "global_lock",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "index",
              "btree_miss_ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "index",
              "btree_miss_ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "index",
              "counters",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "index",
              "counters",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "journaling",
              "commits",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "journaling",
              "commits",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "journaling",
              "data_files",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "journaling",
              "data_files",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "journaling",
              "written",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "journaling",
              "written",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "network",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "network",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "network",
              "requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "network",
              "requests",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "oplog",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "oplog",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "oplog",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "oplog",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "restarts",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "restarts",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "tickets",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "process",
              "tickets",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "normalized",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "normalized",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "normalized",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "normalized",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "cpu",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "cpu",
              "normalized",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "cpu",
              "normalized",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "disk",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "disk",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "fts",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "memory",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "memory",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "memory",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "memory",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "network",
              "io",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "network",
              "io",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "network",
              "io",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "network",
              "io",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "io",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "io",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "io",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "io",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "usage",
              "average",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "usage",
              "average",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "usage",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodbatlas",
              "system",
              "paging",
              "usage",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "cluster",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "cluster",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "cluster",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "cluster",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "db",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "db",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "db",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "db",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "disk",
              "partition",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "disk",
              "partition",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "disk",
              "partition",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "disk",
              "partition",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "host",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "host",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "host",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "host",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "org_name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "org_name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "org_name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "org_name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "port",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "port",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "port",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "port",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "type_name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "type_name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "type_name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "process",
              "type_name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "project",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "provider",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "provider",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "provider",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "provider",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "region",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "region",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "region",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "region",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "user",
              "alias",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "user",
              "alias",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "user",
              "alias",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mongodb_atlas",
              "user",
              "alias",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Projects",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "projects"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "alerts",
              "enabled"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "alerts",
              "endpoint"
            ]
          },
          {
            "name": "Secret",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "alerts",
              "secret"
            ],
            "sensitive": true
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "alerts",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "Mode",
            "type": "string",
            "description": "",
            "required": false,
            "default": "listen",
            "path_tokens": [
              "alerts",
              "mode"
            ]
          },
          {
            "name": "Projects",
            "type": "array",
            "description": "these parameters are only relevant in retrieval mode",
            "required": false,
            "path_tokens": [
              "alerts",
              "projects"
            ]
          },
          {
            "name": "PollInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "alerts",
              "poll_interval"
            ],
            "format": "duration"
          },
          {
            "name": "PageSize",
            "type": "int",
            "description": "",
            "required": false,
            "default": 100,
            "path_tokens": [
              "alerts",
              "page_size"
            ]
          },
          {
            "name": "MaxPages",
            "type": "int",
            "description": "",
            "required": false,
            "default": 10,
            "path_tokens": [
              "alerts",
              "max_pages"
            ]
          },
          {
            "name": "Projects",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "projects"
            ]
          },
          {
            "name": "Organizations",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "organizations"
            ]
          },
          {
            "name": "PollInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "poll_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Types",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "types"
            ]
          },
          {
            "name": "PageSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "page_size"
            ]
          },
          {
            "name": "MaxPages",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "max_pages"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "logs",
              "enabled"
            ]
          },
          {
            "name": "Projects",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "projects"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    mongodbatlas.db.counts:\n      enabled: true\n    mongodbatlas.db.size:\n      enabled: true\n    mongodbatlas.disk.partition.iops.average:\n      enabled: true\n    mongodbatlas.disk.partition.iops.max:\n      enabled: true\n    mongodbatlas.disk.partition.latency.average:\n      enabled: true\n    mongodbatlas.disk.partition.latency.max:\n      enabled: true\n    mongodbatlas.disk.partition.queue.depth:\n      enabled: true\n    mongodbatlas.disk.partition.space.average:\n      enabled: true\n    mongodbatlas.disk.partition.space.max:\n      enabled: true\n    mongodbatlas.disk.partition.throughput:\n      enabled: true\n    mongodbatlas.disk.partition.usage.average:\n      enabled: true\n    mongodbatlas.disk.partition.usage.max:\n      enabled: true\n    mongodbatlas.disk.partition.utilization.average:\n      enabled: true\n    mongodbatlas.disk.partition.utilization.max:\n      enabled: true\n    mongodbatlas.process.asserts:\n      enabled: true\n    mongodbatlas.process.background_flush:\n      enabled: true\n    mongodbatlas.process.cache.io:\n      enabled: true\n    mongodbatlas.process.cache.ratio:\n      enabled: true\n    mongodbatlas.process.cache.size:\n      enabled: true\n    mongodbatlas.process.connections:\n      enabled: true\n    mongodbatlas.process.cpu.children.normalized.usage.average:\n      enabled: true\n    mongodbatlas.process.cpu.children.normalized.usage.max:\n      enabled: true\n    mongodbatlas.process.cpu.children.usage.average:\n      enabled: true\n    mongodbatlas.process.cpu.children.usage.max:\n      enabled: true\n    mongodbatlas.process.cpu.normalized.usage.average:\n      enabled: true\n    mongodbatlas.process.cpu.normalized.usage.max:\n      enabled: true\n    mongodbatlas.process.cpu.usage.average:\n      enabled: true\n    mongodbatlas.process.cpu.usage.max:\n      enabled: true\n    mongodbatlas.process.cursors:\n      enabled: true\n    mongodbatlas.process.db.document.rate:\n      enabled: true\n    mongodbatlas.process.db.operations.rate:\n      enabled: true\n    mongodbatlas.process.db.operations.time:\n      enabled: true\n    mongodbatlas.process.db.query_executor.scanned:\n      enabled: true\n    mongodbatlas.process.db.query_targeting.scanned_per_returned:\n      enabled: true\n    mongodbatlas.process.db.storage:\n      enabled: true\n    mongodbatlas.process.global_lock:\n      enabled: true\n    mongodbatlas.process.index.btree_miss_ratio:\n      enabled: true\n    mongodbatlas.process.index.counters:\n      enabled: true\n    mongodbatlas.process.journaling.commits:\n      enabled: true\n    mongodbatlas.process.journaling.data_files:\n      enabled: true\n    mongodbatlas.process.journaling.written:\n      enabled: true\n    mongodbatlas.process.memory.usage:\n      enabled: true\n    mongodbatlas.process.network.io:\n      enabled: true\n    mongodbatlas.process.network.requests:\n      enabled: true\n    mongodbatlas.process.oplog.rate:\n      enabled: true\n    mongodbatlas.process.oplog.time:\n      enabled: true\n    mongodbatlas.process.page_faults:\n      enabled: true\n    mongodbatlas.process.restarts:\n      enabled: true\n    mongodbatlas.process.tickets:\n      enabled: true\n    mongodbatlas.system.cpu.normalized.usage.average:\n      enabled: true\n    mongodbatlas.system.cpu.normalized.usage.max:\n      enabled: true\n    mongodbatlas.system.cpu.usage.average:\n      enabled: true\n    mongodbatlas.system.cpu.usage.max:\n      enabled: true\n    mongodbatlas.system.fts.cpu.normalized.usage:\n      enabled: true\n    mongodbatlas.system.fts.cpu.usage:\n      enabled: true\n    mongodbatlas.system.fts.disk.used:\n      enabled: true\n    mongodbatlas.system.fts.memory.usage:\n      enabled: true\n    mongodbatlas.system.memory.usage.average:\n      enabled: true\n    mongodbatlas.system.memory.usage.max:\n      enabled: true\n    mongodbatlas.system.network.io.average:\n      enabled: true\n    mongodbatlas.system.network.io.max:\n      enabled: true\n    mongodbatlas.system.paging.io.average:\n      enabled: true\n    mongodbatlas.system.paging.io.max:\n      enabled: true\n    mongodbatlas.system.paging.usage.average:\n      enabled: true\n    mongodbatlas.system.paging.usage.max:\n      enabled: true\n  resource_attributes:\n    mongodb_atlas.cluster.name:\n      enabled: true\n    mongodb_atlas.db.name:\n      enabled: true\n    mongodb_atlas.disk.partition:\n      enabled: true\n    mongodb_atlas.host.name:\n      enabled: true\n    mongodb_atlas.org_name:\n      enabled: true\n    mongodb_atlas.process.id:\n      enabled: true\n    mongodb_atlas.process.port:\n      enabled: true\n    mongodb_atlas.process.type_name:\n      enabled: true\n    mongodb_atlas.project.id:\n      enabled: true\n    mongodb_atlas.project.name:\n      enabled: true\n    mongodb_atlas.provider.name:\n      enabled: true\n    mongodb_atlas.region.name:\n      enabled: true\n    mongodb_atlas.user.alias:\n      enabled: true\nnone_set:\n  metrics:\n    mongodbatlas.db.counts:\n      enabled: false\n    mongodbatlas.db.size:\n      enabled: false\n    mongodbatlas.disk.partition.iops.average:\n      enabled: false\n    mongodbatlas.disk.partition.iops.max:\n      enabled: false\n    mongodbatlas.disk.partition.latency.average:\n      enabled: false\n    mongodbatlas.disk.partition.latency.max:\n      enabled: false\n    mongodbatlas.disk.partition.queue.depth:\n      enabled: false\n    mongodbatlas.disk.partition.space.average:\n      enabled: false\n    mongodbatlas.disk.partition.space.max:\n      enabled: false\n    mongodbatlas.disk.partition.throughput:\n      enabled: false\n    mongodbatlas.disk.partition.usage.average:\n      enabled: false\n    mongodbatlas.disk.partition.usage.max:\n      enabled: false\n    mongodbatlas.disk.partition.utilization.average:\n      enabled: false\n    mongodbatlas.disk.partition.utilization.max:\n      enabled: false\n    mongodbatlas.process.asserts:\n      enabled: false\n    mongodbatlas.process.background_flush:\n      enabled: false\n    mongodbatlas.process.cache.io:\n      enabled: false\n    mongodbatlas.process.cache.ratio:\n      enabled: false\n    mongodbatlas.process.cache.size:\n      enabled: false\n    mongodbatlas.process.connections:\n      enabled: false\n    mongodbatlas.process.cpu.children.normalized.usage.average:\n      enabled: false\n    mongodbatlas.process.cpu.children.normalized.usage.max:\n      enabled: false\n    mongodbatlas.process.cpu.children.usage.average:\n      enabled: false\n    mongodbatlas.process.cpu.children.usage.max:\n      enabled: false\n    mongodbatlas.process.cpu.normalized.usage.average:\n      enabled: false\n    mongodbatlas.process.cpu.normalized.usage.max:\n      enabled: false\n    mongodbatlas.process.cpu.usage.average:\n      enabled: false\n    mongodbatlas.process.cpu.usage.max:\n      enabled: false\n    mongodbatlas.process.cursors:\n      enabled: false\n    mongodbatlas.process.db.document.rate:\n      enabled: false\n    mongodbatlas.process.db.operations.rate:\n      enabled: false\n    mongodbatlas.process.db.operations.time:\n      enabled: false\n    mongodbatlas.process.db.query_executor.scanned:\n      enabled: false\n    mongodbatlas.process.db.query_targeting.scanned_per_returned:\n      enabled: false\n    mongodbatlas.process.db.storage:\n      enabled: false\n    mongodbatlas.process.global_lock:\n      enabled: false\n    mongodbatlas.process.index.btree_miss_ratio:\n      enabled: false\n    mongodbatlas.process.index.counters:\n      enabled: false\n    mongodbatlas.process.journaling.commits:\n      enabled: false\n    mongodbatlas.process.journaling.data_files:\n      enabled: false\n    mongodbatlas.process.journaling.written:\n      enabled: false\n    mongodbatlas.process.memory.usage:\n      enabled: false\n    mongodbatlas.process.network.io:\n      enabled: false\n    mongodbatlas.process.network.requests:\n      enabled: false\n    mongodbatlas.process.oplog.rate:\n      enabled: false\n    mongodbatlas.process.oplog.time:\n      enabled: false\n    mongodbatlas.process.page_faults:\n      enabled: false\n    mongodbatlas.process.restarts:\n      enabled: false\n    mongodbatlas.process.tickets:\n      enabled: false\n    mongodbatlas.system.cpu.normalized.usage.average:\n      enabled: false\n    mongodbatlas.system.cpu.normalized.usage.max:\n      enabled: false\n    mongodbatlas.system.cpu.usage.average:\n      enabled: false\n    mongodbatlas.system.cpu.usage.max:\n      enabled: false\n    mongodbatlas.system.fts.cpu.normalized.usage:\n      enabled: false\n    mongodbatlas.system.fts.cpu.usage:\n      enabled: false\n    mongodbatlas.system.fts.disk.used:\n      enabled: false\n    mongodbatlas.system.fts.memory.usage:\n      enabled: false\n    mongodbatlas.system.memory.usage.average:\n      enabled: false\n    mongodbatlas.system.memory.usage.max:\n      enabled: false\n    mongodbatlas.system.network.io.average:\n      enabled: false\n    mongodbatlas.system.network.io.max:\n      enabled: false\n    mongodbatlas.system.paging.io.average:\n      enabled: false\n    mongodbatlas.system.paging.io.max:\n      enabled: false\n    mongodbatlas.system.paging.usage.average:\n      enabled: false\n    mongodbatlas.system.paging.usage.max:\n      enabled: false\n  resource_attributes:\n    mongodb_atlas.cluster.name:\n      enabled: false\n    mongodb_atlas.db.name:\n      enabled: false\n    mongodb_atlas.disk.partition:\n      enabled: false\n    mongodb_atlas.host.name:\n      enabled: false\n    mongodb_atlas.org_name:\n      enabled: false\n    mongodb_atlas.process.id:\n      enabled: false\n    mongodb_atlas.process.port:\n      enabled: false\n    mongodb_atlas.process.type_name:\n      enabled: false\n    mongodb_atlas.project.id:\n      enabled: false\n    mongodb_atlas.project.name:\n      enabled: false\n    mongodb_atlas.provider.name:\n      enabled: false\n    mongodb_atlas.region.name:\n      enabled: false\n    mongodb_atlas.user.alias:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    mongodb_atlas.cluster.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.db.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.disk.partition:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.host.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.org_name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.process.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.process.port:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.process.type_name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.project.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.project.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.provider.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.region.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    mongodb_atlas.user.alias:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    mongodb_atlas.cluster.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.cluster.name-val\"\n    mongodb_atlas.db.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.db.name-val\"\n    mongodb_atlas.disk.partition:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.disk.partition-val\"\n    mongodb_atlas.host.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.host.name-val\"\n    mongodb_atlas.org_name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.org_name-val\"\n    mongodb_atlas.process.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.process.id-val\"\n    mongodb_atlas.process.port:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.process.port-val\"\n    mongodb_atlas.process.type_name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.process.type_name-val\"\n    mongodb_atlas.project.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.project.id-val\"\n    mongodb_atlas.project.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.project.name-val\"\n    mongodb_atlas.provider.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.provider.name-val\"\n    mongodb_atlas.region.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.region.name-val\"\n    mongodb_atlas.user.alias:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mongodb_atlas.user.alias-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "mongodb",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "default": "time.Minute",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "active",
              "reads",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "active",
              "reads",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "active",
              "writes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "active",
              "writes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "cache",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "cache",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "collection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "collection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "commands",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "commands",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "cursor",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "cursor",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "cursor",
              "timeout",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "cursor",
              "timeout",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "data",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "data",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "database",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "database",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "deletes",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "deletes",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "document",
              "operation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "document",
              "operation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "extent",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "extent",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "flushes",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "flushes",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "getmores",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "getmores",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "global_lock",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "global_lock",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "health",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "health",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "index",
              "access",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "index",
              "access",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "index",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "index",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "index",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "index",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "inserts",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "inserts",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "acquire",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "acquire",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "acquire",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "acquire",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "acquire",
              "wait_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "acquire",
              "wait_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "deadlock",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "lock",
              "deadlock",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "network",
              "io",
              "receive",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "network",
              "io",
              "receive",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "network",
              "io",
              "transmit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "network",
              "io",
              "transmit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "network",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "network",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "object",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "object",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "latency",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "latency",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "repl",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "repl",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "operation",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "queries",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "queries",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_commands_per_sec",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_commands_per_sec",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_deletes_per_sec",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_deletes_per_sec",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_getmores_per_sec",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_getmores_per_sec",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_inserts_per_sec",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_inserts_per_sec",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_queries_per_sec",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_queries_per_sec",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_updates_per_sec",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "repl_updates_per_sec",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "session",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "session",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "storage",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "storage",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "updates",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "updates",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "wtcache",
              "bytes",
              "read",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mongodb",
              "wtcache",
              "bytes",
              "read",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "database",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "database",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "database",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "database",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Hosts",
            "type": "array",
            "description": "Deprecated - Transport option will be removed in v0.102.0",
            "required": false,
            "path_tokens": [
              "hosts"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "ReplicaSet",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "replica_set"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "time.Minute",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DirectConnection",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "direct_connection"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    mongodb.active.reads:\n      enabled: true\n    mongodb.active.writes:\n      enabled: true\n    mongodb.cache.operations:\n      enabled: true\n    mongodb.collection.count:\n      enabled: true\n    mongodb.commands.rate:\n      enabled: true\n    mongodb.connection.count:\n      enabled: true\n    mongodb.cursor.count:\n      enabled: true\n    mongodb.cursor.timeout.count:\n      enabled: true\n    mongodb.data.size:\n      enabled: true\n    mongodb.database.count:\n      enabled: true\n    mongodb.deletes.rate:\n      enabled: true\n    mongodb.document.operation.count:\n      enabled: true\n    mongodb.extent.count:\n      enabled: true\n    mongodb.flushes.rate:\n      enabled: true\n    mongodb.getmores.rate:\n      enabled: true\n    mongodb.global_lock.time:\n      enabled: true\n    mongodb.health:\n      enabled: true\n    mongodb.index.access.count:\n      enabled: true\n    mongodb.index.count:\n      enabled: true\n    mongodb.index.size:\n      enabled: true\n    mongodb.inserts.rate:\n      enabled: true\n    mongodb.lock.acquire.count:\n      enabled: true\n    mongodb.lock.acquire.time:\n      enabled: true\n    mongodb.lock.acquire.wait_count:\n      enabled: true\n    mongodb.lock.deadlock.count:\n      enabled: true\n    mongodb.memory.usage:\n      enabled: true\n    mongodb.network.io.receive:\n      enabled: true\n    mongodb.network.io.transmit:\n      enabled: true\n    mongodb.network.request.count:\n      enabled: true\n    mongodb.object.count:\n      enabled: true\n    mongodb.operation.count:\n      enabled: true\n    mongodb.operation.latency.time:\n      enabled: true\n    mongodb.operation.repl.count:\n      enabled: true\n    mongodb.operation.time:\n      enabled: true\n    mongodb.page_faults:\n      enabled: true\n    mongodb.queries.rate:\n      enabled: true\n    mongodb.repl_commands_per_sec:\n      enabled: true\n    mongodb.repl_deletes_per_sec:\n      enabled: true\n    mongodb.repl_getmores_per_sec:\n      enabled: true\n    mongodb.repl_inserts_per_sec:\n      enabled: true\n    mongodb.repl_queries_per_sec:\n      enabled: true\n    mongodb.repl_updates_per_sec:\n      enabled: true\n    mongodb.session.count:\n      enabled: true\n    mongodb.storage.size:\n      enabled: true\n    mongodb.updates.rate:\n      enabled: true\n    mongodb.uptime:\n      enabled: true\n    mongodb.wtcache.bytes.read:\n      enabled: true\n  resource_attributes:\n    database:\n      enabled: true\n    server.address:\n      enabled: true\n    server.port:\n      enabled: true\nnone_set:\n  metrics:\n    mongodb.active.reads:\n      enabled: false\n    mongodb.active.writes:\n      enabled: false\n    mongodb.cache.operations:\n      enabled: false\n    mongodb.collection.count:\n      enabled: false\n    mongodb.commands.rate:\n      enabled: false\n    mongodb.connection.count:\n      enabled: false\n    mongodb.cursor.count:\n      enabled: false\n    mongodb.cursor.timeout.count:\n      enabled: false\n    mongodb.data.size:\n      enabled: false\n    mongodb.database.count:\n      enabled: false\n    mongodb.deletes.rate:\n      enabled: false\n    mongodb.document.operation.count:\n      enabled: false\n    mongodb.extent.count:\n      enabled: false\n    mongodb.flushes.rate:\n      enabled: false\n    mongodb.getmores.rate:\n      enabled: false\n    mongodb.global_lock.time:\n      enabled: false\n    mongodb.health:\n      enabled: false\n    mongodb.index.access.count:\n      enabled: false\n    mongodb.index.count:\n      enabled: false\n    mongodb.index.size:\n      enabled: false\n    mongodb.inserts.rate:\n      enabled: false\n    mongodb.lock.acquire.count:\n      enabled: false\n    mongodb.lock.acquire.time:\n      enabled: false\n    mongodb.lock.acquire.wait_count:\n      enabled: false\n    mongodb.lock.deadlock.count:\n      enabled: false\n    mongodb.memory.usage:\n      enabled: false\n    mongodb.network.io.receive:\n      enabled: false\n    mongodb.network.io.transmit:\n      enabled: false\n    mongodb.network.request.count:\n      enabled: false\n    mongodb.object.count:\n      enabled: false\n    mongodb.operation.count:\n      enabled: false\n    mongodb.operation.latency.time:\n      enabled: false\n    mongodb.operation.repl.count:\n      enabled: false\n    mongodb.operation.time:\n      enabled: false\n    mongodb.page_faults:\n      enabled: false\n    mongodb.queries.rate:\n      enabled: false\n    mongodb.repl_commands_per_sec:\n      enabled: false\n    mongodb.repl_deletes_per_sec:\n      enabled: false\n    mongodb.repl_getmores_per_sec:\n      enabled: false\n    mongodb.repl_inserts_per_sec:\n      enabled: false\n    mongodb.repl_queries_per_sec:\n      enabled: false\n    mongodb.repl_updates_per_sec:\n      enabled: false\n    mongodb.session.count:\n      enabled: false\n    mongodb.storage.size:\n      enabled: false\n    mongodb.updates.rate:\n      enabled: false\n    mongodb.uptime:\n      enabled: false\n    mongodb.wtcache.bytes.read:\n      enabled: false\n  resource_attributes:\n    database:\n      enabled: false\n    server.address:\n      enabled: false\n    server.port:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    database:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    server.address:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    server.port:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    database:\n      enabled: true\n      metrics_exclude:\n        - strict: \"database-val\"\n    server.address:\n      enabled: true\n      metrics_exclude:\n        - strict: \"server.address-val\"\n    server.port:\n      enabled: true\n      metrics_exclude:\n        - regexp: \".*\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "osquery",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ExtensionsSocket",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "extensions_socket"
            ]
          },
          {
            "name": "Queries",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "queries"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "kubeletstats",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "context"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tpm",
              "auth"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify controls whether the client verifies the server's certificate chain and host name.",
            "required": false,
            "path_tokens": [
              "insecure_skip_verify"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. The address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ExtraMetadataLabels",
            "type": "array",
            "description": "ExtraMetadataLabels contains list of extra metadata that should be taken from /pods endpoint and put as extra labels on metrics resource. No additional metadata is fetched by default, so there are no extra calls to /pods endpoint. Supported values include container.id and k8s.volume.type.",
            "required": false,
            "path_tokens": [
              "extra_metadata_labels"
            ]
          },
          {
            "name": "MetricGroupsToCollect",
            "type": "array",
            "description": "MetricGroupsToCollect provides a list of metrics groups to collect metrics from. \"container\", \"pod\", \"node\" and \"volume\" are the only valid groups.",
            "required": false,
            "path_tokens": [
              "metric_groups"
            ]
          },
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "k8s_api_config",
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "k8s_api_config",
              "context"
            ]
          },
          {
            "name": "NodeName",
            "type": "string",
            "description": "NodeName is the node name to limit the discovery of nodes. For example, node name can be set using the downward API inside the collector pod spec as follows: env:   - name: K8S_NODE_NAME     valueFrom:       fieldRef:         fieldPath: spec.nodeName Then set this value to ${env:K8S_NODE_NAME} in the configuration.",
            "required": true,
            "path_tokens": [
              "node"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "filesystem",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "filesystem",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "filesystem",
              "capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "filesystem",
              "capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "filesystem",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "filesystem",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "major_page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "major_page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "rss",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "rss",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "working_set",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "working_set",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu",
              "node",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu",
              "node",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_limit_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_limit_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_request_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_request_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory",
              "node",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory",
              "node",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_limit_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_limit_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_request_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_request_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "cpu",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "cpu",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "filesystem",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "filesystem",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "filesystem",
              "capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "filesystem",
              "capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "filesystem",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "filesystem",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "major_page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "major_page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "rss",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "rss",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "working_set",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "memory",
              "working_set",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "network",
              "errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "network",
              "errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "network",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "network",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "node",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "node",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu_limit_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu_limit_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu_request_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "cpu_request_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "filesystem",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "filesystem",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "filesystem",
              "capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "filesystem",
              "capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "filesystem",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "filesystem",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "major_page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "major_page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "node",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "node",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "page_faults",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "page_faults",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "rss",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "rss",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "working_set",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory",
              "working_set",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory_limit_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory_limit_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory_request_utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "memory_request_utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "network",
              "errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "network",
              "errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "network",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "network",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "volume",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "volume",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "inodes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "inodes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "inodes",
              "free",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "inodes",
              "free",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "inodes",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "volume",
              "inodes",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aws",
              "volume",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aws",
              "volume",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aws",
              "volume",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "aws",
              "volume",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "fs",
              "type",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "fs",
              "type",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "fs",
              "type",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "fs",
              "type",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "gce",
              "pd",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "gce",
              "pd",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "gce",
              "pd",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "gce",
              "pd",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "endpoints",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "endpoints",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "endpoints",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "endpoints",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "path",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "path",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "path",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "glusterfs",
              "path",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "persistentvolumeclaim",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "persistentvolumeclaim",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "persistentvolumeclaim",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "persistentvolumeclaim",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "type",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "type",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "type",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "volume",
              "type",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "partition",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "partition",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "partition",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "partition",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "PodMetrics",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "collect_all_network_interfaces",
              "pod"
            ]
          },
          {
            "name": "NodeMetrics",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "collect_all_network_interfaces",
              "node"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    container.cpu.time:\n      enabled: true\n    container.cpu.usage:\n      enabled: true\n    container.cpu.utilization:\n      enabled: true\n    container.filesystem.available:\n      enabled: true\n    container.filesystem.capacity:\n      enabled: true\n    container.filesystem.usage:\n      enabled: true\n    container.memory.available:\n      enabled: true\n    container.memory.major_page_faults:\n      enabled: true\n    container.memory.page_faults:\n      enabled: true\n    container.memory.rss:\n      enabled: true\n    container.memory.usage:\n      enabled: true\n    container.memory.working_set:\n      enabled: true\n    container.uptime:\n      enabled: true\n    k8s.container.cpu.node.utilization:\n      enabled: true\n    k8s.container.cpu_limit_utilization:\n      enabled: true\n    k8s.container.cpu_request_utilization:\n      enabled: true\n    k8s.container.memory.node.utilization:\n      enabled: true\n    k8s.container.memory_limit_utilization:\n      enabled: true\n    k8s.container.memory_request_utilization:\n      enabled: true\n    k8s.node.cpu.time:\n      enabled: true\n    k8s.node.cpu.usage:\n      enabled: true\n    k8s.node.cpu.utilization:\n      enabled: true\n    k8s.node.filesystem.available:\n      enabled: true\n    k8s.node.filesystem.capacity:\n      enabled: true\n    k8s.node.filesystem.usage:\n      enabled: true\n    k8s.node.memory.available:\n      enabled: true\n    k8s.node.memory.major_page_faults:\n      enabled: true\n    k8s.node.memory.page_faults:\n      enabled: true\n    k8s.node.memory.rss:\n      enabled: true\n    k8s.node.memory.usage:\n      enabled: true\n    k8s.node.memory.working_set:\n      enabled: true\n    k8s.node.network.errors:\n      enabled: true\n    k8s.node.network.io:\n      enabled: true\n    k8s.node.uptime:\n      enabled: true\n    k8s.pod.cpu.node.utilization:\n      enabled: true\n    k8s.pod.cpu.time:\n      enabled: true\n    k8s.pod.cpu.usage:\n      enabled: true\n    k8s.pod.cpu.utilization:\n      enabled: true\n    k8s.pod.cpu_limit_utilization:\n      enabled: true\n    k8s.pod.cpu_request_utilization:\n      enabled: true\n    k8s.pod.filesystem.available:\n      enabled: true\n    k8s.pod.filesystem.capacity:\n      enabled: true\n    k8s.pod.filesystem.usage:\n      enabled: true\n    k8s.pod.memory.available:\n      enabled: true\n    k8s.pod.memory.major_page_faults:\n      enabled: true\n    k8s.pod.memory.node.utilization:\n      enabled: true\n    k8s.pod.memory.page_faults:\n      enabled: true\n    k8s.pod.memory.rss:\n      enabled: true\n    k8s.pod.memory.usage:\n      enabled: true\n    k8s.pod.memory.working_set:\n      enabled: true\n    k8s.pod.memory_limit_utilization:\n      enabled: true\n    k8s.pod.memory_request_utilization:\n      enabled: true\n    k8s.pod.network.errors:\n      enabled: true\n    k8s.pod.network.io:\n      enabled: true\n    k8s.pod.uptime:\n      enabled: true\n    k8s.pod.volume.usage:\n      enabled: true\n    k8s.volume.available:\n      enabled: true\n    k8s.volume.capacity:\n      enabled: true\n    k8s.volume.inodes:\n      enabled: true\n    k8s.volume.inodes.free:\n      enabled: true\n    k8s.volume.inodes.used:\n      enabled: true\n  resource_attributes:\n    aws.volume.id:\n      enabled: true\n    container.id:\n      enabled: true\n    fs.type:\n      enabled: true\n    gce.pd.name:\n      enabled: true\n    glusterfs.endpoints.name:\n      enabled: true\n    glusterfs.path:\n      enabled: true\n    k8s.container.name:\n      enabled: true\n    k8s.namespace.name:\n      enabled: true\n    k8s.node.name:\n      enabled: true\n    k8s.persistentvolumeclaim.name:\n      enabled: true\n    k8s.pod.name:\n      enabled: true\n    k8s.pod.uid:\n      enabled: true\n    k8s.volume.name:\n      enabled: true\n    k8s.volume.type:\n      enabled: true\n    partition:\n      enabled: true\nnone_set:\n  metrics:\n    container.cpu.time:\n      enabled: false\n    container.cpu.usage:\n      enabled: false\n    container.cpu.utilization:\n      enabled: false\n    container.filesystem.available:\n      enabled: false\n    container.filesystem.capacity:\n      enabled: false\n    container.filesystem.usage:\n      enabled: false\n    container.memory.available:\n      enabled: false\n    container.memory.major_page_faults:\n      enabled: false\n    container.memory.page_faults:\n      enabled: false\n    container.memory.rss:\n      enabled: false\n    container.memory.usage:\n      enabled: false\n    container.memory.working_set:\n      enabled: false\n    container.uptime:\n      enabled: false\n    k8s.container.cpu.node.utilization:\n      enabled: false\n    k8s.container.cpu_limit_utilization:\n      enabled: false\n    k8s.container.cpu_request_utilization:\n      enabled: false\n    k8s.container.memory.node.utilization:\n      enabled: false\n    k8s.container.memory_limit_utilization:\n      enabled: false\n    k8s.container.memory_request_utilization:\n      enabled: false\n    k8s.node.cpu.time:\n      enabled: false\n    k8s.node.cpu.usage:\n      enabled: false\n    k8s.node.cpu.utilization:\n      enabled: false\n    k8s.node.filesystem.available:\n      enabled: false\n    k8s.node.filesystem.capacity:\n      enabled: false\n    k8s.node.filesystem.usage:\n      enabled: false\n    k8s.node.memory.available:\n      enabled: false\n    k8s.node.memory.major_page_faults:\n      enabled: false\n    k8s.node.memory.page_faults:\n      enabled: false\n    k8s.node.memory.rss:\n      enabled: false\n    k8s.node.memory.usage:\n      enabled: false\n    k8s.node.memory.working_set:\n      enabled: false\n    k8s.node.network.errors:\n      enabled: false\n    k8s.node.network.io:\n      enabled: false\n    k8s.node.uptime:\n      enabled: false\n    k8s.pod.cpu.node.utilization:\n      enabled: false\n    k8s.pod.cpu.time:\n      enabled: false\n    k8s.pod.cpu.usage:\n      enabled: false\n    k8s.pod.cpu.utilization:\n      enabled: false\n    k8s.pod.cpu_limit_utilization:\n      enabled: false\n    k8s.pod.cpu_request_utilization:\n      enabled: false\n    k8s.pod.filesystem.available:\n      enabled: false\n    k8s.pod.filesystem.capacity:\n      enabled: false\n    k8s.pod.filesystem.usage:\n      enabled: false\n    k8s.pod.memory.available:\n      enabled: false\n    k8s.pod.memory.major_page_faults:\n      enabled: false\n    k8s.pod.memory.node.utilization:\n      enabled: false\n    k8s.pod.memory.page_faults:\n      enabled: false\n    k8s.pod.memory.rss:\n      enabled: false\n    k8s.pod.memory.usage:\n      enabled: false\n    k8s.pod.memory.working_set:\n      enabled: false\n    k8s.pod.memory_limit_utilization:\n      enabled: false\n    k8s.pod.memory_request_utilization:\n      enabled: false\n    k8s.pod.network.errors:\n      enabled: false\n    k8s.pod.network.io:\n      enabled: false\n    k8s.pod.uptime:\n      enabled: false\n    k8s.pod.volume.usage:\n      enabled: false\n    k8s.volume.available:\n      enabled: false\n    k8s.volume.capacity:\n      enabled: false\n    k8s.volume.inodes:\n      enabled: false\n    k8s.volume.inodes.free:\n      enabled: false\n    k8s.volume.inodes.used:\n      enabled: false\n  resource_attributes:\n    aws.volume.id:\n      enabled: false\n    container.id:\n      enabled: false\n    fs.type:\n      enabled: false\n    gce.pd.name:\n      enabled: false\n    glusterfs.endpoints.name:\n      enabled: false\n    glusterfs.path:\n      enabled: false\n    k8s.container.name:\n      enabled: false\n    k8s.namespace.name:\n      enabled: false\n    k8s.node.name:\n      enabled: false\n    k8s.persistentvolumeclaim.name:\n      enabled: false\n    k8s.pod.name:\n      enabled: false\n    k8s.pod.uid:\n      enabled: false\n    k8s.volume.name:\n      enabled: false\n    k8s.volume.type:\n      enabled: false\n    partition:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    aws.volume.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    fs.type:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    gce.pd.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    glusterfs.endpoints.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    glusterfs.path:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.container.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.namespace.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.persistentvolumeclaim.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.pod.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.pod.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.volume.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.volume.type:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    partition:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    aws.volume.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"aws.volume.id-val\"\n    container.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.id-val\"\n    fs.type:\n      enabled: true\n      metrics_exclude:\n        - strict: \"fs.type-val\"\n    gce.pd.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"gce.pd.name-val\"\n    glusterfs.endpoints.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"glusterfs.endpoints.name-val\"\n    glusterfs.path:\n      enabled: true\n      metrics_exclude:\n        - strict: \"glusterfs.path-val\"\n    k8s.container.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.container.name-val\"\n    k8s.namespace.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.namespace.name-val\"\n    k8s.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.node.name-val\"\n    k8s.persistentvolumeclaim.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.persistentvolumeclaim.name-val\"\n    k8s.pod.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.pod.name-val\"\n    k8s.pod.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.pod.uid-val\"\n    k8s.volume.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.volume.name-val\"\n    k8s.volume.type:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.volume.type-val\"\n    partition:\n      enabled: true\n      metrics_exclude:\n        - strict: \"partition-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "nginx",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "nginx",
              "connections_accepted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nginx",
              "connections_accepted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "nginx",
              "connections_current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nginx",
              "connections_current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "nginx",
              "connections_handled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nginx",
              "connections_handled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "nginx",
              "requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nginx",
              "requests",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    nginx.connections_accepted:\n      enabled: true\n    nginx.connections_current:\n      enabled: true\n    nginx.connections_handled:\n      enabled: true\n    nginx.requests:\n      enabled: true\nnone_set:\n  metrics:\n    nginx.connections_accepted:\n      enabled: false\n    nginx.connections_current:\n      enabled: false\n    nginx.connections_handled:\n      enabled: false\n    nginx.requests:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "k8scluster",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "context"
            ]
          },
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "Collection interval for metrics.",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "NodeConditionTypesToReport",
            "type": "stringArray",
            "description": "Node condition types to report. See all condition types, see here: https://kubernetes.io/docs/concepts/architecture/nodes/#condition.",
            "required": false,
            "default": [
              "Ready"
            ],
            "path_tokens": [
              "node_conditions_to_report"
            ]
          },
          {
            "name": "AllocatableTypesToReport",
            "type": "stringArray",
            "description": "Allocate resource types to report. See all resource types, see here: https://kubernetes.io/docs/concepts/architecture/nodes/#capacity",
            "required": false,
            "path_tokens": [
              "allocatable_types_to_report"
            ]
          },
          {
            "name": "MetadataExporters",
            "type": "stringArray",
            "description": "List of exporters to which metadata from this receiver should be forwarded to.",
            "required": false,
            "path_tokens": [
              "metadata_exporters"
            ]
          },
          {
            "name": "Distribution",
            "type": "string",
            "description": "Whether OpenShift support should be enabled or not.",
            "required": false,
            "path_tokens": [
              "distribution"
            ]
          },
          {
            "name": "MetadataCollectionInterval",
            "type": "duration",
            "description": "Collection interval for metadata. Metadata of the particular entity in the cluster is collected when the entity changes. In addition metadata of all entities is collected periodically even if no changes happen. Setting the duration to 0 will disable periodic collection (however will not impact metadata collection on changes).",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "metadata_collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_request",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "cpu_request",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "ephemeralstorage_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "ephemeralstorage_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "ephemeralstorage_request",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "ephemeralstorage_request",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_request",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "memory_request",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "ready",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "ready",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "restarts",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "restarts",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "status",
              "state",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "status",
              "state",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "storage_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "storage_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "storage_request",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "container",
              "storage_request",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "cronjob",
              "active_jobs",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "cronjob",
              "active_jobs",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "current_scheduled_nodes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "current_scheduled_nodes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "desired_scheduled_nodes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "desired_scheduled_nodes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "misscheduled_nodes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "misscheduled_nodes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "ready_nodes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "daemonset",
              "ready_nodes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "deployment",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "deployment",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "deployment",
              "desired",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "deployment",
              "desired",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "current_replicas",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "current_replicas",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "desired_replicas",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "desired_replicas",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "max_replicas",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "max_replicas",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "min_replicas",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "hpa",
              "min_replicas",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "active_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "active_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "desired_successful_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "desired_successful_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "failed_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "failed_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "max_parallel_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "max_parallel_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "successful_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "job",
              "successful_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "namespace",
              "phase",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "namespace",
              "phase",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "condition",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "node",
              "condition",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "phase",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "phase",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "status_reason",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "pod",
              "status_reason",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replicaset",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replicaset",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replicaset",
              "desired",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replicaset",
              "desired",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replication_controller",
              "available",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replication_controller",
              "available",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replication_controller",
              "desired",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "replication_controller",
              "desired",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "resource_quota",
              "hard_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "resource_quota",
              "hard_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "resource_quota",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "resource_quota",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "current_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "current_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "desired_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "desired_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "ready_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "ready_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "updated_pods",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "k8s",
              "statefulset",
              "updated_pods",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "appliedclusterquota",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "appliedclusterquota",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "appliedclusterquota",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "appliedclusterquota",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "clusterquota",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "clusterquota",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "clusterquota",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "openshift",
              "clusterquota",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "tag",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "tag",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "tag",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "tag",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "version",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "version",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "version",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "version",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "status",
              "last_terminated_reason",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "status",
              "last_terminated_reason",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "status",
              "last_terminated_reason",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "container",
              "status",
              "last_terminated_reason",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "cronjob",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "daemonset",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "deployment",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "apiversion",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "apiversion",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "apiversion",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "apiversion",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "kind",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "kind",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "kind",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "kind",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "scaletargetref",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "hpa",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "job",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "kubelet",
              "version",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "kubelet",
              "version",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "kubelet",
              "version",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "kubelet",
              "version",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "namespace",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "node",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "qos_class",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "qos_class",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "qos_class",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "qos_class",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "pod",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicaset",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "replicationcontroller",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "resourcequota",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "k8s",
              "statefulset",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "uid",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "uid",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "uid",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "openshift",
              "clusterquota",
              "uid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "description",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "description",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "description",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "description",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "type",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "type",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "type",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "os",
              "type",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "Deprecated: This field is no longer supported, use cfg.Namespaces instead.",
            "required": false,
            "path_tokens": [
              "namespace"
            ]
          },
          {
            "name": "Namespaces",
            "type": "stringArray",
            "description": "Namespaces to fetch resources from. If this is set, certain cluster-wide resources such as Nodes or Namespaces will not be able to be observed. Setting this option is recommended in environments where due to security restrictions the collector cannot be granted cluster-wide permissions.",
            "required": false,
            "path_tokens": [
              "namespaces"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "k8s_leader_elector",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "k8s_leader_elector",
              "[]"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    k8s.container.cpu_limit:\n      enabled: true\n    k8s.container.cpu_request:\n      enabled: true\n    k8s.container.ephemeralstorage_limit:\n      enabled: true\n    k8s.container.ephemeralstorage_request:\n      enabled: true\n    k8s.container.memory_limit:\n      enabled: true\n    k8s.container.memory_request:\n      enabled: true\n    k8s.container.ready:\n      enabled: true\n    k8s.container.restarts:\n      enabled: true\n    k8s.container.status.state:\n      enabled: true\n    k8s.container.storage_limit:\n      enabled: true\n    k8s.container.storage_request:\n      enabled: true\n    k8s.cronjob.active_jobs:\n      enabled: true\n    k8s.daemonset.current_scheduled_nodes:\n      enabled: true\n    k8s.daemonset.desired_scheduled_nodes:\n      enabled: true\n    k8s.daemonset.misscheduled_nodes:\n      enabled: true\n    k8s.daemonset.ready_nodes:\n      enabled: true\n    k8s.deployment.available:\n      enabled: true\n    k8s.deployment.desired:\n      enabled: true\n    k8s.hpa.current_replicas:\n      enabled: true\n    k8s.hpa.desired_replicas:\n      enabled: true\n    k8s.hpa.max_replicas:\n      enabled: true\n    k8s.hpa.min_replicas:\n      enabled: true\n    k8s.job.active_pods:\n      enabled: true\n    k8s.job.desired_successful_pods:\n      enabled: true\n    k8s.job.failed_pods:\n      enabled: true\n    k8s.job.max_parallel_pods:\n      enabled: true\n    k8s.job.successful_pods:\n      enabled: true\n    k8s.namespace.phase:\n      enabled: true\n    k8s.node.condition:\n      enabled: true\n    k8s.pod.phase:\n      enabled: true\n    k8s.pod.status_reason:\n      enabled: true\n    k8s.replicaset.available:\n      enabled: true\n    k8s.replicaset.desired:\n      enabled: true\n    k8s.replication_controller.available:\n      enabled: true\n    k8s.replication_controller.desired:\n      enabled: true\n    k8s.resource_quota.hard_limit:\n      enabled: true\n    k8s.resource_quota.used:\n      enabled: true\n    k8s.statefulset.current_pods:\n      enabled: true\n    k8s.statefulset.desired_pods:\n      enabled: true\n    k8s.statefulset.ready_pods:\n      enabled: true\n    k8s.statefulset.updated_pods:\n      enabled: true\n    openshift.appliedclusterquota.limit:\n      enabled: true\n    openshift.appliedclusterquota.used:\n      enabled: true\n    openshift.clusterquota.limit:\n      enabled: true\n    openshift.clusterquota.used:\n      enabled: true\n  resource_attributes:\n    container.id:\n      enabled: true\n    container.image.name:\n      enabled: true\n    container.image.tag:\n      enabled: true\n    container.runtime:\n      enabled: true\n    container.runtime.version:\n      enabled: true\n    k8s.container.name:\n      enabled: true\n    k8s.container.status.last_terminated_reason:\n      enabled: true\n    k8s.cronjob.name:\n      enabled: true\n    k8s.cronjob.uid:\n      enabled: true\n    k8s.daemonset.name:\n      enabled: true\n    k8s.daemonset.uid:\n      enabled: true\n    k8s.deployment.name:\n      enabled: true\n    k8s.deployment.uid:\n      enabled: true\n    k8s.hpa.name:\n      enabled: true\n    k8s.hpa.scaletargetref.apiversion:\n      enabled: true\n    k8s.hpa.scaletargetref.kind:\n      enabled: true\n    k8s.hpa.scaletargetref.name:\n      enabled: true\n    k8s.hpa.uid:\n      enabled: true\n    k8s.job.name:\n      enabled: true\n    k8s.job.uid:\n      enabled: true\n    k8s.kubelet.version:\n      enabled: true\n    k8s.namespace.name:\n      enabled: true\n    k8s.namespace.uid:\n      enabled: true\n    k8s.node.name:\n      enabled: true\n    k8s.node.uid:\n      enabled: true\n    k8s.pod.name:\n      enabled: true\n    k8s.pod.qos_class:\n      enabled: true\n    k8s.pod.uid:\n      enabled: true\n    k8s.replicaset.name:\n      enabled: true\n    k8s.replicaset.uid:\n      enabled: true\n    k8s.replicationcontroller.name:\n      enabled: true\n    k8s.replicationcontroller.uid:\n      enabled: true\n    k8s.resourcequota.name:\n      enabled: true\n    k8s.resourcequota.uid:\n      enabled: true\n    k8s.statefulset.name:\n      enabled: true\n    k8s.statefulset.uid:\n      enabled: true\n    openshift.clusterquota.name:\n      enabled: true\n    openshift.clusterquota.uid:\n      enabled: true\n    os.description:\n      enabled: true\n    os.type:\n      enabled: true\nnone_set:\n  metrics:\n    k8s.container.cpu_limit:\n      enabled: false\n    k8s.container.cpu_request:\n      enabled: false\n    k8s.container.ephemeralstorage_limit:\n      enabled: false\n    k8s.container.ephemeralstorage_request:\n      enabled: false\n    k8s.container.memory_limit:\n      enabled: false\n    k8s.container.memory_request:\n      enabled: false\n    k8s.container.ready:\n      enabled: false\n    k8s.container.restarts:\n      enabled: false\n    k8s.container.status.state:\n      enabled: false\n    k8s.container.storage_limit:\n      enabled: false\n    k8s.container.storage_request:\n      enabled: false\n    k8s.cronjob.active_jobs:\n      enabled: false\n    k8s.daemonset.current_scheduled_nodes:\n      enabled: false\n    k8s.daemonset.desired_scheduled_nodes:\n      enabled: false\n    k8s.daemonset.misscheduled_nodes:\n      enabled: false\n    k8s.daemonset.ready_nodes:\n      enabled: false\n    k8s.deployment.available:\n      enabled: false\n    k8s.deployment.desired:\n      enabled: false\n    k8s.hpa.current_replicas:\n      enabled: false\n    k8s.hpa.desired_replicas:\n      enabled: false\n    k8s.hpa.max_replicas:\n      enabled: false\n    k8s.hpa.min_replicas:\n      enabled: false\n    k8s.job.active_pods:\n      enabled: false\n    k8s.job.desired_successful_pods:\n      enabled: false\n    k8s.job.failed_pods:\n      enabled: false\n    k8s.job.max_parallel_pods:\n      enabled: false\n    k8s.job.successful_pods:\n      enabled: false\n    k8s.namespace.phase:\n      enabled: false\n    k8s.node.condition:\n      enabled: false\n    k8s.pod.phase:\n      enabled: false\n    k8s.pod.status_reason:\n      enabled: false\n    k8s.replicaset.available:\n      enabled: false\n    k8s.replicaset.desired:\n      enabled: false\n    k8s.replication_controller.available:\n      enabled: false\n    k8s.replication_controller.desired:\n      enabled: false\n    k8s.resource_quota.hard_limit:\n      enabled: false\n    k8s.resource_quota.used:\n      enabled: false\n    k8s.statefulset.current_pods:\n      enabled: false\n    k8s.statefulset.desired_pods:\n      enabled: false\n    k8s.statefulset.ready_pods:\n      enabled: false\n    k8s.statefulset.updated_pods:\n      enabled: false\n    openshift.appliedclusterquota.limit:\n      enabled: false\n    openshift.appliedclusterquota.used:\n      enabled: false\n    openshift.clusterquota.limit:\n      enabled: false\n    openshift.clusterquota.used:\n      enabled: false\n  resource_attributes:\n    container.id:\n      enabled: false\n    container.image.name:\n      enabled: false\n    container.image.tag:\n      enabled: false\n    container.runtime:\n      enabled: false\n    container.runtime.version:\n      enabled: false\n    k8s.container.name:\n      enabled: false\n    k8s.container.status.last_terminated_reason:\n      enabled: false\n    k8s.cronjob.name:\n      enabled: false\n    k8s.cronjob.uid:\n      enabled: false\n    k8s.daemonset.name:\n      enabled: false\n    k8s.daemonset.uid:\n      enabled: false\n    k8s.deployment.name:\n      enabled: false\n    k8s.deployment.uid:\n      enabled: false\n    k8s.hpa.name:\n      enabled: false\n    k8s.hpa.scaletargetref.apiversion:\n      enabled: false\n    k8s.hpa.scaletargetref.kind:\n      enabled: false\n    k8s.hpa.scaletargetref.name:\n      enabled: false\n    k8s.hpa.uid:\n      enabled: false\n    k8s.job.name:\n      enabled: false\n    k8s.job.uid:\n      enabled: false\n    k8s.kubelet.version:\n      enabled: false\n    k8s.namespace.name:\n      enabled: false\n    k8s.namespace.uid:\n      enabled: false\n    k8s.node.name:\n      enabled: false\n    k8s.node.uid:\n      enabled: false\n    k8s.pod.name:\n      enabled: false\n    k8s.pod.qos_class:\n      enabled: false\n    k8s.pod.uid:\n      enabled: false\n    k8s.replicaset.name:\n      enabled: false\n    k8s.replicaset.uid:\n      enabled: false\n    k8s.replicationcontroller.name:\n      enabled: false\n    k8s.replicationcontroller.uid:\n      enabled: false\n    k8s.resourcequota.name:\n      enabled: false\n    k8s.resourcequota.uid:\n      enabled: false\n    k8s.statefulset.name:\n      enabled: false\n    k8s.statefulset.uid:\n      enabled: false\n    openshift.clusterquota.name:\n      enabled: false\n    openshift.clusterquota.uid:\n      enabled: false\n    os.description:\n      enabled: false\n    os.type:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    container.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.image.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.image.tag:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.runtime:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.runtime.version:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.container.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.container.status.last_terminated_reason:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.cronjob.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.cronjob.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.daemonset.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.daemonset.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.deployment.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.deployment.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.hpa.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.hpa.scaletargetref.apiversion:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.hpa.scaletargetref.kind:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.hpa.scaletargetref.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.hpa.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.job.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.job.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.kubelet.version:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.namespace.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.namespace.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.node.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.pod.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.pod.qos_class:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.pod.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.replicaset.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.replicaset.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.replicationcontroller.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.replicationcontroller.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.resourcequota.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.resourcequota.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.statefulset.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    k8s.statefulset.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    openshift.clusterquota.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    openshift.clusterquota.uid:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    os.description:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    os.type:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    container.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.id-val\"\n    container.image.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.image.name-val\"\n    container.image.tag:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.image.tag-val\"\n    container.runtime:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.runtime-val\"\n    container.runtime.version:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.runtime.version-val\"\n    k8s.container.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.container.name-val\"\n    k8s.container.status.last_terminated_reason:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.container.status.last_terminated_reason-val\"\n    k8s.cronjob.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.cronjob.name-val\"\n    k8s.cronjob.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.cronjob.uid-val\"\n    k8s.daemonset.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.daemonset.name-val\"\n    k8s.daemonset.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.daemonset.uid-val\"\n    k8s.deployment.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.deployment.name-val\"\n    k8s.deployment.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.deployment.uid-val\"\n    k8s.hpa.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.hpa.name-val\"\n    k8s.hpa.scaletargetref.apiversion:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.hpa.scaletargetref.apiversion-val\"\n    k8s.hpa.scaletargetref.kind:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.hpa.scaletargetref.kind-val\"\n    k8s.hpa.scaletargetref.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.hpa.scaletargetref.name-val\"\n    k8s.hpa.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.hpa.uid-val\"\n    k8s.job.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.job.name-val\"\n    k8s.job.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.job.uid-val\"\n    k8s.kubelet.version:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.kubelet.version-val\"\n    k8s.namespace.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.namespace.name-val\"\n    k8s.namespace.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.namespace.uid-val\"\n    k8s.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.node.name-val\"\n    k8s.node.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.node.uid-val\"\n    k8s.pod.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.pod.name-val\"\n    k8s.pod.qos_class:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.pod.qos_class-val\"\n    k8s.pod.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.pod.uid-val\"\n    k8s.replicaset.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.replicaset.name-val\"\n    k8s.replicaset.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.replicaset.uid-val\"\n    k8s.replicationcontroller.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.replicationcontroller.name-val\"\n    k8s.replicationcontroller.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.replicationcontroller.uid-val\"\n    k8s.resourcequota.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.resourcequota.name-val\"\n    k8s.resourcequota.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.resourcequota.uid-val\"\n    k8s.statefulset.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.statefulset.name-val\"\n    k8s.statefulset.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"k8s.statefulset.uid-val\"\n    openshift.clusterquota.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"openshift.clusterquota.name-val\"\n    openshift.clusterquota.uid:\n      enabled: true\n      metrics_exclude:\n        - strict: \"openshift.clusterquota.uid-val\"\n    os.description:\n      enabled: true\n      metrics_exclude:\n        - strict: \"os.description-val\"\n    os.type:\n      enabled: true\n      metrics_exclude:\n        - strict: \"os.type-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "nsxt",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "cpu",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "cpu",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "filesystem",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "filesystem",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "filesystem",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "filesystem",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "memory",
              "cache",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "memory",
              "cache",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "network",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "network",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "network",
              "packet",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "nsxt",
              "node",
              "network",
              "packet",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "device",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "device",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "device",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "device",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "type",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "type",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "type",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "nsxt",
              "node",
              "type",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    nsxt.node.cpu.utilization:\n      enabled: true\n    nsxt.node.filesystem.usage:\n      enabled: true\n    nsxt.node.filesystem.utilization:\n      enabled: true\n    nsxt.node.memory.cache.usage:\n      enabled: true\n    nsxt.node.memory.usage:\n      enabled: true\n    nsxt.node.network.io:\n      enabled: true\n    nsxt.node.network.packet.count:\n      enabled: true\n  resource_attributes:\n    device.id:\n      enabled: true\n    nsxt.node.id:\n      enabled: true\n    nsxt.node.name:\n      enabled: true\n    nsxt.node.type:\n      enabled: true\nnone_set:\n  metrics:\n    nsxt.node.cpu.utilization:\n      enabled: false\n    nsxt.node.filesystem.usage:\n      enabled: false\n    nsxt.node.filesystem.utilization:\n      enabled: false\n    nsxt.node.memory.cache.usage:\n      enabled: false\n    nsxt.node.memory.usage:\n      enabled: false\n    nsxt.node.network.io:\n      enabled: false\n    nsxt.node.network.packet.count:\n      enabled: false\n  resource_attributes:\n    device.id:\n      enabled: false\n    nsxt.node.id:\n      enabled: false\n    nsxt.node.name:\n      enabled: false\n    nsxt.node.type:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    device.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    nsxt.node.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    nsxt.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    nsxt.node.type:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    device.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"device.id-val\"\n    nsxt.node.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"nsxt.node.id-val\"\n    nsxt.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"nsxt.node.name-val\"\n    nsxt.node.type:\n      enabled: true\n      metrics_exclude:\n        - strict: \"nsxt.node.type-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "journald",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Operators",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "operators"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream consumer. Default is false.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`. Default value is 30 seconds.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to a downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0. Default value is 5 minutes.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "maxBatchSize",
            "type": "int",
            "description": "currently not configurable by users, but available for benchmarking",
            "required": false,
            "path_tokens": [
              "max_batch_size"
            ]
          },
          {
            "name": "flushInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "flush_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Attributes",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "attributes"
            ]
          },
          {
            "name": "Resource",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource"
            ]
          },
          {
            "name": "OperatorID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "id"
            ]
          },
          {
            "name": "OperatorType",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "type"
            ]
          },
          {
            "name": "OutputIDs",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "output"
            ]
          },
          {
            "name": "Directory",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "directory"
            ]
          },
          {
            "name": "Files",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "files"
            ]
          },
          {
            "name": "StartAt",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "start_at"
            ]
          },
          {
            "name": "Units",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "units"
            ]
          },
          {
            "name": "Priority",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "priority"
            ]
          },
          {
            "name": "Matches",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "matches"
            ]
          },
          {
            "name": "Identifiers",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "identifiers"
            ]
          },
          {
            "name": "Grep",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "grep"
            ]
          },
          {
            "name": "Dmesg",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "dmesg"
            ]
          },
          {
            "name": "All",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "all"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "namespace"
            ]
          },
          {
            "name": "ConvertMessageBytes",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "convert_message_bytes"
            ],
            "unit": "bytes"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "mysql",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "default": "root",
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Database",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "database"
            ]
          },
          {
            "name": "AllowNativePasswords",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "allow_native_passwords"
            ],
            "sensitive": true
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "data_pages",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "data_pages",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "page_flushes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "page_flushes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "pages",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "pages",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "buffer_pool",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "client",
              "network",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "client",
              "network",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "commands",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "commands",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "connection",
              "errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "connection",
              "errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "double_writes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "double_writes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "handlers",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "handlers",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "index",
              "io",
              "wait",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "index",
              "io",
              "wait",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "index",
              "io",
              "wait",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "index",
              "io",
              "wait",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "joins",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "joins",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "locks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "locks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "log_operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "log_operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "max_used_connections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "max_used_connections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "mysqlx_connections",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "mysqlx_connections",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "mysqlx_worker_threads",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "mysqlx_worker_threads",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "opened_resources",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "opened_resources",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "page_operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "page_operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "page_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "page_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "prepared_statements",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "prepared_statements",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "query",
              "client",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "query",
              "client",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "query",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "query",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "query",
              "slow",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "query",
              "slow",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "replica",
              "sql_delay",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "replica",
              "sql_delay",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "replica",
              "time_behind_source",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "replica",
              "time_behind_source",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "row_locks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "row_locks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "row_operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "row_operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "sorts",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "sorts",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "statement_event",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "statement_event",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "statement_event",
              "wait",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "statement_event",
              "wait",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "average_row_length",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "average_row_length",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "io",
              "wait",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "io",
              "wait",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "io",
              "wait",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "io",
              "wait",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "read",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "read",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "read",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "read",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "write",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "write",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "write",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "lock_wait",
              "write",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "rows",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "rows",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table_open_cache",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "table_open_cache",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "threads",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "threads",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "tmp_resources",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "tmp_resources",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "mysql",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "mysql",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "mysql",
              "instance",
              "endpoint",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "DigestTextLimit",
            "type": "int",
            "description": "",
            "required": false,
            "default": 120,
            "path_tokens": [
              "statement_events",
              "digest_text_limit"
            ]
          },
          {
            "name": "Limit",
            "type": "int",
            "description": "",
            "required": false,
            "default": 250,
            "path_tokens": [
              "statement_events",
              "limit"
            ]
          },
          {
            "name": "TimeLimit",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "24h",
            "path_tokens": [
              "statement_events",
              "time_limit"
            ],
            "format": "duration"
          },
          {
            "name": "MaxRowsPerQuery",
            "type": "int",
            "description": "",
            "required": false,
            "default": 100,
            "path_tokens": [
              "query_sample_collection",
              "max_rows_per_query"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    mysql.buffer_pool.data_pages:\n      enabled: true\n    mysql.buffer_pool.limit:\n      enabled: true\n    mysql.buffer_pool.operations:\n      enabled: true\n    mysql.buffer_pool.page_flushes:\n      enabled: true\n    mysql.buffer_pool.pages:\n      enabled: true\n    mysql.buffer_pool.usage:\n      enabled: true\n    mysql.client.network.io:\n      enabled: true\n    mysql.commands:\n      enabled: true\n    mysql.connection.count:\n      enabled: true\n    mysql.connection.errors:\n      enabled: true\n    mysql.double_writes:\n      enabled: true\n    mysql.handlers:\n      enabled: true\n    mysql.index.io.wait.count:\n      enabled: true\n    mysql.index.io.wait.time:\n      enabled: true\n    mysql.joins:\n      enabled: true\n    mysql.locks:\n      enabled: true\n    mysql.log_operations:\n      enabled: true\n    mysql.max_used_connections:\n      enabled: true\n    mysql.mysqlx_connections:\n      enabled: true\n    mysql.mysqlx_worker_threads:\n      enabled: true\n    mysql.opened_resources:\n      enabled: true\n    mysql.operations:\n      enabled: true\n    mysql.page_operations:\n      enabled: true\n    mysql.page_size:\n      enabled: true\n    mysql.prepared_statements:\n      enabled: true\n    mysql.query.client.count:\n      enabled: true\n    mysql.query.count:\n      enabled: true\n    mysql.query.slow.count:\n      enabled: true\n    mysql.replica.sql_delay:\n      enabled: true\n    mysql.replica.time_behind_source:\n      enabled: true\n    mysql.row_locks:\n      enabled: true\n    mysql.row_operations:\n      enabled: true\n    mysql.sorts:\n      enabled: true\n    mysql.statement_event.count:\n      enabled: true\n    mysql.statement_event.wait.time:\n      enabled: true\n    mysql.table.average_row_length:\n      enabled: true\n    mysql.table.io.wait.count:\n      enabled: true\n    mysql.table.io.wait.time:\n      enabled: true\n    mysql.table.lock_wait.read.count:\n      enabled: true\n    mysql.table.lock_wait.read.time:\n      enabled: true\n    mysql.table.lock_wait.write.count:\n      enabled: true\n    mysql.table.lock_wait.write.time:\n      enabled: true\n    mysql.table.rows:\n      enabled: true\n    mysql.table.size:\n      enabled: true\n    mysql.table_open_cache:\n      enabled: true\n    mysql.threads:\n      enabled: true\n    mysql.tmp_resources:\n      enabled: true\n    mysql.uptime:\n      enabled: true\n  events:\n    db.server.query_sample:\n      enabled: true\n  resource_attributes:\n    mysql.instance.endpoint:\n      enabled: true\nnone_set:\n  metrics:\n    mysql.buffer_pool.data_pages:\n      enabled: false\n    mysql.buffer_pool.limit:\n      enabled: false\n    mysql.buffer_pool.operations:\n      enabled: false\n    mysql.buffer_pool.page_flushes:\n      enabled: false\n    mysql.buffer_pool.pages:\n      enabled: false\n    mysql.buffer_pool.usage:\n      enabled: false\n    mysql.client.network.io:\n      enabled: false\n    mysql.commands:\n      enabled: false\n    mysql.connection.count:\n      enabled: false\n    mysql.connection.errors:\n      enabled: false\n    mysql.double_writes:\n      enabled: false\n    mysql.handlers:\n      enabled: false\n    mysql.index.io.wait.count:\n      enabled: false\n    mysql.index.io.wait.time:\n      enabled: false\n    mysql.joins:\n      enabled: false\n    mysql.locks:\n      enabled: false\n    mysql.log_operations:\n      enabled: false\n    mysql.max_used_connections:\n      enabled: false\n    mysql.mysqlx_connections:\n      enabled: false\n    mysql.mysqlx_worker_threads:\n      enabled: false\n    mysql.opened_resources:\n      enabled: false\n    mysql.operations:\n      enabled: false\n    mysql.page_operations:\n      enabled: false\n    mysql.page_size:\n      enabled: false\n    mysql.prepared_statements:\n      enabled: false\n    mysql.query.client.count:\n      enabled: false\n    mysql.query.count:\n      enabled: false\n    mysql.query.slow.count:\n      enabled: false\n    mysql.replica.sql_delay:\n      enabled: false\n    mysql.replica.time_behind_source:\n      enabled: false\n    mysql.row_locks:\n      enabled: false\n    mysql.row_operations:\n      enabled: false\n    mysql.sorts:\n      enabled: false\n    mysql.statement_event.count:\n      enabled: false\n    mysql.statement_event.wait.time:\n      enabled: false\n    mysql.table.average_row_length:\n      enabled: false\n    mysql.table.io.wait.count:\n      enabled: false\n    mysql.table.io.wait.time:\n      enabled: false\n    mysql.table.lock_wait.read.count:\n      enabled: false\n    mysql.table.lock_wait.read.time:\n      enabled: false\n    mysql.table.lock_wait.write.count:\n      enabled: false\n    mysql.table.lock_wait.write.time:\n      enabled: false\n    mysql.table.rows:\n      enabled: false\n    mysql.table.size:\n      enabled: false\n    mysql.table_open_cache:\n      enabled: false\n    mysql.threads:\n      enabled: false\n    mysql.tmp_resources:\n      enabled: false\n    mysql.uptime:\n      enabled: false\n  events:\n    db.server.query_sample:\n      enabled: false\n  resource_attributes:\n    mysql.instance.endpoint:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    mysql.instance.endpoint:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    mysql.instance.endpoint:\n      enabled: true\n      metrics_exclude:\n        - strict: \"mysql.instance.endpoint-val\"\n      events_exclude:\n        - strict: \"mysql.instance.endpoint-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "ntp",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "ntp",
              "offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "ntp",
              "host",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "ntp",
              "host",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "ntp",
              "host",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "ntp",
              "host",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Version",
            "type": "int",
            "description": "",
            "required": false,
            "default": 4,
            "path_tokens": [
              "version"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "default": "pool.ntp.org:123",
            "path_tokens": [
              "endpoint"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    ntp.offset:\n      enabled: true\n  resource_attributes:\n    ntp.host:\n      enabled: true\nnone_set:\n  metrics:\n    ntp.offset:\n      enabled: false\n  resource_attributes:\n    ntp.host:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    ntp.host:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    ntp.host:\n      enabled: true\n      metrics_exclude:\n        - strict: \"ntp.host-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "oracledb",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "DataSource",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "datasource"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Service",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "service"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "consistent_gets",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "consistent_gets",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "cpu_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "cpu_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "db_block_gets",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "db_block_gets",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "ddl_statements_parallelized",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "ddl_statements_parallelized",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "dml_locks",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "dml_locks",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "dml_locks",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "dml_locks",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "dml_statements_parallelized",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "dml_statements_parallelized",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_deadlocks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_deadlocks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_locks",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_locks",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_locks",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_locks",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_resources",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_resources",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_resources",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "enqueue_resources",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "exchange_deadlocks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "exchange_deadlocks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "executions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "executions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "hard_parses",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "hard_parses",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "logical_reads",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "logical_reads",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "logons",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "logons",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_1_to_25_pct",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_1_to_25_pct",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_25_to_50_pct",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_25_to_50_pct",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_50_to_75_pct",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_50_to_75_pct",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_75_to_99_pct",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_75_to_99_pct",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_to_serial",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_downgraded_to_serial",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_not_downgraded",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parallel_operations_not_downgraded",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parse_calls",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "parse_calls",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "pga_memory",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "pga_memory",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_read_io_requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_read_io_requests",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_reads",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_reads",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_reads_direct",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_reads_direct",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_write_io_requests",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_write_io_requests",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_writes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_writes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_writes_direct",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "physical_writes_direct",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "processes",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "processes",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "processes",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "processes",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "queries_parallelized",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "queries_parallelized",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "sessions",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "sessions",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "sessions",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "sessions",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "tablespace_size",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "tablespace_size",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "tablespace_size",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "tablespace_size",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "transactions",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "transactions",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "transactions",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "transactions",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "user_commits",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "user_commits",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "user_rollbacks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "oracledb",
              "user_rollbacks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "top_query",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "top_query",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "oracledb",
              "instance",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "MaxQuerySampleCount",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "top_query_collection",
              "max_query_sample_count"
            ]
          },
          {
            "name": "TopQueryCount",
            "type": "int",
            "description": "",
            "required": false,
            "default": 200,
            "path_tokens": [
              "top_query_collection",
              "top_query_count"
            ]
          },
          {
            "name": "MaxRowsPerQuery",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "query_sample_collection",
              "max_rows_per_query"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    oracledb.consistent_gets:\n      enabled: true\n    oracledb.cpu_time:\n      enabled: true\n    oracledb.db_block_gets:\n      enabled: true\n    oracledb.ddl_statements_parallelized:\n      enabled: true\n    oracledb.dml_locks.limit:\n      enabled: true\n    oracledb.dml_locks.usage:\n      enabled: true\n    oracledb.dml_statements_parallelized:\n      enabled: true\n    oracledb.enqueue_deadlocks:\n      enabled: true\n    oracledb.enqueue_locks.limit:\n      enabled: true\n    oracledb.enqueue_locks.usage:\n      enabled: true\n    oracledb.enqueue_resources.limit:\n      enabled: true\n    oracledb.enqueue_resources.usage:\n      enabled: true\n    oracledb.exchange_deadlocks:\n      enabled: true\n    oracledb.executions:\n      enabled: true\n    oracledb.hard_parses:\n      enabled: true\n    oracledb.logical_reads:\n      enabled: true\n    oracledb.logons:\n      enabled: true\n    oracledb.parallel_operations_downgraded_1_to_25_pct:\n      enabled: true\n    oracledb.parallel_operations_downgraded_25_to_50_pct:\n      enabled: true\n    oracledb.parallel_operations_downgraded_50_to_75_pct:\n      enabled: true\n    oracledb.parallel_operations_downgraded_75_to_99_pct:\n      enabled: true\n    oracledb.parallel_operations_downgraded_to_serial:\n      enabled: true\n    oracledb.parallel_operations_not_downgraded:\n      enabled: true\n    oracledb.parse_calls:\n      enabled: true\n    oracledb.pga_memory:\n      enabled: true\n    oracledb.physical_read_io_requests:\n      enabled: true\n    oracledb.physical_reads:\n      enabled: true\n    oracledb.physical_reads_direct:\n      enabled: true\n    oracledb.physical_write_io_requests:\n      enabled: true\n    oracledb.physical_writes:\n      enabled: true\n    oracledb.physical_writes_direct:\n      enabled: true\n    oracledb.processes.limit:\n      enabled: true\n    oracledb.processes.usage:\n      enabled: true\n    oracledb.queries_parallelized:\n      enabled: true\n    oracledb.sessions.limit:\n      enabled: true\n    oracledb.sessions.usage:\n      enabled: true\n    oracledb.tablespace_size.limit:\n      enabled: true\n    oracledb.tablespace_size.usage:\n      enabled: true\n    oracledb.transactions.limit:\n      enabled: true\n    oracledb.transactions.usage:\n      enabled: true\n    oracledb.user_commits:\n      enabled: true\n    oracledb.user_rollbacks:\n      enabled: true\n  events:\n    db.server.query_sample:\n      enabled: true\n    db.server.top_query:\n      enabled: true\n  resource_attributes:\n    host.name:\n      enabled: true\n    oracledb.instance.name:\n      enabled: true\nnone_set:\n  metrics:\n    oracledb.consistent_gets:\n      enabled: false\n    oracledb.cpu_time:\n      enabled: false\n    oracledb.db_block_gets:\n      enabled: false\n    oracledb.ddl_statements_parallelized:\n      enabled: false\n    oracledb.dml_locks.limit:\n      enabled: false\n    oracledb.dml_locks.usage:\n      enabled: false\n    oracledb.dml_statements_parallelized:\n      enabled: false\n    oracledb.enqueue_deadlocks:\n      enabled: false\n    oracledb.enqueue_locks.limit:\n      enabled: false\n    oracledb.enqueue_locks.usage:\n      enabled: false\n    oracledb.enqueue_resources.limit:\n      enabled: false\n    oracledb.enqueue_resources.usage:\n      enabled: false\n    oracledb.exchange_deadlocks:\n      enabled: false\n    oracledb.executions:\n      enabled: false\n    oracledb.hard_parses:\n      enabled: false\n    oracledb.logical_reads:\n      enabled: false\n    oracledb.logons:\n      enabled: false\n    oracledb.parallel_operations_downgraded_1_to_25_pct:\n      enabled: false\n    oracledb.parallel_operations_downgraded_25_to_50_pct:\n      enabled: false\n    oracledb.parallel_operations_downgraded_50_to_75_pct:\n      enabled: false\n    oracledb.parallel_operations_downgraded_75_to_99_pct:\n      enabled: false\n    oracledb.parallel_operations_downgraded_to_serial:\n      enabled: false\n    oracledb.parallel_operations_not_downgraded:\n      enabled: false\n    oracledb.parse_calls:\n      enabled: false\n    oracledb.pga_memory:\n      enabled: false\n    oracledb.physical_read_io_requests:\n      enabled: false\n    oracledb.physical_reads:\n      enabled: false\n    oracledb.physical_reads_direct:\n      enabled: false\n    oracledb.physical_write_io_requests:\n      enabled: false\n    oracledb.physical_writes:\n      enabled: false\n    oracledb.physical_writes_direct:\n      enabled: false\n    oracledb.processes.limit:\n      enabled: false\n    oracledb.processes.usage:\n      enabled: false\n    oracledb.queries_parallelized:\n      enabled: false\n    oracledb.sessions.limit:\n      enabled: false\n    oracledb.sessions.usage:\n      enabled: false\n    oracledb.tablespace_size.limit:\n      enabled: false\n    oracledb.tablespace_size.usage:\n      enabled: false\n    oracledb.transactions.limit:\n      enabled: false\n    oracledb.transactions.usage:\n      enabled: false\n    oracledb.user_commits:\n      enabled: false\n    oracledb.user_rollbacks:\n      enabled: false\n  events:\n    db.server.query_sample:\n      enabled: false\n    db.server.top_query:\n      enabled: false\n  resource_attributes:\n    host.name:\n      enabled: false\n    oracledb.instance.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    host.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    oracledb.instance.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    host.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"host.name-val\"\n      events_exclude:\n        - strict: \"host.name-val\"\n    oracledb.instance.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"oracledb.instance.name-val\"\n      events_exclude:\n        - strict: \"oracledb.instance.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "podman",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The URL of the podman server.  Default is \"unix:///run/podman/podman.sock\"",
            "required": false,
            "default": "unix:///run/podman/podman.sock",
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "APIVersion",
            "type": "string",
            "description": "",
            "required": false,
            "default": "3.3.1",
            "path_tokens": [
              "api_version"
            ]
          },
          {
            "name": "SSHKey",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "ssh_key"
            ]
          },
          {
            "name": "SSHPassphrase",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "ssh_passphrase"
            ],
            "sensitive": true
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_bytes_recursive",
              "read",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_bytes_recursive",
              "read",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_bytes_recursive",
              "write",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "blockio",
              "io_service_bytes_recursive",
              "write",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "percent",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "percent",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "percpu",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "percpu",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "system",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "system",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "cpu",
              "usage",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "percent",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "percent",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "memory",
              "usage",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_bytes",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "rx_bytes",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_bytes",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "container",
              "network",
              "io",
              "usage",
              "tx_bytes",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "image",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "container",
              "runtime",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    container.blockio.io_service_bytes_recursive.read:\n      enabled: true\n    container.blockio.io_service_bytes_recursive.write:\n      enabled: true\n    container.cpu.percent:\n      enabled: true\n    container.cpu.usage.percpu:\n      enabled: true\n    container.cpu.usage.system:\n      enabled: true\n    container.cpu.usage.total:\n      enabled: true\n    container.memory.percent:\n      enabled: true\n    container.memory.usage.limit:\n      enabled: true\n    container.memory.usage.total:\n      enabled: true\n    container.network.io.usage.rx_bytes:\n      enabled: true\n    container.network.io.usage.tx_bytes:\n      enabled: true\n  resource_attributes:\n    container.id:\n      enabled: true\n    container.image.name:\n      enabled: true\n    container.name:\n      enabled: true\n    container.runtime:\n      enabled: true\nnone_set:\n  metrics:\n    container.blockio.io_service_bytes_recursive.read:\n      enabled: false\n    container.blockio.io_service_bytes_recursive.write:\n      enabled: false\n    container.cpu.percent:\n      enabled: false\n    container.cpu.usage.percpu:\n      enabled: false\n    container.cpu.usage.system:\n      enabled: false\n    container.cpu.usage.total:\n      enabled: false\n    container.memory.percent:\n      enabled: false\n    container.memory.usage.limit:\n      enabled: false\n    container.memory.usage.total:\n      enabled: false\n    container.network.io.usage.rx_bytes:\n      enabled: false\n    container.network.io.usage.tx_bytes:\n      enabled: false\n  resource_attributes:\n    container.id:\n      enabled: false\n    container.image.name:\n      enabled: false\n    container.name:\n      enabled: false\n    container.runtime:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    container.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.image.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    container.runtime:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    container.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.id-val\"\n    container.image.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.image.name-val\"\n    container.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.name-val\"\n    container.runtime:\n      enabled: true\n      metrics_exclude:\n        - strict: \"container.runtime-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "otelarrow",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "middlewares"
            ]
          },
          {
            "name": "MemoryLimitMiB",
            "type": "int",
            "description": "MemoryLimitMiB is the size of a shared memory region used by all Arrow streams, in MiB.  When too much load is passing through, they will see ResourceExhausted errors.",
            "required": false,
            "default": 128,
            "path_tokens": [
              "protocols",
              "arrow",
              "memory_limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "DeprecatedAdmissionLimitMiB",
            "type": "int",
            "description": "Deprecated: This field is no longer supported, use cfg.Admission.RequestLimitMiB instead.",
            "required": false,
            "path_tokens": [
              "protocols",
              "arrow",
              "admission_limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "DeprecatedWaiterLimit",
            "type": "int",
            "description": "Deprecated: This field is no longer supported, use cfg.Admission.WaiterLimit instead.",
            "required": false,
            "path_tokens": [
              "protocols",
              "arrow",
              "waiter_limit"
            ]
          },
          {
            "name": "MemoryLimitMiB",
            "type": "int",
            "description": "MemoryLimitMiB is a memory limit control for the decoder, as a way to limit overall memory use by Zstd. See `zstdlib.WithDecoderMaxMemory()`.",
            "required": false,
            "path_tokens": [
              "protocols",
              "arrow",
              "zstd",
              "memory_limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxWindowSizeMiB",
            "type": "int",
            "description": "MaxWindowSizeMiB limits window sizes that can be configured in the corresponding encoder's `EncoderConfig.WindowSizeMiB` setting, as a way to control memory usage. See `zstdlib.WithDecoderMaxWindow()`.",
            "required": false,
            "path_tokens": [
              "protocols",
              "arrow",
              "zstd",
              "max_window_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "Concurrency",
            "type": "int",
            "description": "Concurrency is a Zstd-library parameter that configures the use of background goroutines to improve decompression speed. 0 means to let the library decide (it will use up to GOMAXPROCS), and 1 means to avoid background workers.  (default: 1) See `zstdlib.WithDecoderConcurrency()`.",
            "required": false,
            "path_tokens": [
              "protocols",
              "arrow",
              "zstd",
              "concurrency"
            ]
          },
          {
            "name": "RequestLimitMiB",
            "type": "int",
            "description": "RequestLimitMiB limits the number of requests that are received by the stream based on uncompressed request size. Request size is used to control how much traffic we admit for processing.  When this field is zero, admission control is disabled.",
            "required": false,
            "default": 128,
            "path_tokens": [
              "admission",
              "request_limit_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "WaitingLimitMiB",
            "type": "int",
            "description": "WaitingLimitMiB is the limit on the amount of data waiting to be consumed. This is a dimension of memory limiting to ensure waiters are not consuming an unexpectedly large amount of memory in the arrow receiver.",
            "required": false,
            "default": 32,
            "path_tokens": [
              "admission",
              "waiting_limit_mib"
            ],
            "unit": "MiB"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "pprof",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "postgresql",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Databases",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "databases"
            ]
          },
          {
            "name": "ExcludeDatabases",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "exclude_databases"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "MaxIdleTime",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection_pool",
              "max_idle_time"
            ]
          },
          {
            "name": "MaxLifetime",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection_pool",
              "max_lifetime"
            ]
          },
          {
            "name": "MaxIdle",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection_pool",
              "max_idle"
            ]
          },
          {
            "name": "MaxOpen",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection_pool",
              "max_open"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "backends",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "backends",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "buffers",
              "allocated",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "buffers",
              "allocated",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "buffers",
              "writes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "buffers",
              "writes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "checkpoint",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "checkpoint",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "maxwritten",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "bgwriter",
              "maxwritten",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "blks_hit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "blks_hit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "blks_read",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "blks_read",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "blocks_read",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "blocks_read",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "commits",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "commits",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "connection",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "connection",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "database",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "database",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "database",
              "locks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "database",
              "locks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "db_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "db_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "deadlocks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "deadlocks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "function",
              "calls",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "function",
              "calls",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "index",
              "scans",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "index",
              "scans",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "index",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "index",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "replication",
              "data_delay",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "replication",
              "data_delay",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "rollbacks",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "rollbacks",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "rows",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "rows",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "sequential_scans",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "sequential_scans",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "table",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "table",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "table",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "table",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "table",
              "vacuum",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "table",
              "vacuum",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "temp",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "temp",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "temp_files",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "temp_files",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_deleted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_deleted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_fetched",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_fetched",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_inserted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_inserted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_returned",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_returned",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_updated",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "tup_updated",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "wal",
              "age",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "wal",
              "age",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "wal",
              "delay",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "wal",
              "delay",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "wal",
              "lag",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "postgresql",
              "wal",
              "lag",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "top_query",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "top_query",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "database",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "index",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "schema",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "postgresql",
              "table",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "MaxRowsPerQuery",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "query_sample_collection",
              "max_rows_per_query"
            ]
          },
          {
            "name": "MaxRowsPerQuery",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "top_query_collection",
              "max_rows_per_query"
            ]
          },
          {
            "name": "TopNQuery",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "top_query_collection",
              "top_n_query"
            ]
          },
          {
            "name": "MaxExplainEachInterval",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "top_query_collection",
              "max_explain_each_interval"
            ]
          },
          {
            "name": "QueryPlanCacheSize",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "top_query_collection",
              "query_plan_cache_size"
            ]
          },
          {
            "name": "QueryPlanCacheTTL",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "time.Hour",
            "path_tokens": [
              "top_query_collection",
              "query_plan_cache_ttl"
            ],
            "format": "duration"
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    postgresql.backends:\n      enabled: true\n    postgresql.bgwriter.buffers.allocated:\n      enabled: true\n    postgresql.bgwriter.buffers.writes:\n      enabled: true\n    postgresql.bgwriter.checkpoint.count:\n      enabled: true\n    postgresql.bgwriter.duration:\n      enabled: true\n    postgresql.bgwriter.maxwritten:\n      enabled: true\n    postgresql.blks_hit:\n      enabled: true\n    postgresql.blks_read:\n      enabled: true\n    postgresql.blocks_read:\n      enabled: true\n    postgresql.commits:\n      enabled: true\n    postgresql.connection.max:\n      enabled: true\n    postgresql.database.count:\n      enabled: true\n    postgresql.database.locks:\n      enabled: true\n    postgresql.db_size:\n      enabled: true\n    postgresql.deadlocks:\n      enabled: true\n    postgresql.function.calls:\n      enabled: true\n    postgresql.index.scans:\n      enabled: true\n    postgresql.index.size:\n      enabled: true\n    postgresql.operations:\n      enabled: true\n    postgresql.replication.data_delay:\n      enabled: true\n    postgresql.rollbacks:\n      enabled: true\n    postgresql.rows:\n      enabled: true\n    postgresql.sequential_scans:\n      enabled: true\n    postgresql.table.count:\n      enabled: true\n    postgresql.table.size:\n      enabled: true\n    postgresql.table.vacuum.count:\n      enabled: true\n    postgresql.temp.io:\n      enabled: true\n    postgresql.temp_files:\n      enabled: true\n    postgresql.tup_deleted:\n      enabled: true\n    postgresql.tup_fetched:\n      enabled: true\n    postgresql.tup_inserted:\n      enabled: true\n    postgresql.tup_returned:\n      enabled: true\n    postgresql.tup_updated:\n      enabled: true\n    postgresql.wal.age:\n      enabled: true\n    postgresql.wal.delay:\n      enabled: true\n    postgresql.wal.lag:\n      enabled: true\n  events:\n    db.server.query_sample:\n      enabled: true\n    db.server.top_query:\n      enabled: true\n  resource_attributes:\n    postgresql.database.name:\n      enabled: true\n    postgresql.index.name:\n      enabled: true\n    postgresql.schema.name:\n      enabled: true\n    postgresql.table.name:\n      enabled: true\nnone_set:\n  metrics:\n    postgresql.backends:\n      enabled: false\n    postgresql.bgwriter.buffers.allocated:\n      enabled: false\n    postgresql.bgwriter.buffers.writes:\n      enabled: false\n    postgresql.bgwriter.checkpoint.count:\n      enabled: false\n    postgresql.bgwriter.duration:\n      enabled: false\n    postgresql.bgwriter.maxwritten:\n      enabled: false\n    postgresql.blks_hit:\n      enabled: false\n    postgresql.blks_read:\n      enabled: false\n    postgresql.blocks_read:\n      enabled: false\n    postgresql.commits:\n      enabled: false\n    postgresql.connection.max:\n      enabled: false\n    postgresql.database.count:\n      enabled: false\n    postgresql.database.locks:\n      enabled: false\n    postgresql.db_size:\n      enabled: false\n    postgresql.deadlocks:\n      enabled: false\n    postgresql.function.calls:\n      enabled: false\n    postgresql.index.scans:\n      enabled: false\n    postgresql.index.size:\n      enabled: false\n    postgresql.operations:\n      enabled: false\n    postgresql.replication.data_delay:\n      enabled: false\n    postgresql.rollbacks:\n      enabled: false\n    postgresql.rows:\n      enabled: false\n    postgresql.sequential_scans:\n      enabled: false\n    postgresql.table.count:\n      enabled: false\n    postgresql.table.size:\n      enabled: false\n    postgresql.table.vacuum.count:\n      enabled: false\n    postgresql.temp.io:\n      enabled: false\n    postgresql.temp_files:\n      enabled: false\n    postgresql.tup_deleted:\n      enabled: false\n    postgresql.tup_fetched:\n      enabled: false\n    postgresql.tup_inserted:\n      enabled: false\n    postgresql.tup_returned:\n      enabled: false\n    postgresql.tup_updated:\n      enabled: false\n    postgresql.wal.age:\n      enabled: false\n    postgresql.wal.delay:\n      enabled: false\n    postgresql.wal.lag:\n      enabled: false\n  events:\n    db.server.query_sample:\n      enabled: false\n    db.server.top_query:\n      enabled: false\n  resource_attributes:\n    postgresql.database.name:\n      enabled: false\n    postgresql.index.name:\n      enabled: false\n    postgresql.schema.name:\n      enabled: false\n    postgresql.table.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    postgresql.database.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    postgresql.index.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    postgresql.schema.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    postgresql.table.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    postgresql.database.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"postgresql.database.name-val\"\n      events_exclude:\n        - strict: \"postgresql.database.name-val\"\n    postgresql.index.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"postgresql.index.name-val\"\n      events_exclude:\n        - strict: \"postgresql.index.name-val\"\n    postgresql.schema.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"postgresql.schema.name-val\"\n      events_exclude:\n        - strict: \"postgresql.schema.name-val\"\n    postgresql.table.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"postgresql.table.name-val\"\n      events_exclude:\n        - strict: \"postgresql.table.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "pulsar",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Configure the service URL for the Pulsar service.",
            "required": false,
            "default": "pulsar://localhost:6650",
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "The topic of pulsar to consume logs,metrics,traces. (default = \"otlp_traces\" for traces, \"otlp_metrics\" for metrics, \"otlp_logs\" for logs)",
            "required": false,
            "path_tokens": [
              "topic"
            ]
          },
          {
            "name": "Subscription",
            "type": "string",
            "description": "The Subscription that receiver will be consuming messages from (default \"otlp_subscription\")",
            "required": false,
            "default": "otlp_subscription",
            "path_tokens": [
              "subscription"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding of the messages (default \"otlp_proto\")",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "encoding"
            ]
          },
          {
            "name": "ConsumerName",
            "type": "string",
            "description": "Name specifies the consumer name.",
            "required": false,
            "default": "",
            "path_tokens": [
              "consumer_name"
            ]
          },
          {
            "name": "TLSTrustCertsFilePath",
            "type": "string",
            "description": "Set the path to the trusted TLS certificate file",
            "required": false,
            "path_tokens": [
              "tls_trust_certs_file_path"
            ]
          },
          {
            "name": "TLSAllowInsecureConnection",
            "type": "bool",
            "description": "Configure whether the Pulsar client accept untrusted TLS certificate from broker (default: false)",
            "required": false,
            "path_tokens": [
              "tls_allow_insecure_connection"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "Token",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "token",
              "token"
            ],
            "sensitive": true
          },
          {
            "name": "ProviderDomain",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "provider_domain"
            ]
          },
          {
            "name": "TenantDomain",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "tenant_domain"
            ]
          },
          {
            "name": "TenantService",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "tenant_service"
            ]
          },
          {
            "name": "PrivateKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "private_key"
            ],
            "sensitive": true
          },
          {
            "name": "KeyID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "key_id"
            ]
          },
          {
            "name": "PrincipalHeader",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "principal_header"
            ]
          },
          {
            "name": "ZtsURL",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "zts_url"
            ]
          },
          {
            "name": "IssuerURL",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "oauth2",
              "issuer_url"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "oauth2",
              "client_id"
            ]
          },
          {
            "name": "Audience",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "oauth2",
              "audience"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "prometheusremotewrite",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "receivercreator",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "receiverTemplates",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "receiver_templates"
            ]
          },
          {
            "name": "WatchObservers",
            "type": "array",
            "description": "WatchObservers are the extensions to listen to endpoints from.",
            "required": false,
            "path_tokens": [
              "watch_observers"
            ]
          },
          {
            "name": "ResourceAttributes",
            "type": "custom",
            "description": "ResourceAttributes is a map of default resource attributes to add to each resource object received by this receiver from dynamically created receivers.",
            "required": false,
            "path_tokens": [
              "resource_attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "discovery",
              "enabled"
            ]
          },
          {
            "name": "IgnoreReceivers",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "discovery",
              "ignore_receivers"
            ]
          },
          {
            "name": "DefaultAnnotations",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "discovery",
              "default_annotations"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "snmp",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is the SNMP target to request data from. Must be formatted as [udp|tcp|][4|6|]://{host}:{port}. Default: udp://localhost:161 If no scheme is given, udp4 is assumed. If no port is given, 161 is assumed.",
            "required": false,
            "default": "udp://localhost:161",
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Version",
            "type": "string",
            "description": "Version is the version of SNMP to use for this connection. Valid options: v1, v2c, v3. Default: v2c",
            "required": false,
            "default": "v2c",
            "path_tokens": [
              "version"
            ]
          },
          {
            "name": "Community",
            "type": "string",
            "description": "Community is the SNMP community string to use. Only valid for versions \"v1\" and \"v2c\" Default: public",
            "required": false,
            "default": "public",
            "path_tokens": [
              "community"
            ]
          },
          {
            "name": "User",
            "type": "string",
            "description": "User is the SNMP User for this connection. Only valid for version “v3”",
            "required": false,
            "path_tokens": [
              "user"
            ]
          },
          {
            "name": "SecurityLevel",
            "type": "string",
            "description": "SecurityLevel is the security level to use for this SNMP connection. Only valid for version “v3” Valid options: “no_auth_no_priv”, “auth_no_priv”, “auth_priv” Default: \"no_auth_no_priv\"",
            "required": false,
            "default": "no_auth_no_priv",
            "path_tokens": [
              "security_level"
            ]
          },
          {
            "name": "AuthType",
            "type": "string",
            "description": "AuthType is the type of authentication protocol to use for this SNMP connection. Only valid for version “v3” and if “no_auth_no_priv” is not selected for SecurityLevel Valid options: “md5”, “sha”, “sha224”, “sha256”, “sha384”, “sha512” Default: \"md5\"",
            "required": false,
            "default": "MD5",
            "path_tokens": [
              "auth_type"
            ]
          },
          {
            "name": "AuthPassword",
            "type": "custom",
            "description": "AuthPassword is the authentication password used for this SNMP connection. Only valid for version \"v3\" and if \"no_auth_no_priv\" is not selected for SecurityLevel",
            "required": false,
            "path_tokens": [
              "auth_password"
            ],
            "sensitive": true
          },
          {
            "name": "PrivacyType",
            "type": "string",
            "description": "PrivacyType is the type of privacy protocol to use for this SNMP connection. Only valid for version “v3” and if \"auth_priv\" is selected for SecurityLevel Valid options: “des”, “aes”, “aes192”, “aes256”, “aes192c”, “aes256c” Default: \"des\"",
            "required": false,
            "default": "DES",
            "path_tokens": [
              "privacy_type"
            ]
          },
          {
            "name": "PrivacyPassword",
            "type": "custom",
            "description": "PrivacyPassword is the authentication password used for this SNMP connection. Only valid for version “v3” and if \"auth_priv\" is selected for SecurityLevel",
            "required": false,
            "path_tokens": [
              "privacy_password"
            ],
            "sensitive": true
          },
          {
            "name": "ResourceAttributes",
            "type": "stringMap",
            "description": "ResourceAttributes defines what resource attributes will be used for this receiver and is composed of resource attribute names along with their resource attribute configurations",
            "required": false,
            "path_tokens": [
              "resource_attributes"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringMap",
            "description": "Attributes defines what attributes will be used on metrics for this receiver and is composed of attribute names along with their attribute configurations",
            "required": false,
            "path_tokens": [
              "attributes"
            ]
          },
          {
            "name": "Metrics",
            "type": "stringMap",
            "description": "Metrics defines what SNMP metrics will be collected for this receiver and is composed of metric names along with their metric configurations",
            "required": false,
            "path_tokens": [
              "metrics"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "rabbitmq",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "consumer",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "consumer",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "acknowledged",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "acknowledged",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "delivered",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "delivered",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "dropped",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "dropped",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "published",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "message",
              "published",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_closed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_closed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_closed_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_closed_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_created",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_created",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_created_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "channel_created_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_closed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_closed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_closed_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_closed_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_created",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_created",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_created_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "connection_created_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "context_switches",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "context_switches",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "context_switches_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "context_switches_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free_alarm",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free_alarm",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "disk_free_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "fd_total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "fd_total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "fd_used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "fd_used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "fd_used_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "fd_used_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_bytes_reclaimed",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_bytes_reclaimed",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_bytes_reclaimed_details",
              "rate",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_bytes_reclaimed_details",
              "rate",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_num",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_num",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_num_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "gc_num_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_avg_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_avg_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_avg_time_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_avg_time_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_bytes",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_bytes",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_bytes_details",
              "rate",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_bytes_details",
              "rate",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_read_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_reopen_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_reopen_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_reopen_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_reopen_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_avg_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_avg_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_avg_time_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_avg_time_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_seek_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_avg_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_avg_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_avg_time_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_avg_time_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_sync_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_avg_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_avg_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_avg_time_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_avg_time_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_bytes",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_bytes",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_bytes_details",
              "rate",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_bytes_details",
              "rate",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "io_write_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_alarm",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_alarm",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_used_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mem_used_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_disk_tx_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_disk_tx_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_disk_tx_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_disk_tx_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_ram_tx_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_ram_tx_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_ram_tx_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "mnesia_ram_tx_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_read_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_read_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_read_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_read_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_write_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_write_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_write_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "msg_store_write_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "proc_total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "proc_total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "proc_used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "proc_used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "proc_used_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "proc_used_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "processors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "processors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_created",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_created",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_created_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_created_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_declared",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_declared",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_declared_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_declared_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_deleted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_deleted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_deleted_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_deleted_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_read_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_read_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_read_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_read_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_write_count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_write_count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_write_count_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "queue_index_write_count_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "run_queue",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "run_queue",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "sockets_total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "sockets_total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "sockets_used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "sockets_used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "sockets_used_details",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "sockets_used_details",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "rabbitmq",
              "node",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "queue",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "queue",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "queue",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "queue",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "vhost",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "vhost",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "vhost",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "rabbitmq",
              "vhost",
              "name",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    rabbitmq.consumer.count:\n      enabled: true\n    rabbitmq.message.acknowledged:\n      enabled: true\n    rabbitmq.message.current:\n      enabled: true\n    rabbitmq.message.delivered:\n      enabled: true\n    rabbitmq.message.dropped:\n      enabled: true\n    rabbitmq.message.published:\n      enabled: true\n    rabbitmq.node.channel_closed:\n      enabled: true\n    rabbitmq.node.channel_closed_details.rate:\n      enabled: true\n    rabbitmq.node.channel_created:\n      enabled: true\n    rabbitmq.node.channel_created_details.rate:\n      enabled: true\n    rabbitmq.node.connection_closed:\n      enabled: true\n    rabbitmq.node.connection_closed_details.rate:\n      enabled: true\n    rabbitmq.node.connection_created:\n      enabled: true\n    rabbitmq.node.connection_created_details.rate:\n      enabled: true\n    rabbitmq.node.context_switches:\n      enabled: true\n    rabbitmq.node.context_switches_details.rate:\n      enabled: true\n    rabbitmq.node.disk_free:\n      enabled: true\n    rabbitmq.node.disk_free_alarm:\n      enabled: true\n    rabbitmq.node.disk_free_details.rate:\n      enabled: true\n    rabbitmq.node.disk_free_limit:\n      enabled: true\n    rabbitmq.node.fd_total:\n      enabled: true\n    rabbitmq.node.fd_used:\n      enabled: true\n    rabbitmq.node.fd_used_details.rate:\n      enabled: true\n    rabbitmq.node.gc_bytes_reclaimed:\n      enabled: true\n    rabbitmq.node.gc_bytes_reclaimed_details.rate:\n      enabled: true\n    rabbitmq.node.gc_num:\n      enabled: true\n    rabbitmq.node.gc_num_details.rate:\n      enabled: true\n    rabbitmq.node.io_read_avg_time:\n      enabled: true\n    rabbitmq.node.io_read_avg_time_details.rate:\n      enabled: true\n    rabbitmq.node.io_read_bytes:\n      enabled: true\n    rabbitmq.node.io_read_bytes_details.rate:\n      enabled: true\n    rabbitmq.node.io_read_count:\n      enabled: true\n    rabbitmq.node.io_read_count_details.rate:\n      enabled: true\n    rabbitmq.node.io_reopen_count:\n      enabled: true\n    rabbitmq.node.io_reopen_count_details.rate:\n      enabled: true\n    rabbitmq.node.io_seek_avg_time:\n      enabled: true\n    rabbitmq.node.io_seek_avg_time_details.rate:\n      enabled: true\n    rabbitmq.node.io_seek_count:\n      enabled: true\n    rabbitmq.node.io_seek_count_details.rate:\n      enabled: true\n    rabbitmq.node.io_sync_avg_time:\n      enabled: true\n    rabbitmq.node.io_sync_avg_time_details.rate:\n      enabled: true\n    rabbitmq.node.io_sync_count:\n      enabled: true\n    rabbitmq.node.io_sync_count_details.rate:\n      enabled: true\n    rabbitmq.node.io_write_avg_time:\n      enabled: true\n    rabbitmq.node.io_write_avg_time_details.rate:\n      enabled: true\n    rabbitmq.node.io_write_bytes:\n      enabled: true\n    rabbitmq.node.io_write_bytes_details.rate:\n      enabled: true\n    rabbitmq.node.io_write_count:\n      enabled: true\n    rabbitmq.node.io_write_count_details.rate:\n      enabled: true\n    rabbitmq.node.mem_alarm:\n      enabled: true\n    rabbitmq.node.mem_limit:\n      enabled: true\n    rabbitmq.node.mem_used:\n      enabled: true\n    rabbitmq.node.mem_used_details.rate:\n      enabled: true\n    rabbitmq.node.mnesia_disk_tx_count:\n      enabled: true\n    rabbitmq.node.mnesia_disk_tx_count_details.rate:\n      enabled: true\n    rabbitmq.node.mnesia_ram_tx_count:\n      enabled: true\n    rabbitmq.node.mnesia_ram_tx_count_details.rate:\n      enabled: true\n    rabbitmq.node.msg_store_read_count:\n      enabled: true\n    rabbitmq.node.msg_store_read_count_details.rate:\n      enabled: true\n    rabbitmq.node.msg_store_write_count:\n      enabled: true\n    rabbitmq.node.msg_store_write_count_details.rate:\n      enabled: true\n    rabbitmq.node.proc_total:\n      enabled: true\n    rabbitmq.node.proc_used:\n      enabled: true\n    rabbitmq.node.proc_used_details.rate:\n      enabled: true\n    rabbitmq.node.processors:\n      enabled: true\n    rabbitmq.node.queue_created:\n      enabled: true\n    rabbitmq.node.queue_created_details.rate:\n      enabled: true\n    rabbitmq.node.queue_declared:\n      enabled: true\n    rabbitmq.node.queue_declared_details.rate:\n      enabled: true\n    rabbitmq.node.queue_deleted:\n      enabled: true\n    rabbitmq.node.queue_deleted_details.rate:\n      enabled: true\n    rabbitmq.node.queue_index_read_count:\n      enabled: true\n    rabbitmq.node.queue_index_read_count_details.rate:\n      enabled: true\n    rabbitmq.node.queue_index_write_count:\n      enabled: true\n    rabbitmq.node.queue_index_write_count_details.rate:\n      enabled: true\n    rabbitmq.node.run_queue:\n      enabled: true\n    rabbitmq.node.sockets_total:\n      enabled: true\n    rabbitmq.node.sockets_used:\n      enabled: true\n    rabbitmq.node.sockets_used_details.rate:\n      enabled: true\n    rabbitmq.node.uptime:\n      enabled: true\n  resource_attributes:\n    rabbitmq.node.name:\n      enabled: true\n    rabbitmq.queue.name:\n      enabled: true\n    rabbitmq.vhost.name:\n      enabled: true\nnone_set:\n  metrics:\n    rabbitmq.consumer.count:\n      enabled: false\n    rabbitmq.message.acknowledged:\n      enabled: false\n    rabbitmq.message.current:\n      enabled: false\n    rabbitmq.message.delivered:\n      enabled: false\n    rabbitmq.message.dropped:\n      enabled: false\n    rabbitmq.message.published:\n      enabled: false\n    rabbitmq.node.channel_closed:\n      enabled: false\n    rabbitmq.node.channel_closed_details.rate:\n      enabled: false\n    rabbitmq.node.channel_created:\n      enabled: false\n    rabbitmq.node.channel_created_details.rate:\n      enabled: false\n    rabbitmq.node.connection_closed:\n      enabled: false\n    rabbitmq.node.connection_closed_details.rate:\n      enabled: false\n    rabbitmq.node.connection_created:\n      enabled: false\n    rabbitmq.node.connection_created_details.rate:\n      enabled: false\n    rabbitmq.node.context_switches:\n      enabled: false\n    rabbitmq.node.context_switches_details.rate:\n      enabled: false\n    rabbitmq.node.disk_free:\n      enabled: false\n    rabbitmq.node.disk_free_alarm:\n      enabled: false\n    rabbitmq.node.disk_free_details.rate:\n      enabled: false\n    rabbitmq.node.disk_free_limit:\n      enabled: false\n    rabbitmq.node.fd_total:\n      enabled: false\n    rabbitmq.node.fd_used:\n      enabled: false\n    rabbitmq.node.fd_used_details.rate:\n      enabled: false\n    rabbitmq.node.gc_bytes_reclaimed:\n      enabled: false\n    rabbitmq.node.gc_bytes_reclaimed_details.rate:\n      enabled: false\n    rabbitmq.node.gc_num:\n      enabled: false\n    rabbitmq.node.gc_num_details.rate:\n      enabled: false\n    rabbitmq.node.io_read_avg_time:\n      enabled: false\n    rabbitmq.node.io_read_avg_time_details.rate:\n      enabled: false\n    rabbitmq.node.io_read_bytes:\n      enabled: false\n    rabbitmq.node.io_read_bytes_details.rate:\n      enabled: false\n    rabbitmq.node.io_read_count:\n      enabled: false\n    rabbitmq.node.io_read_count_details.rate:\n      enabled: false\n    rabbitmq.node.io_reopen_count:\n      enabled: false\n    rabbitmq.node.io_reopen_count_details.rate:\n      enabled: false\n    rabbitmq.node.io_seek_avg_time:\n      enabled: false\n    rabbitmq.node.io_seek_avg_time_details.rate:\n      enabled: false\n    rabbitmq.node.io_seek_count:\n      enabled: false\n    rabbitmq.node.io_seek_count_details.rate:\n      enabled: false\n    rabbitmq.node.io_sync_avg_time:\n      enabled: false\n    rabbitmq.node.io_sync_avg_time_details.rate:\n      enabled: false\n    rabbitmq.node.io_sync_count:\n      enabled: false\n    rabbitmq.node.io_sync_count_details.rate:\n      enabled: false\n    rabbitmq.node.io_write_avg_time:\n      enabled: false\n    rabbitmq.node.io_write_avg_time_details.rate:\n      enabled: false\n    rabbitmq.node.io_write_bytes:\n      enabled: false\n    rabbitmq.node.io_write_bytes_details.rate:\n      enabled: false\n    rabbitmq.node.io_write_count:\n      enabled: false\n    rabbitmq.node.io_write_count_details.rate:\n      enabled: false\n    rabbitmq.node.mem_alarm:\n      enabled: false\n    rabbitmq.node.mem_limit:\n      enabled: false\n    rabbitmq.node.mem_used:\n      enabled: false\n    rabbitmq.node.mem_used_details.rate:\n      enabled: false\n    rabbitmq.node.mnesia_disk_tx_count:\n      enabled: false\n    rabbitmq.node.mnesia_disk_tx_count_details.rate:\n      enabled: false\n    rabbitmq.node.mnesia_ram_tx_count:\n      enabled: false\n    rabbitmq.node.mnesia_ram_tx_count_details.rate:\n      enabled: false\n    rabbitmq.node.msg_store_read_count:\n      enabled: false\n    rabbitmq.node.msg_store_read_count_details.rate:\n      enabled: false\n    rabbitmq.node.msg_store_write_count:\n      enabled: false\n    rabbitmq.node.msg_store_write_count_details.rate:\n      enabled: false\n    rabbitmq.node.proc_total:\n      enabled: false\n    rabbitmq.node.proc_used:\n      enabled: false\n    rabbitmq.node.proc_used_details.rate:\n      enabled: false\n    rabbitmq.node.processors:\n      enabled: false\n    rabbitmq.node.queue_created:\n      enabled: false\n    rabbitmq.node.queue_created_details.rate:\n      enabled: false\n    rabbitmq.node.queue_declared:\n      enabled: false\n    rabbitmq.node.queue_declared_details.rate:\n      enabled: false\n    rabbitmq.node.queue_deleted:\n      enabled: false\n    rabbitmq.node.queue_deleted_details.rate:\n      enabled: false\n    rabbitmq.node.queue_index_read_count:\n      enabled: false\n    rabbitmq.node.queue_index_read_count_details.rate:\n      enabled: false\n    rabbitmq.node.queue_index_write_count:\n      enabled: false\n    rabbitmq.node.queue_index_write_count_details.rate:\n      enabled: false\n    rabbitmq.node.run_queue:\n      enabled: false\n    rabbitmq.node.sockets_total:\n      enabled: false\n    rabbitmq.node.sockets_used:\n      enabled: false\n    rabbitmq.node.sockets_used_details.rate:\n      enabled: false\n    rabbitmq.node.uptime:\n      enabled: false\n  resource_attributes:\n    rabbitmq.node.name:\n      enabled: false\n    rabbitmq.queue.name:\n      enabled: false\n    rabbitmq.vhost.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    rabbitmq.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    rabbitmq.queue.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    rabbitmq.vhost.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    rabbitmq.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"rabbitmq.node.name-val\"\n    rabbitmq.queue.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"rabbitmq.queue.name-val\"\n    rabbitmq.vhost.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"rabbitmq.vhost.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "skywalking",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "grpc",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "protocols",
              "http",
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "saphana",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. The address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "alert",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "alert",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "backup",
              "latest",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "backup",
              "latest",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "column",
              "memory",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "column",
              "memory",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "component",
              "memory",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "component",
              "memory",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "cpu",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "cpu",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "disk",
              "size",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "disk",
              "size",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "host",
              "memory",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "host",
              "memory",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "host",
              "swap",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "host",
              "swap",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "code_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "code_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "memory",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "memory",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "memory",
              "shared",
              "allocated",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "memory",
              "shared",
              "allocated",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "memory",
              "used",
              "peak",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "instance",
              "memory",
              "used",
              "peak",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "license",
              "expiration",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "license",
              "expiration",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "license",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "license",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "license",
              "peak",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "license",
              "peak",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "network",
              "request",
              "average_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "network",
              "request",
              "average_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "network",
              "request",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "network",
              "request",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "network",
              "request",
              "finished",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "network",
              "request",
              "finished",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "replication",
              "average_time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "replication",
              "average_time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "replication",
              "backlog",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "replication",
              "backlog",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "replication",
              "backlog",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "replication",
              "backlog",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "row_store",
              "memory",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "row_store",
              "memory",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "memory",
              "used",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "memory",
              "used",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "memory",
              "used",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "memory",
              "used",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "operation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "operation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "record",
              "compressed",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "record",
              "compressed",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "record",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "schema",
              "record",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "code_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "code_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "compactors",
              "allocated",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "compactors",
              "allocated",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "compactors",
              "freeable",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "compactors",
              "freeable",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "effective_limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "effective_limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "heap",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "heap",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "shared",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "shared",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "memory",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "stack_size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "stack_size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "thread",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "service",
              "thread",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "transaction",
              "blocked",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "transaction",
              "blocked",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "transaction",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "transaction",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "volume",
              "operation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "volume",
              "operation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "volume",
              "operation",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "volume",
              "operation",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "volume",
              "operation",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "saphana",
              "volume",
              "operation",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "db",
              "system",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "db",
              "system",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "db",
              "system",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "db",
              "system",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "saphana",
              "host",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "saphana",
              "host",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "saphana",
              "host",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "saphana",
              "host",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    saphana.alert.count:\n      enabled: true\n    saphana.backup.latest:\n      enabled: true\n    saphana.column.memory.used:\n      enabled: true\n    saphana.component.memory.used:\n      enabled: true\n    saphana.connection.count:\n      enabled: true\n    saphana.cpu.used:\n      enabled: true\n    saphana.disk.size.current:\n      enabled: true\n    saphana.host.memory.current:\n      enabled: true\n    saphana.host.swap.current:\n      enabled: true\n    saphana.instance.code_size:\n      enabled: true\n    saphana.instance.memory.current:\n      enabled: true\n    saphana.instance.memory.shared.allocated:\n      enabled: true\n    saphana.instance.memory.used.peak:\n      enabled: true\n    saphana.license.expiration.time:\n      enabled: true\n    saphana.license.limit:\n      enabled: true\n    saphana.license.peak:\n      enabled: true\n    saphana.network.request.average_time:\n      enabled: true\n    saphana.network.request.count:\n      enabled: true\n    saphana.network.request.finished.count:\n      enabled: true\n    saphana.replication.average_time:\n      enabled: true\n    saphana.replication.backlog.size:\n      enabled: true\n    saphana.replication.backlog.time:\n      enabled: true\n    saphana.row_store.memory.used:\n      enabled: true\n    saphana.schema.memory.used.current:\n      enabled: true\n    saphana.schema.memory.used.max:\n      enabled: true\n    saphana.schema.operation.count:\n      enabled: true\n    saphana.schema.record.compressed.count:\n      enabled: true\n    saphana.schema.record.count:\n      enabled: true\n    saphana.service.code_size:\n      enabled: true\n    saphana.service.count:\n      enabled: true\n    saphana.service.memory.compactors.allocated:\n      enabled: true\n    saphana.service.memory.compactors.freeable:\n      enabled: true\n    saphana.service.memory.effective_limit:\n      enabled: true\n    saphana.service.memory.heap.current:\n      enabled: true\n    saphana.service.memory.limit:\n      enabled: true\n    saphana.service.memory.shared.current:\n      enabled: true\n    saphana.service.memory.used:\n      enabled: true\n    saphana.service.stack_size:\n      enabled: true\n    saphana.service.thread.count:\n      enabled: true\n    saphana.transaction.blocked:\n      enabled: true\n    saphana.transaction.count:\n      enabled: true\n    saphana.uptime:\n      enabled: true\n    saphana.volume.operation.count:\n      enabled: true\n    saphana.volume.operation.size:\n      enabled: true\n    saphana.volume.operation.time:\n      enabled: true\n  resource_attributes:\n    db.system:\n      enabled: true\n    saphana.host:\n      enabled: true\nnone_set:\n  metrics:\n    saphana.alert.count:\n      enabled: false\n    saphana.backup.latest:\n      enabled: false\n    saphana.column.memory.used:\n      enabled: false\n    saphana.component.memory.used:\n      enabled: false\n    saphana.connection.count:\n      enabled: false\n    saphana.cpu.used:\n      enabled: false\n    saphana.disk.size.current:\n      enabled: false\n    saphana.host.memory.current:\n      enabled: false\n    saphana.host.swap.current:\n      enabled: false\n    saphana.instance.code_size:\n      enabled: false\n    saphana.instance.memory.current:\n      enabled: false\n    saphana.instance.memory.shared.allocated:\n      enabled: false\n    saphana.instance.memory.used.peak:\n      enabled: false\n    saphana.license.expiration.time:\n      enabled: false\n    saphana.license.limit:\n      enabled: false\n    saphana.license.peak:\n      enabled: false\n    saphana.network.request.average_time:\n      enabled: false\n    saphana.network.request.count:\n      enabled: false\n    saphana.network.request.finished.count:\n      enabled: false\n    saphana.replication.average_time:\n      enabled: false\n    saphana.replication.backlog.size:\n      enabled: false\n    saphana.replication.backlog.time:\n      enabled: false\n    saphana.row_store.memory.used:\n      enabled: false\n    saphana.schema.memory.used.current:\n      enabled: false\n    saphana.schema.memory.used.max:\n      enabled: false\n    saphana.schema.operation.count:\n      enabled: false\n    saphana.schema.record.compressed.count:\n      enabled: false\n    saphana.schema.record.count:\n      enabled: false\n    saphana.service.code_size:\n      enabled: false\n    saphana.service.count:\n      enabled: false\n    saphana.service.memory.compactors.allocated:\n      enabled: false\n    saphana.service.memory.compactors.freeable:\n      enabled: false\n    saphana.service.memory.effective_limit:\n      enabled: false\n    saphana.service.memory.heap.current:\n      enabled: false\n    saphana.service.memory.limit:\n      enabled: false\n    saphana.service.memory.shared.current:\n      enabled: false\n    saphana.service.memory.used:\n      enabled: false\n    saphana.service.stack_size:\n      enabled: false\n    saphana.service.thread.count:\n      enabled: false\n    saphana.transaction.blocked:\n      enabled: false\n    saphana.transaction.count:\n      enabled: false\n    saphana.uptime:\n      enabled: false\n    saphana.volume.operation.count:\n      enabled: false\n    saphana.volume.operation.size:\n      enabled: false\n    saphana.volume.operation.time:\n      enabled: false\n  resource_attributes:\n    db.system:\n      enabled: false\n    saphana.host:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    db.system:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    saphana.host:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    db.system:\n      enabled: true\n      metrics_exclude:\n        - strict: \"db.system-val\"\n    saphana.host:\n      enabled: true\n      metrics_exclude:\n        - strict: \"saphana.host-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "purefb",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Array",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "15s",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "array"
            ],
            "format": "duration"
          },
          {
            "name": "Clients",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "clients"
            ],
            "format": "duration"
          },
          {
            "name": "Usage",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "usage"
            ],
            "format": "duration"
          },
          {
            "name": "Arrays",
            "type": "array",
            "description": "Arrays represents the list of arrays to query",
            "required": false,
            "path_tokens": [
              "arrays"
            ]
          },
          {
            "name": "Clients",
            "type": "array",
            "description": "Clients represents the list of clients metrics",
            "required": false,
            "path_tokens": [
              "clients"
            ]
          },
          {
            "name": "Usage",
            "type": "array",
            "description": "Usage represents the list of usage to query",
            "required": false,
            "path_tokens": [
              "usage"
            ]
          },
          {
            "name": "Env",
            "type": "string",
            "description": "Env represents the respective environment value valid to scrape",
            "required": false,
            "path_tokens": [
              "env"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "redis",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Optional username. Use the specified Username to authenticate the current connection with one of the connections defined in the ACL list when connecting to a Redis 6.0 instance, or greater, that is using the Redis ACL system.",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "Optional password. Must match the password specified in the requirepass server configuration option, or the user's password when connecting to a Redis 6.0 instance, or greater, that is using the Redis ACL system.",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "blocked",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "blocked",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "connected",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "connected",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "max_input_buffer",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "max_input_buffer",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "max_output_buffer",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "clients",
              "max_output_buffer",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "redis",
              "cmd",
              "calls",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "cmd",
              "calls",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "redis",
              "cmd",
              "latency",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "cmd",
              "latency",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "redis",
              "cmd",
              "usec",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "cmd",
              "usec",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "commands",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "commands",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "commands",
              "processed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "commands",
              "processed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "connections",
              "received",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "connections",
              "received",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "connections",
              "rejected",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "connections",
              "rejected",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "db",
              "avg_ttl",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "db",
              "avg_ttl",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "db",
              "expires",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "db",
              "expires",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "db",
              "keys",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "db",
              "keys",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "keys",
              "evicted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "keys",
              "evicted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "keys",
              "expired",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "keys",
              "expired",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "keyspace",
              "hits",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "keyspace",
              "hits",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "keyspace",
              "misses",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "keyspace",
              "misses",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "latest_fork",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "latest_fork",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "redis",
              "maxmemory",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "maxmemory",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "fragmentation_ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "fragmentation_ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "lua",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "lua",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "peak",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "peak",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "rss",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "rss",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "used",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "memory",
              "used",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "net",
              "input",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "net",
              "input",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "net",
              "output",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "net",
              "output",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "rdb",
              "changes_since_last_save",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "rdb",
              "changes_since_last_save",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "replication",
              "backlog_first_byte_offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "replication",
              "backlog_first_byte_offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "replication",
              "offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "replication",
              "offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "redis",
              "replication",
              "replica_offset",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "replication",
              "replica_offset",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "redis",
              "role",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "role",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "slaves",
              "connected",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "slaves",
              "connected",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "redis",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "redis",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "resource_attributes",
              "redis",
              "version",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "redis",
              "version",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "redis",
              "version",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "redis",
              "version",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    redis.clients.blocked:\n      enabled: true\n    redis.clients.connected:\n      enabled: true\n    redis.clients.max_input_buffer:\n      enabled: true\n    redis.clients.max_output_buffer:\n      enabled: true\n    redis.cmd.calls:\n      enabled: true\n    redis.cmd.latency:\n      enabled: true\n    redis.cmd.usec:\n      enabled: true\n    redis.commands:\n      enabled: true\n    redis.commands.processed:\n      enabled: true\n    redis.connections.received:\n      enabled: true\n    redis.connections.rejected:\n      enabled: true\n    redis.cpu.time:\n      enabled: true\n    redis.db.avg_ttl:\n      enabled: true\n    redis.db.expires:\n      enabled: true\n    redis.db.keys:\n      enabled: true\n    redis.keys.evicted:\n      enabled: true\n    redis.keys.expired:\n      enabled: true\n    redis.keyspace.hits:\n      enabled: true\n    redis.keyspace.misses:\n      enabled: true\n    redis.latest_fork:\n      enabled: true\n    redis.maxmemory:\n      enabled: true\n    redis.memory.fragmentation_ratio:\n      enabled: true\n    redis.memory.lua:\n      enabled: true\n    redis.memory.peak:\n      enabled: true\n    redis.memory.rss:\n      enabled: true\n    redis.memory.used:\n      enabled: true\n    redis.net.input:\n      enabled: true\n    redis.net.output:\n      enabled: true\n    redis.rdb.changes_since_last_save:\n      enabled: true\n    redis.replication.backlog_first_byte_offset:\n      enabled: true\n    redis.replication.offset:\n      enabled: true\n    redis.replication.replica_offset:\n      enabled: true\n    redis.role:\n      enabled: true\n    redis.slaves.connected:\n      enabled: true\n    redis.uptime:\n      enabled: true\n  resource_attributes:\n    redis.version:\n      enabled: true\n    server.address:\n      enabled: true\n    server.port:\n      enabled: true\nnone_set:\n  metrics:\n    redis.clients.blocked:\n      enabled: false\n    redis.clients.connected:\n      enabled: false\n    redis.clients.max_input_buffer:\n      enabled: false\n    redis.clients.max_output_buffer:\n      enabled: false\n    redis.cmd.calls:\n      enabled: false\n    redis.cmd.latency:\n      enabled: false\n    redis.cmd.usec:\n      enabled: false\n    redis.commands:\n      enabled: false\n    redis.commands.processed:\n      enabled: false\n    redis.connections.received:\n      enabled: false\n    redis.connections.rejected:\n      enabled: false\n    redis.cpu.time:\n      enabled: false\n    redis.db.avg_ttl:\n      enabled: false\n    redis.db.expires:\n      enabled: false\n    redis.db.keys:\n      enabled: false\n    redis.keys.evicted:\n      enabled: false\n    redis.keys.expired:\n      enabled: false\n    redis.keyspace.hits:\n      enabled: false\n    redis.keyspace.misses:\n      enabled: false\n    redis.latest_fork:\n      enabled: false\n    redis.maxmemory:\n      enabled: false\n    redis.memory.fragmentation_ratio:\n      enabled: false\n    redis.memory.lua:\n      enabled: false\n    redis.memory.peak:\n      enabled: false\n    redis.memory.rss:\n      enabled: false\n    redis.memory.used:\n      enabled: false\n    redis.net.input:\n      enabled: false\n    redis.net.output:\n      enabled: false\n    redis.rdb.changes_since_last_save:\n      enabled: false\n    redis.replication.backlog_first_byte_offset:\n      enabled: false\n    redis.replication.offset:\n      enabled: false\n    redis.replication.replica_offset:\n      enabled: false\n    redis.role:\n      enabled: false\n    redis.slaves.connected:\n      enabled: false\n    redis.uptime:\n      enabled: false\n  resource_attributes:\n    redis.version:\n      enabled: false\n    server.address:\n      enabled: false\n    server.port:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    redis.version:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    server.address:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    server.port:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    redis.version:\n      enabled: true\n      metrics_exclude:\n        - strict: \"redis.version-val\"\n    server.address:\n      enabled: true\n      metrics_exclude:\n        - strict: \"server.address-val\"\n    server.port:\n      enabled: true\n      metrics_exclude:\n        - strict: \"server.port-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "solace",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Broker",
            "type": "stringArray",
            "description": "The list of solace brokers (default localhost:5671)",
            "required": false,
            "path_tokens": [
              "broker"
            ]
          },
          {
            "name": "Queue",
            "type": "string",
            "description": "The name of the solace queue to consume from, it is required parameter",
            "required": false,
            "path_tokens": [
              "queue"
            ]
          },
          {
            "name": "MaxUnacked",
            "type": "int",
            "description": "The maximum number of unacknowledged messages the Solace broker can transmit, to configure AMQP Link",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "max_unacknowledged"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl_plain",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl_plain",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl_xauth2",
              "username"
            ]
          },
          {
            "name": "Bearer",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl_xauth2",
              "bearer"
            ]
          },
          {
            "name": "Delay",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "flow_control",
              "delayed_retry",
              "delay"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "riak",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "memory",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "memory",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "node",
              "operation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "node",
              "operation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "node",
              "operation",
              "time",
              "mean",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "node",
              "operation",
              "time",
              "mean",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "node",
              "read_repair",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "node",
              "read_repair",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "vnode",
              "index",
              "operation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "vnode",
              "index",
              "operation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "vnode",
              "operation",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "metrics",
              "riak",
              "vnode",
              "operation",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "resource_attributes",
              "riak",
              "node",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "metrics",
              "resource_attributes",
              "riak",
              "node",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "metrics",
              "resource_attributes",
              "riak",
              "node",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "resource_attributes",
              "riak",
              "node",
              "name",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    riak.memory.limit:\n      enabled: true\n    riak.node.operation.count:\n      enabled: true\n    riak.node.operation.time.mean:\n      enabled: true\n    riak.node.read_repair.count:\n      enabled: true\n    riak.vnode.index.operation.count:\n      enabled: true\n    riak.vnode.operation.count:\n      enabled: true\n  resource_attributes:\n    riak.node.name:\n      enabled: true\nnone_set:\n  metrics:\n    riak.memory.limit:\n      enabled: false\n    riak.node.operation.count:\n      enabled: false\n    riak.node.operation.time.mean:\n      enabled: false\n    riak.node.read_repair.count:\n      enabled: false\n    riak.vnode.index.operation.count:\n      enabled: false\n    riak.vnode.operation.count:\n      enabled: false\n  resource_attributes:\n    riak.node.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    riak.node.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    riak.node.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"riak.node.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "signalfx",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "AccessTokenPassthrough",
            "type": "bool",
            "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request.",
            "required": false,
            "path_tokens": [
              "access_token_passthrough"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "purefa",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Array",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "array"
            ],
            "format": "duration"
          },
          {
            "name": "Hosts",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "hosts"
            ],
            "format": "duration"
          },
          {
            "name": "Directories",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "directories"
            ],
            "format": "duration"
          },
          {
            "name": "Pods",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "pods"
            ],
            "format": "duration"
          },
          {
            "name": "Volumes",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "settings",
              "reload_intervals",
              "volumes"
            ],
            "format": "duration"
          },
          {
            "name": "Array",
            "type": "array",
            "description": "Array represents the list of arrays to query",
            "required": false,
            "path_tokens": [
              "array"
            ]
          },
          {
            "name": "Hosts",
            "type": "array",
            "description": "Hosts represents the list of hosts to query",
            "required": false,
            "path_tokens": [
              "hosts"
            ]
          },
          {
            "name": "Directories",
            "type": "array",
            "description": "Directories represents the list of directories to query",
            "required": false,
            "path_tokens": [
              "directories"
            ]
          },
          {
            "name": "Pods",
            "type": "array",
            "description": "Pods represents the list of pods to query",
            "required": false,
            "path_tokens": [
              "pods"
            ]
          },
          {
            "name": "Volumes",
            "type": "array",
            "description": "Volumes represents the list of volumes to query",
            "required": false,
            "path_tokens": [
              "volumes"
            ]
          },
          {
            "name": "Env",
            "type": "string",
            "description": "Env represents the respective environment value valid to scrape",
            "required": false,
            "path_tokens": [
              "env"
            ]
          },
          {
            "name": "ArrayName",
            "type": "string",
            "description": "ArrayName represents the display name that is appended to the received metrics, as the `host` label if not provided by OpenMetrics output, and to the `fa_array_name` label always",
            "required": false,
            "default": "foobar.example.com",
            "path_tokens": [
              "fa_array_name"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "Namespace selects the OpenMetrics namespace requested",
            "required": false,
            "default": "purefa",
            "path_tokens": [
              "namespace"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "simpleprometheus",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "TLSEnabled",
            "type": "bool",
            "description": "Whether not TLS is enabled",
            "required": false,
            "path_tokens": [
              "tls_enabled"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert that has signed the TLS cert.",
            "required": false,
            "path_tokens": [
              "tls_config",
              "ca_file"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the client TLS cert to use for TLS required connections.",
            "required": false,
            "path_tokens": [
              "tls_config",
              "cert_file"
            ]
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the client TLS key to use for TLS required connections.",
            "required": false,
            "path_tokens": [
              "tls_config",
              "key_file"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "Whether or not to verify the exporter's TLS cert.",
            "required": false,
            "path_tokens": [
              "tls_config",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval is the interval at which metrics should be collected",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MetricsPath",
            "type": "string",
            "description": "MetricsPath the path to the metrics endpoint.",
            "required": false,
            "default": "/metrics",
            "path_tokens": [
              "metrics_path"
            ]
          },
          {
            "name": "Params",
            "type": "custom",
            "description": "Params the parameters to the metrics endpoint.",
            "required": false,
            "path_tokens": [
              "params"
            ]
          },
          {
            "name": "Labels",
            "type": "stringMap",
            "description": "Labels static labels",
            "required": false,
            "path_tokens": [
              "labels"
            ]
          },
          {
            "name": "UseServiceAccount",
            "type": "bool",
            "description": "Whether or not to use pod service account to authenticate.",
            "required": false,
            "path_tokens": [
              "use_service_account"
            ]
          },
          {
            "name": "JobName",
            "type": "string",
            "description": "JobName allows users to customize the job name optionally.",
            "required": false,
            "path_tokens": [
              "job_name"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "splunkhec",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "AccessTokenPassthrough",
            "type": "bool",
            "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request.",
            "required": false,
            "path_tokens": [
              "access_token_passthrough"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "ack",
              "extension",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "ack",
              "extension",
              "[]"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "Path for Ack API, default is '/services/collector/ack'. Ignored if Extension is not provided.",
            "required": false,
            "default": "splunk.DefaultAckPath",
            "path_tokens": [
              "ack",
              "path"
            ]
          },
          {
            "name": "RawPath",
            "type": "string",
            "description": "RawPath for raw data collection, default is '/services/collector/raw'",
            "required": false,
            "default": "splunk.DefaultRawPath",
            "path_tokens": [
              "raw_path"
            ]
          },
          {
            "name": "Splitting",
            "type": "enum",
            "description": "Splitting defines the splitting strategy used by the receiver when ingesting raw events. Can be set to \"line\" or \"none\". Default is \"line\".",
            "required": false,
            "default": "line",
            "path_tokens": [
              "splitting"
            ],
            "enum_values": [
              "line",
              "none"
            ]
          },
          {
            "name": "HealthPath",
            "type": "string",
            "description": "HealthPath for health API, default is '/services/collector/health'",
            "required": false,
            "default": "splunk.DefaultHealthPath",
            "path_tokens": [
              "health_path"
            ]
          },
          {
            "name": "Source",
            "type": "string",
            "description": "Source indicates the mapping of the source field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "source"
            ]
          },
          {
            "name": "SourceType",
            "type": "string",
            "description": "SourceType indicates the mapping of the sourcetype field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "sourcetype"
            ]
          },
          {
            "name": "Index",
            "type": "string",
            "description": "Index indicates the mapping of the index field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "index"
            ]
          },
          {
            "name": "Host",
            "type": "string",
            "description": "Host indicates the mapping of the host field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "host"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "splunkenterprise",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "aggregation",
              "queue",
              "ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "aggregation",
              "queue",
              "ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "buckets",
              "searchable",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "buckets",
              "searchable",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "event",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "event",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "hot",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "hot",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "warm",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "bucket",
              "warm",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "event",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "event",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "raw",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "raw",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "total",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "data",
              "indexes",
              "extended",
              "total",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "health",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "health",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "avg",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "avg",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "queue",
              "ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "queue",
              "ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "raw",
              "write",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "raw",
              "write",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "rollingrestart",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "rollingrestart",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexer",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "avg",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "avg",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "avg",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "avg",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "bucket",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "bucket",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "median",
              "data",
              "age",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "median",
              "data",
              "age",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "indexes",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "io",
              "avg",
              "iops",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "io",
              "avg",
              "iops",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "kvstore",
              "backup",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "kvstore",
              "backup",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "kvstore",
              "replication",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "kvstore",
              "replication",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "kvstore",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "kvstore",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "license",
              "index",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "license",
              "index",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "parse",
              "queue",
              "ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "parse",
              "queue",
              "ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "pipeline",
              "set",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "pipeline",
              "set",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "scheduler",
              "avg",
              "execution",
              "latency",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "scheduler",
              "avg",
              "execution",
              "latency",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "scheduler",
              "avg",
              "run",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "scheduler",
              "avg",
              "run",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "scheduler",
              "completion",
              "ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "scheduler",
              "completion",
              "ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "initiation",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "initiation",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "success",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "search",
              "success",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "introspection",
              "queues",
              "current",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "introspection",
              "queues",
              "current",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "introspection",
              "queues",
              "current",
              "bytes",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "introspection",
              "queues",
              "current",
              "bytes",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "adhoc",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "adhoc",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "adhoc",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "adhoc",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "completed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "completed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "completed",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "completed",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "incomplete",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "incomplete",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "incomplete",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "incomplete",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "invalid",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "invalid",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "job",
              "cache",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "job",
              "cache",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "job",
              "cache",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "job",
              "cache",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "savedsearches",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "savedsearches",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "scheduled",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "scheduled",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "scheduled",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "server",
              "searchartifacts",
              "scheduled",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "typing",
              "queue",
              "ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "splunk",
              "typing",
              "queue",
              "ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "indexer",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "indexer",
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "indexer",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "indexer",
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "indexer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "default": {
              "Content-Type": "application/x-www-form-urlencoded"
            },
            "path_tokens": [
              "indexer",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "indexer",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "indexer",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "indexer",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "indexer",
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "default": "defaultTransport.MaxIdleConns",
            "path_tokens": [
              "indexer",
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "indexer",
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "indexer",
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "default": "defaultTransport.IdleConnTimeout",
            "path_tokens": [
              "indexer",
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "indexer",
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "indexer",
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "indexer",
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "indexer",
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "default": true,
            "path_tokens": [
              "indexer",
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "indexer",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "search_head",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "search_head",
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "search_head",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "search_head",
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "search_head",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "default": {
              "Content-Type": "application/x-www-form-urlencoded"
            },
            "path_tokens": [
              "search_head",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "search_head",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "search_head",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "search_head",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "search_head",
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "default": "defaultTransport.MaxIdleConns",
            "path_tokens": [
              "search_head",
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "search_head",
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "search_head",
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "default": "defaultTransport.IdleConnTimeout",
            "path_tokens": [
              "search_head",
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "search_head",
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "search_head",
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "search_head",
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "search_head",
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "default": true,
            "path_tokens": [
              "search_head",
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "search_head",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "default": {
              "Content-Type": "application/x-www-form-urlencoded"
            },
            "path_tokens": [
              "cluster_master",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "default": "defaultTransport.MaxIdleConns",
            "path_tokens": [
              "cluster_master",
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "default": "defaultTransport.IdleConnTimeout",
            "path_tokens": [
              "cluster_master",
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "default": true,
            "path_tokens": [
              "cluster_master",
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "cluster_master",
              "middlewares"
            ]
          },
          {
            "name": "VersionInfo",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "build_version_info"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    splunk.aggregation.queue.ratio:\n      enabled: true\n    splunk.buckets.searchable.status:\n      enabled: true\n    splunk.data.indexes.extended.bucket.count:\n      enabled: true\n    splunk.data.indexes.extended.bucket.event.count:\n      enabled: true\n    splunk.data.indexes.extended.bucket.hot.count:\n      enabled: true\n    splunk.data.indexes.extended.bucket.warm.count:\n      enabled: true\n    splunk.data.indexes.extended.event.count:\n      enabled: true\n    splunk.data.indexes.extended.raw.size:\n      enabled: true\n    splunk.data.indexes.extended.total.size:\n      enabled: true\n    splunk.health:\n      enabled: true\n    splunk.indexer.avg.rate:\n      enabled: true\n    splunk.indexer.cpu.time:\n      enabled: true\n    splunk.indexer.queue.ratio:\n      enabled: true\n    splunk.indexer.raw.write.time:\n      enabled: true\n    splunk.indexer.rollingrestart.status:\n      enabled: true\n    splunk.indexer.throughput:\n      enabled: true\n    splunk.indexes.avg.size:\n      enabled: true\n    splunk.indexes.avg.usage:\n      enabled: true\n    splunk.indexes.bucket.count:\n      enabled: true\n    splunk.indexes.median.data.age:\n      enabled: true\n    splunk.indexes.size:\n      enabled: true\n    splunk.io.avg.iops:\n      enabled: true\n    splunk.kvstore.backup.status:\n      enabled: true\n    splunk.kvstore.replication.status:\n      enabled: true\n    splunk.kvstore.status:\n      enabled: true\n    splunk.license.index.usage:\n      enabled: true\n    splunk.parse.queue.ratio:\n      enabled: true\n    splunk.pipeline.set.count:\n      enabled: true\n    splunk.scheduler.avg.execution.latency:\n      enabled: true\n    splunk.scheduler.avg.run.time:\n      enabled: true\n    splunk.scheduler.completion.ratio:\n      enabled: true\n    splunk.search.duration:\n      enabled: true\n    splunk.search.initiation:\n      enabled: true\n    splunk.search.status:\n      enabled: true\n    splunk.search.success:\n      enabled: true\n    splunk.server.introspection.queues.current:\n      enabled: true\n    splunk.server.introspection.queues.current.bytes:\n      enabled: true\n    splunk.server.searchartifacts.adhoc:\n      enabled: true\n    splunk.server.searchartifacts.adhoc.size:\n      enabled: true\n    splunk.server.searchartifacts.completed:\n      enabled: true\n    splunk.server.searchartifacts.completed.size:\n      enabled: true\n    splunk.server.searchartifacts.incomplete:\n      enabled: true\n    splunk.server.searchartifacts.incomplete.size:\n      enabled: true\n    splunk.server.searchartifacts.invalid:\n      enabled: true\n    splunk.server.searchartifacts.job.cache.count:\n      enabled: true\n    splunk.server.searchartifacts.job.cache.size:\n      enabled: true\n    splunk.server.searchartifacts.savedsearches:\n      enabled: true\n    splunk.server.searchartifacts.scheduled:\n      enabled: true\n    splunk.server.searchartifacts.scheduled.size:\n      enabled: true\n    splunk.typing.queue.ratio:\n      enabled: true\nnone_set:\n  metrics:\n    splunk.aggregation.queue.ratio:\n      enabled: false\n    splunk.buckets.searchable.status:\n      enabled: false\n    splunk.data.indexes.extended.bucket.count:\n      enabled: false\n    splunk.data.indexes.extended.bucket.event.count:\n      enabled: false\n    splunk.data.indexes.extended.bucket.hot.count:\n      enabled: false\n    splunk.data.indexes.extended.bucket.warm.count:\n      enabled: false\n    splunk.data.indexes.extended.event.count:\n      enabled: false\n    splunk.data.indexes.extended.raw.size:\n      enabled: false\n    splunk.data.indexes.extended.total.size:\n      enabled: false\n    splunk.health:\n      enabled: false\n    splunk.indexer.avg.rate:\n      enabled: false\n    splunk.indexer.cpu.time:\n      enabled: false\n    splunk.indexer.queue.ratio:\n      enabled: false\n    splunk.indexer.raw.write.time:\n      enabled: false\n    splunk.indexer.rollingrestart.status:\n      enabled: false\n    splunk.indexer.throughput:\n      enabled: false\n    splunk.indexes.avg.size:\n      enabled: false\n    splunk.indexes.avg.usage:\n      enabled: false\n    splunk.indexes.bucket.count:\n      enabled: false\n    splunk.indexes.median.data.age:\n      enabled: false\n    splunk.indexes.size:\n      enabled: false\n    splunk.io.avg.iops:\n      enabled: false\n    splunk.kvstore.backup.status:\n      enabled: false\n    splunk.kvstore.replication.status:\n      enabled: false\n    splunk.kvstore.status:\n      enabled: false\n    splunk.license.index.usage:\n      enabled: false\n    splunk.parse.queue.ratio:\n      enabled: false\n    splunk.pipeline.set.count:\n      enabled: false\n    splunk.scheduler.avg.execution.latency:\n      enabled: false\n    splunk.scheduler.avg.run.time:\n      enabled: false\n    splunk.scheduler.completion.ratio:\n      enabled: false\n    splunk.search.duration:\n      enabled: false\n    splunk.search.initiation:\n      enabled: false\n    splunk.search.status:\n      enabled: false\n    splunk.search.success:\n      enabled: false\n    splunk.server.introspection.queues.current:\n      enabled: false\n    splunk.server.introspection.queues.current.bytes:\n      enabled: false\n    splunk.server.searchartifacts.adhoc:\n      enabled: false\n    splunk.server.searchartifacts.adhoc.size:\n      enabled: false\n    splunk.server.searchartifacts.completed:\n      enabled: false\n    splunk.server.searchartifacts.completed.size:\n      enabled: false\n    splunk.server.searchartifacts.incomplete:\n      enabled: false\n    splunk.server.searchartifacts.incomplete.size:\n      enabled: false\n    splunk.server.searchartifacts.invalid:\n      enabled: false\n    splunk.server.searchartifacts.job.cache.count:\n      enabled: false\n    splunk.server.searchartifacts.job.cache.size:\n      enabled: false\n    splunk.server.searchartifacts.savedsearches:\n      enabled: false\n    splunk.server.searchartifacts.scheduled:\n      enabled: false\n    splunk.server.searchartifacts.scheduled.size:\n      enabled: false\n    splunk.typing.queue.ratio:\n      enabled: false\n"
        ]
      },
      "constraints": [
        {
          "kind": "anyOf",
          "keys": [
            [
              "cluster_master",
              "endpoint"
            ],
            [
              "indexer",
              "endpoint"
            ],
            [
              "search_head",
              "endpoint"
            ]
          ]
        }
      ]
    },
    {
      "name": "stef",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "AckInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "10ms",
            "path_tokens": [
              "ack_interval"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "snowflake",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "cloud_service",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "cloud_service",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "total_credit",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "total_credit",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "virtual_warehouse",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "virtual_warehouse",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "warehouse",
              "cloud_service",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "warehouse",
              "cloud_service",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "warehouse",
              "total_credit",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "warehouse",
              "total_credit",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "warehouse",
              "virtual_warehouse",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "billing",
              "warehouse",
              "virtual_warehouse",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "database",
              "bytes_scanned",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "database",
              "bytes_scanned",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "database",
              "query",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "database",
              "query",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "logins",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "logins",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "pipe",
              "credits_used",
              "total",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "pipe",
              "credits_used",
              "total",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "blocked",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "blocked",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_deleted",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_deleted",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_spilled",
              "local",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_spilled",
              "local",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_spilled",
              "remote",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_spilled",
              "remote",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_written",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "bytes_written",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "compilation_time",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "compilation_time",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "data_scanned_cache",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "data_scanned_cache",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "executed",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "executed",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "execution_time",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "execution_time",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "partitions_scanned",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "partitions_scanned",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "queued_overload",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "queued_overload",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "queued_provision",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "query",
              "queued_provision",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "queued_overload_time",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "queued_overload_time",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "queued_provisioning_time",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "queued_provisioning_time",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "queued_repair_time",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "queued_repair_time",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_deleted",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_deleted",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_inserted",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_inserted",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_produced",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_produced",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_unloaded",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_unloaded",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_updated",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "rows_updated",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "session_id",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "session_id",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "storage",
              "failsafe_bytes",
              "total",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "storage",
              "failsafe_bytes",
              "total",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "storage",
              "stage_bytes",
              "total",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "storage",
              "stage_bytes",
              "total",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "storage",
              "storage_bytes",
              "total",
              "enabled"
            ],
            "unit": "bytes"
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "storage",
              "storage_bytes",
              "total",
              "enabled_set_by_user"
            ],
            "unit": "bytes"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "total_elapsed_time",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "snowflake",
              "total_elapsed_time",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "snowflake",
              "account",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "snowflake",
              "account",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "snowflake",
              "account",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "snowflake",
              "account",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Account",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "account"
            ]
          },
          {
            "name": "Schema",
            "type": "string",
            "description": "",
            "required": false,
            "default": "ACCOUNT_USAGE",
            "path_tokens": [
              "schema"
            ]
          },
          {
            "name": "Warehouse",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "warehouse"
            ]
          },
          {
            "name": "Database",
            "type": "string",
            "description": "",
            "required": false,
            "default": "SNOWFLAKE",
            "path_tokens": [
              "database"
            ]
          },
          {
            "name": "Role",
            "type": "string",
            "description": "",
            "required": false,
            "default": "ACCOUNTADMIN",
            "path_tokens": [
              "role"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    snowflake.billing.cloud_service.total:\n      enabled: true\n    snowflake.billing.total_credit.total:\n      enabled: true\n    snowflake.billing.virtual_warehouse.total:\n      enabled: true\n    snowflake.billing.warehouse.cloud_service.total:\n      enabled: true\n    snowflake.billing.warehouse.total_credit.total:\n      enabled: true\n    snowflake.billing.warehouse.virtual_warehouse.total:\n      enabled: true\n    snowflake.database.bytes_scanned.avg:\n      enabled: true\n    snowflake.database.query.count:\n      enabled: true\n    snowflake.logins.total:\n      enabled: true\n    snowflake.pipe.credits_used.total:\n      enabled: true\n    snowflake.query.blocked:\n      enabled: true\n    snowflake.query.bytes_deleted.avg:\n      enabled: true\n    snowflake.query.bytes_spilled.local.avg:\n      enabled: true\n    snowflake.query.bytes_spilled.remote.avg:\n      enabled: true\n    snowflake.query.bytes_written.avg:\n      enabled: true\n    snowflake.query.compilation_time.avg:\n      enabled: true\n    snowflake.query.data_scanned_cache.avg:\n      enabled: true\n    snowflake.query.executed:\n      enabled: true\n    snowflake.query.execution_time.avg:\n      enabled: true\n    snowflake.query.partitions_scanned.avg:\n      enabled: true\n    snowflake.query.queued_overload:\n      enabled: true\n    snowflake.query.queued_provision:\n      enabled: true\n    snowflake.queued_overload_time.avg:\n      enabled: true\n    snowflake.queued_provisioning_time.avg:\n      enabled: true\n    snowflake.queued_repair_time.avg:\n      enabled: true\n    snowflake.rows_deleted.avg:\n      enabled: true\n    snowflake.rows_inserted.avg:\n      enabled: true\n    snowflake.rows_produced.avg:\n      enabled: true\n    snowflake.rows_unloaded.avg:\n      enabled: true\n    snowflake.rows_updated.avg:\n      enabled: true\n    snowflake.session_id.count:\n      enabled: true\n    snowflake.storage.failsafe_bytes.total:\n      enabled: true\n    snowflake.storage.stage_bytes.total:\n      enabled: true\n    snowflake.storage.storage_bytes.total:\n      enabled: true\n    snowflake.total_elapsed_time.avg:\n      enabled: true\n  resource_attributes:\n    snowflake.account.name:\n      enabled: true\nnone_set:\n  metrics:\n    snowflake.billing.cloud_service.total:\n      enabled: false\n    snowflake.billing.total_credit.total:\n      enabled: false\n    snowflake.billing.virtual_warehouse.total:\n      enabled: false\n    snowflake.billing.warehouse.cloud_service.total:\n      enabled: false\n    snowflake.billing.warehouse.total_credit.total:\n      enabled: false\n    snowflake.billing.warehouse.virtual_warehouse.total:\n      enabled: false\n    snowflake.database.bytes_scanned.avg:\n      enabled: false\n    snowflake.database.query.count:\n      enabled: false\n    snowflake.logins.total:\n      enabled: false\n    snowflake.pipe.credits_used.total:\n      enabled: false\n    snowflake.query.blocked:\n      enabled: false\n    snowflake.query.bytes_deleted.avg:\n      enabled: false\n    snowflake.query.bytes_spilled.local.avg:\n      enabled: false\n    snowflake.query.bytes_spilled.remote.avg:\n      enabled: false\n    snowflake.query.bytes_written.avg:\n      enabled: false\n    snowflake.query.compilation_time.avg:\n      enabled: false\n    snowflake.query.data_scanned_cache.avg:\n      enabled: false\n    snowflake.query.executed:\n      enabled: false\n    snowflake.query.execution_time.avg:\n      enabled: false\n    snowflake.query.partitions_scanned.avg:\n      enabled: false\n    snowflake.query.queued_overload:\n      enabled: false\n    snowflake.query.queued_provision:\n      enabled: false\n    snowflake.queued_overload_time.avg:\n      enabled: false\n    snowflake.queued_provisioning_time.avg:\n      enabled: false\n    snowflake.queued_repair_time.avg:\n      enabled: false\n    snowflake.rows_deleted.avg:\n      enabled: false\n    snowflake.rows_inserted.avg:\n      enabled: false\n    snowflake.rows_produced.avg:\n      enabled: false\n    snowflake.rows_unloaded.avg:\n      enabled: false\n    snowflake.rows_updated.avg:\n      enabled: false\n    snowflake.session_id.count:\n      enabled: false\n    snowflake.storage.failsafe_bytes.total:\n      enabled: false\n    snowflake.storage.stage_bytes.total:\n      enabled: false\n    snowflake.storage.storage_bytes.total:\n      enabled: false\n    snowflake.total_elapsed_time.avg:\n      enabled: false\n  resource_attributes:\n    snowflake.account.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    snowflake.account.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    snowflake.account.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"snowflake.account.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "systemd",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "statsd",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "AggregationInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "60s",
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "aggregation_interval"
            ],
            "format": "duration"
          },
          {
            "name": "EnableIPOnlyAggregation",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "enable_ip_only_aggregation"
            ]
          },
          {
            "name": "EnableMetricType",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "enable_metric_type"
            ]
          },
          {
            "name": "EnableSimpleTags",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "enable_simple_tags"
            ]
          },
          {
            "name": "IsMonotonicCounter",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "is_monotonic_counter"
            ]
          },
          {
            "name": "TimerHistogramMapping",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "timer_histogram_mapping"
            ]
          },
          {
            "name": "SocketPermissions",
            "type": "enum",
            "description": "Will only be used when transport set to 'unixgram'.",
            "required": false,
            "path_tokens": [
              "socket_permissions"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "prometheus",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "TrimMetricSuffixes",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "trim_metric_suffixes"
            ]
          },
          {
            "name": "UseStartTimeMetric",
            "type": "bool",
            "description": "UseStartTimeMetric enables retrieving the start time of all counter metrics from the process_start_time_seconds metric. This is only correct if all counters on that endpoint started after the process start time, and the process is the only actor exporting the metric after the process started. It should not be used in \"exporters\" which export counters that may have started before the process itself. Use only if you know what you are doing, as this may result in incorrect rate calculations.",
            "required": false,
            "path_tokens": [
              "use_start_time_metric"
            ]
          },
          {
            "name": "StartTimeMetricRegex",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "start_time_metric_regex"
            ]
          },
          {
            "name": "ReportExtraScrapeMetrics",
            "type": "bool",
            "description": "ReportExtraScrapeMetrics - enables reporting of additional metrics for Prometheus client like scrape_body_size_bytes",
            "required": false,
            "path_tokens": [
              "report_extra_scrape_metrics"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_server",
              "enabled"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "api_server",
              "server_config",
              "middlewares"
            ]
          }
        ],
        "examples": [
          "target_allocator:\n  endpoint: http://localhost:8080\n  timeout: 5s\n  tls:\n    cert_file: \"client.crt\"\n    key_file: \"client.key\"\n  interval: 30s\n  collector_id: collector-1\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "webhookevent",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "default": "500ms",
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "default": "500ms",
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "string",
            "description": "wait time for reading request headers in ms. Default is 500ms.",
            "required": false,
            "default": "500ms",
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "string",
            "description": "wait time for writing request response in ms. Default is 500ms.",
            "required": false,
            "default": "500ms",
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Path",
            "type": "string",
            "description": "path for data collection. Default is /events",
            "required": false,
            "default": "/events",
            "path_tokens": [
              "path"
            ]
          },
          {
            "name": "HealthPath",
            "type": "string",
            "description": "path for health check api. Default is /health_check",
            "required": false,
            "default": "/health_check",
            "path_tokens": [
              "health_path"
            ]
          },
          {
            "name": "Key",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "required_header",
              "key"
            ]
          },
          {
            "name": "Value",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "required_header",
              "value"
            ]
          },
          {
            "name": "SplitLogsAtNewLine",
            "type": "bool",
            "description": "optional setting to split logs into multiple log records",
            "required": false,
            "default": false,
            "path_tokens": [
              "split_logs_at_newline"
            ]
          },
          {
            "name": "SplitLogsAtJSONBoundary",
            "type": "bool",
            "description": "optional setting to split logs at JSON object boundaries",
            "required": false,
            "default": false,
            "path_tokens": [
              "split_logs_at_json_boundary"
            ]
          },
          {
            "name": "ConvertHeadersToAttributes",
            "type": "bool",
            "description": "optional to convert all headers to attributes",
            "required": false,
            "default": false,
            "path_tokens": [
              "convert_headers_to_attributes"
            ]
          },
          {
            "name": "HeaderAttributeRegex",
            "type": "string",
            "description": "optional to convert headers matching a regex to log attributes",
            "required": false,
            "path_tokens": [
              "header_attribute_regex"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sqlquery",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "MaxOpenConn",
            "type": "int",
            "description": "The maximumn number of open connections to the sql server. \u003c= 0 means unlimited",
            "required": false,
            "path_tokens": [
              "max_open_conn"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "windowsperfcounters",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MetricMetaData",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics"
            ]
          },
          {
            "name": "PerfCounters",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "perfcounters"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "tcpcheck",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tcpcheck",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tcpcheck",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tcpcheck",
              "error",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tcpcheck",
              "error",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tcpcheck",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tcpcheck",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Targets",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "targets"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    tcpcheck.duration:\n      enabled: true\n    tcpcheck.error:\n      enabled: true\n    tcpcheck.status:\n      enabled: true\nnone_set:\n  metrics:\n    tcpcheck.duration:\n      enabled: false\n    tcpcheck.error:\n      enabled: false\n    tcpcheck.status:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "wavefront",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. The address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "TCPIdleTimeout",
            "type": "duration",
            "description": "TCPIdleTimeout is the timeout for idle TCP connections.",
            "required": false,
            "default": "30s",
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "tcp_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ExtractCollectdTags",
            "type": "bool",
            "description": "ExtractCollectdTags instructs the Wavefront receiver to attempt to extract tags in the CollectD format from the metric name. The default is false.",
            "required": false,
            "path_tokens": [
              "extract_collectd_tags"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "zipkin",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "ParseStringTags",
            "type": "bool",
            "description": "If enabled the zipkin receiver will attempt to parse string tags/binary annotations into int/bool/float. Disabled by default",
            "required": false,
            "default": false,
            "path_tokens": [
              "parse_string_tags"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sqlserver",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "batch",
              "request",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "batch",
              "request",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "batch",
              "sql_compilation",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "batch",
              "sql_compilation",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "batch",
              "sql_recompilation",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "batch",
              "sql_recompilation",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "computer",
              "uptime",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "computer",
              "uptime",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "cpu",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "cpu",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "backup_or_restore",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "backup_or_restore",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "execution",
              "errors",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "execution",
              "errors",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "full_scan",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "full_scan",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "io",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "io",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "latency",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "latency",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "tempdb",
              "space",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "tempdb",
              "space",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "tempdb",
              "version_store",
              "size",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "database",
              "tempdb",
              "version_store",
              "size",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "deadlock",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "deadlock",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "index",
              "search",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "index",
              "search",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "timeout",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "timeout",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "wait",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "wait",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "wait",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "wait",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "wait_time",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "lock",
              "wait_time",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "login",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "login",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "logout",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "logout",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "memory",
              "grants",
              "pending",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "memory",
              "grants",
              "pending",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "os",
              "wait",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "os",
              "wait",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "buffer_cache",
              "free_list",
              "stalls",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "buffer_cache",
              "free_list",
              "stalls",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "buffer_cache",
              "hit_ratio",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "buffer_cache",
              "hit_ratio",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "checkpoint",
              "flush",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "checkpoint",
              "flush",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "lazy_write",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "lazy_write",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "life_expectancy",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "life_expectancy",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "lookup",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "lookup",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "operation",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "operation",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "split",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "page",
              "split",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "processes",
              "blocked",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "processes",
              "blocked",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "replica",
              "data",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "replica",
              "data",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "resource_pool",
              "disk",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "resource_pool",
              "disk",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "resource_pool",
              "disk",
              "throttled",
              "read",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "resource_pool",
              "disk",
              "throttled",
              "read",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "resource_pool",
              "disk",
              "throttled",
              "write",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "resource_pool",
              "disk",
              "throttled",
              "write",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "table",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "table",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "delay",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "delay",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "mirror_write",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "mirror_write",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "write",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction",
              "write",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "flush",
              "data",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "flush",
              "data",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "flush",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "flush",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "flush",
              "wait",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "flush",
              "wait",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "growth",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "growth",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "shrink",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "shrink",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "transaction_log",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "user",
              "connection",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sqlserver",
              "user",
              "connection",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "query_sample",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "top_query",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "events",
              "db",
              "server",
              "top_query",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "host",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "address",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "server",
              "port",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "service",
              "instance",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "computer",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "database",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "EventsInclude",
            "type": "array",
            "description": "Experimental: EventsInclude defines a list of filters for attribute values. If the list is not empty, only events with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "events_include"
            ]
          },
          {
            "name": "EventsExclude",
            "type": "array",
            "description": "Experimental: EventsExclude defines a list of filters for attribute values. If the list is not empty, events with matching resource attribute values will not be emitted. EventsInclude has higher priority than EventsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "events_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "sqlserver",
              "instance",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "LookbackTime",
            "type": "int",
            "description": "Enabled enables the collection of the top queries by the execution time. It will collect the top N queries based on totalElapsedTimeDiffs during the last collection interval. The query statement will also be reported, hence, it is not ideal to send it as a metric. Hence we are reporting them as logs. The `N` is configured via `TopQueryCount`",
            "required": false,
            "path_tokens": [
              "top_query_collection",
              "lookback_time"
            ]
          },
          {
            "name": "MaxQuerySampleCount",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "top_query_collection",
              "max_query_sample_count"
            ]
          },
          {
            "name": "TopQueryCount",
            "type": "int",
            "description": "",
            "required": false,
            "default": 200,
            "path_tokens": [
              "top_query_collection",
              "top_query_count"
            ]
          },
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "time.Minute",
            "path_tokens": [
              "top_query_collection",
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxRowsPerQuery",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "query_sample_collection",
              "max_rows_per_query"
            ]
          },
          {
            "name": "InstanceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "instance_name"
            ]
          },
          {
            "name": "ComputerName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "computer_name"
            ]
          },
          {
            "name": "DataSource",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "datasource"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Port",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "port"
            ]
          },
          {
            "name": "Server",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "isDirectDBConnectionEnabled",
            "type": "bool",
            "description": "Flag to check if the connection is direct or not. It should only be used after a successful call to the `Validate` method.",
            "required": false,
            "path_tokens": [
              "is_direct_d_b_connection_enabled"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    sqlserver.batch.request.rate:\n      enabled: true\n    sqlserver.batch.sql_compilation.rate:\n      enabled: true\n    sqlserver.batch.sql_recompilation.rate:\n      enabled: true\n    sqlserver.computer.uptime:\n      enabled: true\n    sqlserver.cpu.count:\n      enabled: true\n    sqlserver.database.backup_or_restore.rate:\n      enabled: true\n    sqlserver.database.count:\n      enabled: true\n    sqlserver.database.execution.errors:\n      enabled: true\n    sqlserver.database.full_scan.rate:\n      enabled: true\n    sqlserver.database.io:\n      enabled: true\n    sqlserver.database.latency:\n      enabled: true\n    sqlserver.database.operations:\n      enabled: true\n    sqlserver.database.tempdb.space:\n      enabled: true\n    sqlserver.database.tempdb.version_store.size:\n      enabled: true\n    sqlserver.deadlock.rate:\n      enabled: true\n    sqlserver.index.search.rate:\n      enabled: true\n    sqlserver.lock.timeout.rate:\n      enabled: true\n    sqlserver.lock.wait.count:\n      enabled: true\n    sqlserver.lock.wait.rate:\n      enabled: true\n    sqlserver.lock.wait_time.avg:\n      enabled: true\n    sqlserver.login.rate:\n      enabled: true\n    sqlserver.logout.rate:\n      enabled: true\n    sqlserver.memory.grants.pending.count:\n      enabled: true\n    sqlserver.memory.usage:\n      enabled: true\n    sqlserver.os.wait.duration:\n      enabled: true\n    sqlserver.page.buffer_cache.free_list.stalls.rate:\n      enabled: true\n    sqlserver.page.buffer_cache.hit_ratio:\n      enabled: true\n    sqlserver.page.checkpoint.flush.rate:\n      enabled: true\n    sqlserver.page.lazy_write.rate:\n      enabled: true\n    sqlserver.page.life_expectancy:\n      enabled: true\n    sqlserver.page.lookup.rate:\n      enabled: true\n    sqlserver.page.operation.rate:\n      enabled: true\n    sqlserver.page.split.rate:\n      enabled: true\n    sqlserver.processes.blocked:\n      enabled: true\n    sqlserver.replica.data.rate:\n      enabled: true\n    sqlserver.resource_pool.disk.operations:\n      enabled: true\n    sqlserver.resource_pool.disk.throttled.read.rate:\n      enabled: true\n    sqlserver.resource_pool.disk.throttled.write.rate:\n      enabled: true\n    sqlserver.table.count:\n      enabled: true\n    sqlserver.transaction.delay:\n      enabled: true\n    sqlserver.transaction.mirror_write.rate:\n      enabled: true\n    sqlserver.transaction.rate:\n      enabled: true\n    sqlserver.transaction.write.rate:\n      enabled: true\n    sqlserver.transaction_log.flush.data.rate:\n      enabled: true\n    sqlserver.transaction_log.flush.rate:\n      enabled: true\n    sqlserver.transaction_log.flush.wait.rate:\n      enabled: true\n    sqlserver.transaction_log.growth.count:\n      enabled: true\n    sqlserver.transaction_log.shrink.count:\n      enabled: true\n    sqlserver.transaction_log.usage:\n      enabled: true\n    sqlserver.user.connection.count:\n      enabled: true\n  events:\n    db.server.query_sample:\n      enabled: true\n    db.server.top_query:\n      enabled: true\n  resource_attributes:\n    host.name:\n      enabled: true\n    server.address:\n      enabled: true\n    server.port:\n      enabled: true\n    service.instance.id:\n      enabled: true\n    sqlserver.computer.name:\n      enabled: true\n    sqlserver.database.name:\n      enabled: true\n    sqlserver.instance.name:\n      enabled: true\nnone_set:\n  metrics:\n    sqlserver.batch.request.rate:\n      enabled: false\n    sqlserver.batch.sql_compilation.rate:\n      enabled: false\n    sqlserver.batch.sql_recompilation.rate:\n      enabled: false\n    sqlserver.computer.uptime:\n      enabled: false\n    sqlserver.cpu.count:\n      enabled: false\n    sqlserver.database.backup_or_restore.rate:\n      enabled: false\n    sqlserver.database.count:\n      enabled: false\n    sqlserver.database.execution.errors:\n      enabled: false\n    sqlserver.database.full_scan.rate:\n      enabled: false\n    sqlserver.database.io:\n      enabled: false\n    sqlserver.database.latency:\n      enabled: false\n    sqlserver.database.operations:\n      enabled: false\n    sqlserver.database.tempdb.space:\n      enabled: false\n    sqlserver.database.tempdb.version_store.size:\n      enabled: false\n    sqlserver.deadlock.rate:\n      enabled: false\n    sqlserver.index.search.rate:\n      enabled: false\n    sqlserver.lock.timeout.rate:\n      enabled: false\n    sqlserver.lock.wait.count:\n      enabled: false\n    sqlserver.lock.wait.rate:\n      enabled: false\n    sqlserver.lock.wait_time.avg:\n      enabled: false\n    sqlserver.login.rate:\n      enabled: false\n    sqlserver.logout.rate:\n      enabled: false\n    sqlserver.memory.grants.pending.count:\n      enabled: false\n    sqlserver.memory.usage:\n      enabled: false\n    sqlserver.os.wait.duration:\n      enabled: false\n    sqlserver.page.buffer_cache.free_list.stalls.rate:\n      enabled: false\n    sqlserver.page.buffer_cache.hit_ratio:\n      enabled: false\n    sqlserver.page.checkpoint.flush.rate:\n      enabled: false\n    sqlserver.page.lazy_write.rate:\n      enabled: false\n    sqlserver.page.life_expectancy:\n      enabled: false\n    sqlserver.page.lookup.rate:\n      enabled: false\n    sqlserver.page.operation.rate:\n      enabled: false\n    sqlserver.page.split.rate:\n      enabled: false\n    sqlserver.processes.blocked:\n      enabled: false\n    sqlserver.replica.data.rate:\n      enabled: false\n    sqlserver.resource_pool.disk.operations:\n      enabled: false\n    sqlserver.resource_pool.disk.throttled.read.rate:\n      enabled: false\n    sqlserver.resource_pool.disk.throttled.write.rate:\n      enabled: false\n    sqlserver.table.count:\n      enabled: false\n    sqlserver.transaction.delay:\n      enabled: false\n    sqlserver.transaction.mirror_write.rate:\n      enabled: false\n    sqlserver.transaction.rate:\n      enabled: false\n    sqlserver.transaction.write.rate:\n      enabled: false\n    sqlserver.transaction_log.flush.data.rate:\n      enabled: false\n    sqlserver.transaction_log.flush.rate:\n      enabled: false\n    sqlserver.transaction_log.flush.wait.rate:\n      enabled: false\n    sqlserver.transaction_log.growth.count:\n      enabled: false\n    sqlserver.transaction_log.shrink.count:\n      enabled: false\n    sqlserver.transaction_log.usage:\n      enabled: false\n    sqlserver.user.connection.count:\n      enabled: false\n  events:\n    db.server.query_sample:\n      enabled: false\n    db.server.top_query:\n      enabled: false\n  resource_attributes:\n    host.name:\n      enabled: false\n    server.address:\n      enabled: false\n    server.port:\n      enabled: false\n    service.instance.id:\n      enabled: false\n    sqlserver.computer.name:\n      enabled: false\n    sqlserver.database.name:\n      enabled: false\n    sqlserver.instance.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    host.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    server.address:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    server.port:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    service.instance.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    sqlserver.computer.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    sqlserver.database.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\n    sqlserver.instance.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n      events_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    host.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"host.name-val\"\n      events_exclude:\n        - strict: \"host.name-val\"\n    server.address:\n      enabled: true\n      metrics_exclude:\n        - strict: \"server.address-val\"\n      events_exclude:\n        - strict: \"server.address-val\"\n    server.port:\n      enabled: true\n      metrics_exclude:\n        - regexp: \".*\"\n      events_exclude:\n        - regexp: \".*\"\n    service.instance.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"service.instance.id-val\"\n      events_exclude:\n        - strict: \"service.instance.id-val\"\n    sqlserver.computer.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"sqlserver.computer.name-val\"\n      events_exclude:\n        - strict: \"sqlserver.computer.name-val\"\n    sqlserver.database.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"sqlserver.database.name-val\"\n      events_exclude:\n        - strict: \"sqlserver.database.name-val\"\n    sqlserver.instance.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"sqlserver.instance.name-val\"\n      events_exclude:\n        - strict: \"sqlserver.instance.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "vcenter",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "cpu",
              "effective",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "cpu",
              "effective",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "cpu",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "cpu",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "host",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "host",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "memory",
              "effective",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "memory",
              "effective",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "memory",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "memory",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vm",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vm",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vm_template",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vm_template",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "congestions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "congestions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "latency",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "latency",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "cluster",
              "vsan",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "cluster",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "cluster",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "cpu",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "cpu",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "datastore",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "datastore",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "disk",
              "space",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "disk",
              "space",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "host",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "host",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "memory",
              "limit",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "memory",
              "limit",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "vm",
              "count",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datacenter",
              "vm",
              "count",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datastore",
              "disk",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datastore",
              "disk",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datastore",
              "disk",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "datastore",
              "disk",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "reserved",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "reserved",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "cpu",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "disk",
              "latency",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "disk",
              "latency",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "disk",
              "latency",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "disk",
              "latency",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "disk",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "disk",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "memory",
              "capacity",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "memory",
              "capacity",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "memory",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "memory",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "packet",
              "drop",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "packet",
              "drop",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "packet",
              "error",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "packet",
              "error",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "packet",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "packet",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "network",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "cache",
              "hit_rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "cache",
              "hit_rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "congestions",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "congestions",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "latency",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "latency",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "host",
              "vsan",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "cpu",
              "shares",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "cpu",
              "shares",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "ballooned",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "ballooned",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "granted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "granted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "shares",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "shares",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "swapped",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "swapped",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "resource_pool",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "readiness",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "readiness",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "time",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "time",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "cpu",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "latency",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "latency",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "latency",
              "max",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "latency",
              "max",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "disk",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "ballooned",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "ballooned",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "granted",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "granted",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "swapped",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "swapped",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "swapped_ssd",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "swapped_ssd",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "utilization",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "memory",
              "utilization",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "broadcast",
              "packet",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "broadcast",
              "packet",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "multicast",
              "packet",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "multicast",
              "packet",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "packet",
              "drop",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "packet",
              "drop",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "packet",
              "rate",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "packet",
              "rate",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "usage",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "network",
              "usage",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "vsan",
              "latency",
              "avg",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "vsan",
              "latency",
              "avg",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "vsan",
              "operations",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "vsan",
              "operations",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "vsan",
              "throughput",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "vcenter",
              "vm",
              "vsan",
              "throughput",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "cluster",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "cluster",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "cluster",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "cluster",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datacenter",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datacenter",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datacenter",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datacenter",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datastore",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datastore",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datastore",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "datastore",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "host",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "host",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "host",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "host",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "inventory_path",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "inventory_path",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "inventory_path",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "inventory_path",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "resource_pool",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "inventory_path",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "inventory_path",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "inventory_path",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "inventory_path",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "virtual_app",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "id",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "id",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "id",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "id",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "name",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "name",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "name",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "vcenter",
              "vm_template",
              "name",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    vcenter.cluster.cpu.effective:\n      enabled: true\n    vcenter.cluster.cpu.limit:\n      enabled: true\n    vcenter.cluster.host.count:\n      enabled: true\n    vcenter.cluster.memory.effective:\n      enabled: true\n    vcenter.cluster.memory.limit:\n      enabled: true\n    vcenter.cluster.vm.count:\n      enabled: true\n    vcenter.cluster.vm_template.count:\n      enabled: true\n    vcenter.cluster.vsan.congestions:\n      enabled: true\n    vcenter.cluster.vsan.latency.avg:\n      enabled: true\n    vcenter.cluster.vsan.operations:\n      enabled: true\n    vcenter.cluster.vsan.throughput:\n      enabled: true\n    vcenter.datacenter.cluster.count:\n      enabled: true\n    vcenter.datacenter.cpu.limit:\n      enabled: true\n    vcenter.datacenter.datastore.count:\n      enabled: true\n    vcenter.datacenter.disk.space:\n      enabled: true\n    vcenter.datacenter.host.count:\n      enabled: true\n    vcenter.datacenter.memory.limit:\n      enabled: true\n    vcenter.datacenter.vm.count:\n      enabled: true\n    vcenter.datastore.disk.usage:\n      enabled: true\n    vcenter.datastore.disk.utilization:\n      enabled: true\n    vcenter.host.cpu.capacity:\n      enabled: true\n    vcenter.host.cpu.reserved:\n      enabled: true\n    vcenter.host.cpu.usage:\n      enabled: true\n    vcenter.host.cpu.utilization:\n      enabled: true\n    vcenter.host.disk.latency.avg:\n      enabled: true\n    vcenter.host.disk.latency.max:\n      enabled: true\n    vcenter.host.disk.throughput:\n      enabled: true\n    vcenter.host.memory.capacity:\n      enabled: true\n    vcenter.host.memory.usage:\n      enabled: true\n    vcenter.host.memory.utilization:\n      enabled: true\n    vcenter.host.network.packet.drop.rate:\n      enabled: true\n    vcenter.host.network.packet.error.rate:\n      enabled: true\n    vcenter.host.network.packet.rate:\n      enabled: true\n    vcenter.host.network.throughput:\n      enabled: true\n    vcenter.host.network.usage:\n      enabled: true\n    vcenter.host.vsan.cache.hit_rate:\n      enabled: true\n    vcenter.host.vsan.congestions:\n      enabled: true\n    vcenter.host.vsan.latency.avg:\n      enabled: true\n    vcenter.host.vsan.operations:\n      enabled: true\n    vcenter.host.vsan.throughput:\n      enabled: true\n    vcenter.resource_pool.cpu.shares:\n      enabled: true\n    vcenter.resource_pool.cpu.usage:\n      enabled: true\n    vcenter.resource_pool.memory.ballooned:\n      enabled: true\n    vcenter.resource_pool.memory.granted:\n      enabled: true\n    vcenter.resource_pool.memory.shares:\n      enabled: true\n    vcenter.resource_pool.memory.swapped:\n      enabled: true\n    vcenter.resource_pool.memory.usage:\n      enabled: true\n    vcenter.vm.cpu.readiness:\n      enabled: true\n    vcenter.vm.cpu.time:\n      enabled: true\n    vcenter.vm.cpu.usage:\n      enabled: true\n    vcenter.vm.cpu.utilization:\n      enabled: true\n    vcenter.vm.disk.latency.avg:\n      enabled: true\n    vcenter.vm.disk.latency.max:\n      enabled: true\n    vcenter.vm.disk.throughput:\n      enabled: true\n    vcenter.vm.disk.usage:\n      enabled: true\n    vcenter.vm.disk.utilization:\n      enabled: true\n    vcenter.vm.memory.ballooned:\n      enabled: true\n    vcenter.vm.memory.granted:\n      enabled: true\n    vcenter.vm.memory.swapped:\n      enabled: true\n    vcenter.vm.memory.swapped_ssd:\n      enabled: true\n    vcenter.vm.memory.usage:\n      enabled: true\n    vcenter.vm.memory.utilization:\n      enabled: true\n    vcenter.vm.network.broadcast.packet.rate:\n      enabled: true\n    vcenter.vm.network.multicast.packet.rate:\n      enabled: true\n    vcenter.vm.network.packet.drop.rate:\n      enabled: true\n    vcenter.vm.network.packet.rate:\n      enabled: true\n    vcenter.vm.network.throughput:\n      enabled: true\n    vcenter.vm.network.usage:\n      enabled: true\n    vcenter.vm.vsan.latency.avg:\n      enabled: true\n    vcenter.vm.vsan.operations:\n      enabled: true\n    vcenter.vm.vsan.throughput:\n      enabled: true\n  resource_attributes:\n    vcenter.cluster.name:\n      enabled: true\n    vcenter.datacenter.name:\n      enabled: true\n    vcenter.datastore.name:\n      enabled: true\n    vcenter.host.name:\n      enabled: true\n    vcenter.resource_pool.inventory_path:\n      enabled: true\n    vcenter.resource_pool.name:\n      enabled: true\n    vcenter.virtual_app.inventory_path:\n      enabled: true\n    vcenter.virtual_app.name:\n      enabled: true\n    vcenter.vm.id:\n      enabled: true\n    vcenter.vm.name:\n      enabled: true\n    vcenter.vm_template.id:\n      enabled: true\n    vcenter.vm_template.name:\n      enabled: true\nnone_set:\n  metrics:\n    vcenter.cluster.cpu.effective:\n      enabled: false\n    vcenter.cluster.cpu.limit:\n      enabled: false\n    vcenter.cluster.host.count:\n      enabled: false\n    vcenter.cluster.memory.effective:\n      enabled: false\n    vcenter.cluster.memory.limit:\n      enabled: false\n    vcenter.cluster.vm.count:\n      enabled: false\n    vcenter.cluster.vm_template.count:\n      enabled: false\n    vcenter.cluster.vsan.congestions:\n      enabled: false\n    vcenter.cluster.vsan.latency.avg:\n      enabled: false\n    vcenter.cluster.vsan.operations:\n      enabled: false\n    vcenter.cluster.vsan.throughput:\n      enabled: false\n    vcenter.datacenter.cluster.count:\n      enabled: false\n    vcenter.datacenter.cpu.limit:\n      enabled: false\n    vcenter.datacenter.datastore.count:\n      enabled: false\n    vcenter.datacenter.disk.space:\n      enabled: false\n    vcenter.datacenter.host.count:\n      enabled: false\n    vcenter.datacenter.memory.limit:\n      enabled: false\n    vcenter.datacenter.vm.count:\n      enabled: false\n    vcenter.datastore.disk.usage:\n      enabled: false\n    vcenter.datastore.disk.utilization:\n      enabled: false\n    vcenter.host.cpu.capacity:\n      enabled: false\n    vcenter.host.cpu.reserved:\n      enabled: false\n    vcenter.host.cpu.usage:\n      enabled: false\n    vcenter.host.cpu.utilization:\n      enabled: false\n    vcenter.host.disk.latency.avg:\n      enabled: false\n    vcenter.host.disk.latency.max:\n      enabled: false\n    vcenter.host.disk.throughput:\n      enabled: false\n    vcenter.host.memory.capacity:\n      enabled: false\n    vcenter.host.memory.usage:\n      enabled: false\n    vcenter.host.memory.utilization:\n      enabled: false\n    vcenter.host.network.packet.drop.rate:\n      enabled: false\n    vcenter.host.network.packet.error.rate:\n      enabled: false\n    vcenter.host.network.packet.rate:\n      enabled: false\n    vcenter.host.network.throughput:\n      enabled: false\n    vcenter.host.network.usage:\n      enabled: false\n    vcenter.host.vsan.cache.hit_rate:\n      enabled: false\n    vcenter.host.vsan.congestions:\n      enabled: false\n    vcenter.host.vsan.latency.avg:\n      enabled: false\n    vcenter.host.vsan.operations:\n      enabled: false\n    vcenter.host.vsan.throughput:\n      enabled: false\n    vcenter.resource_pool.cpu.shares:\n      enabled: false\n    vcenter.resource_pool.cpu.usage:\n      enabled: false\n    vcenter.resource_pool.memory.ballooned:\n      enabled: false\n    vcenter.resource_pool.memory.granted:\n      enabled: false\n    vcenter.resource_pool.memory.shares:\n      enabled: false\n    vcenter.resource_pool.memory.swapped:\n      enabled: false\n    vcenter.resource_pool.memory.usage:\n      enabled: false\n    vcenter.vm.cpu.readiness:\n      enabled: false\n    vcenter.vm.cpu.time:\n      enabled: false\n    vcenter.vm.cpu.usage:\n      enabled: false\n    vcenter.vm.cpu.utilization:\n      enabled: false\n    vcenter.vm.disk.latency.avg:\n      enabled: false\n    vcenter.vm.disk.latency.max:\n      enabled: false\n    vcenter.vm.disk.throughput:\n      enabled: false\n    vcenter.vm.disk.usage:\n      enabled: false\n    vcenter.vm.disk.utilization:\n      enabled: false\n    vcenter.vm.memory.ballooned:\n      enabled: false\n    vcenter.vm.memory.granted:\n      enabled: false\n    vcenter.vm.memory.swapped:\n      enabled: false\n    vcenter.vm.memory.swapped_ssd:\n      enabled: false\n    vcenter.vm.memory.usage:\n      enabled: false\n    vcenter.vm.memory.utilization:\n      enabled: false\n    vcenter.vm.network.broadcast.packet.rate:\n      enabled: false\n    vcenter.vm.network.multicast.packet.rate:\n      enabled: false\n    vcenter.vm.network.packet.drop.rate:\n      enabled: false\n    vcenter.vm.network.packet.rate:\n      enabled: false\n    vcenter.vm.network.throughput:\n      enabled: false\n    vcenter.vm.network.usage:\n      enabled: false\n    vcenter.vm.vsan.latency.avg:\n      enabled: false\n    vcenter.vm.vsan.operations:\n      enabled: false\n    vcenter.vm.vsan.throughput:\n      enabled: false\n  resource_attributes:\n    vcenter.cluster.name:\n      enabled: false\n    vcenter.datacenter.name:\n      enabled: false\n    vcenter.datastore.name:\n      enabled: false\n    vcenter.host.name:\n      enabled: false\n    vcenter.resource_pool.inventory_path:\n      enabled: false\n    vcenter.resource_pool.name:\n      enabled: false\n    vcenter.virtual_app.inventory_path:\n      enabled: false\n    vcenter.virtual_app.name:\n      enabled: false\n    vcenter.vm.id:\n      enabled: false\n    vcenter.vm.name:\n      enabled: false\n    vcenter.vm_template.id:\n      enabled: false\n    vcenter.vm_template.name:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    vcenter.cluster.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.datacenter.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.datastore.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.host.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.resource_pool.inventory_path:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.resource_pool.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.virtual_app.inventory_path:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.virtual_app.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.vm.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.vm.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.vm_template.id:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\n    vcenter.vm_template.name:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    vcenter.cluster.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.cluster.name-val\"\n    vcenter.datacenter.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.datacenter.name-val\"\n    vcenter.datastore.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.datastore.name-val\"\n    vcenter.host.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.host.name-val\"\n    vcenter.resource_pool.inventory_path:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.resource_pool.inventory_path-val\"\n    vcenter.resource_pool.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.resource_pool.name-val\"\n    vcenter.virtual_app.inventory_path:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.virtual_app.inventory_path-val\"\n    vcenter.virtual_app.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.virtual_app.name-val\"\n    vcenter.vm.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.vm.id-val\"\n    vcenter.vm.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.vm.name-val\"\n    vcenter.vm_template.id:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.vm_template.id-val\"\n    vcenter.vm_template.name:\n      enabled: true\n      metrics_exclude:\n        - strict: \"vcenter.vm_template.name-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "sshcheck",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is always required",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Username",
            "type": "string",
            "description": "authentication requires a Username and either a Password or KeyFile",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "key_file"
            ]
          },
          {
            "name": "KnownHosts",
            "type": "string",
            "description": "file path to the known_hosts",
            "required": false,
            "path_tokens": [
              "known_hosts"
            ]
          },
          {
            "name": "IgnoreHostKey",
            "type": "bool",
            "description": "IgnoreHostKey provides an insecure path to quickstarts and testing",
            "required": false,
            "path_tokens": [
              "ignore_host_key"
            ]
          },
          {
            "name": "CheckSFTP",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "check_sftp"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "error",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "error",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "sftp_duration",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "sftp_duration",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "sftp_error",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "sftp_error",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "sftp_status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "sftp_status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "sshcheck",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "resource_attributes",
              "ssh",
              "endpoint",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "ssh",
              "endpoint",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "ssh",
              "endpoint",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "ssh",
              "endpoint",
              "enabled_set_by_user"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    sshcheck.duration:\n      enabled: true\n    sshcheck.error:\n      enabled: true\n    sshcheck.sftp_duration:\n      enabled: true\n    sshcheck.sftp_error:\n      enabled: true\n    sshcheck.sftp_status:\n      enabled: true\n    sshcheck.status:\n      enabled: true\n  resource_attributes:\n    ssh.endpoint:\n      enabled: true\nnone_set:\n  metrics:\n    sshcheck.duration:\n      enabled: false\n    sshcheck.error:\n      enabled: false\n    sshcheck.sftp_duration:\n      enabled: false\n    sshcheck.sftp_error:\n      enabled: false\n    sshcheck.sftp_status:\n      enabled: false\n    sshcheck.status:\n      enabled: false\n  resource_attributes:\n    ssh.endpoint:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    ssh.endpoint:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    ssh.endpoint:\n      enabled: true\n      metrics_exclude:\n        - strict: \"ssh.endpoint-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "coralogix",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "transactions",
              "enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "tlscheck",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tlscheck",
              "time_left",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tlscheck",
              "time_left",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "tlscheck",
              "target",
              "enabled"
            ]
          },
          {
            "name": "MetricsInclude",
            "type": "array",
            "description": "Experimental: MetricsInclude defines a list of filters for attribute values. If the list is not empty, only metrics with matching resource attribute values will be emitted.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "tlscheck",
              "target",
              "metrics_include"
            ]
          },
          {
            "name": "MetricsExclude",
            "type": "array",
            "description": "Experimental: MetricsExclude defines a list of filters for attribute values. If the list is not empty, metrics with matching resource attribute values will not be emitted. MetricsInclude has higher priority than MetricsExclude.",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "tlscheck",
              "target",
              "metrics_exclude"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resource_attributes",
              "tlscheck",
              "target",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "Targets",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "targets"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    tlscheck.time_left:\n      enabled: true\n  resource_attributes:\n    tlscheck.target:\n      enabled: true\nnone_set:\n  metrics:\n    tlscheck.time_left:\n      enabled: false\n  resource_attributes:\n    tlscheck.target:\n      enabled: false\nfilter_set_include:\n  resource_attributes:\n    tlscheck.target:\n      enabled: true\n      metrics_include:\n        - regexp: \".*\"\nfilter_set_exclude:\n  resource_attributes:\n    tlscheck.target:\n      enabled: true\n      metrics_exclude:\n        - strict: \"tlscheck.target-val\"\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "deltatocumulative",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "MaxStale",
            "type": "duration",
            "description": "",
            "required": false,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "max_stale"
            ],
            "format": "duration"
          },
          {
            "name": "MaxStreams",
            "type": "int",
            "description": "",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "max_streams"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "datadogsemantics",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "OverrideIncomingDatadogFields",
            "type": "bool",
            "description": "OverrideIncomingDatadogFields specifies what is done with incoming Datadog fields. If it is false, any fields namespaced with \"datadog.\" will pass through unchanged. If it is true, all fields in the \"datadog.\" namespace will be recomputed by the processor. Default: false.",
            "required": false,
            "default": false,
            "path_tokens": [
              "override_incoming_datadog_fields"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "windowsservice",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "windows",
              "service",
              "status",
              "enabled"
            ]
          },
          {
            "name": "enabledSetByUser",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "windows",
              "service",
              "status",
              "enabled_set_by_user"
            ]
          },
          {
            "name": "IncludeServices",
            "type": "stringArray",
            "description": "user provided list of services to monitor with receiver",
            "required": false,
            "path_tokens": [
              "include_services"
            ]
          },
          {
            "name": "ExcludeServices",
            "type": "stringArray",
            "description": "user provided list of services to be excluded",
            "required": false,
            "path_tokens": [
              "exclude_services"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  metrics:\n    windows.service.status:\n      enabled: true\nnone_set:\n  metrics:\n    windows.service.status:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "dnslookup",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "deltatorate",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Metrics",
            "type": "stringArray",
            "description": "List of delta sum metrics to convert to rates",
            "required": false,
            "path_tokens": [
              "metrics"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "zookeeper",
      "type": "receiver",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "CollectionInterval",
            "type": "duration",
            "description": "CollectionInterval sets how frequently the scraper should be called and used as the context timeout to ensure that scrapers don't exceed the interval.",
            "required": false,
            "path_tokens": [
              "collection_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InitialDelay",
            "type": "duration",
            "description": "InitialDelay sets the initial start delay for the scraper, any non positive value is assumed to be immediately.",
            "required": false,
            "path_tokens": [
              "initial_delay"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is an optional value used to set scraper's context deadline.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "geoip",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Providers",
            "type": "array",
            "description": "Providers specifies the sources to extract geographical information about a given IP.",
            "required": false,
            "path_tokens": [
              "[]",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "Context",
            "type": "enum",
            "description": "Context section allows specifying the source type to look for the IP. Available options: resource or record.",
            "required": false,
            "default": "resource",
            "path_tokens": [
              "context"
            ],
            "enum_values": [
              "record",
              "resource"
            ]
          },
          {
            "name": "Attributes",
            "type": "array",
            "description": "An array of attribute names, which are used for the IP address lookup",
            "required": false,
            "default": [
              "semconv.ClientAddressKey",
              "semconv.SourceAddressKey"
            ],
            "path_tokens": [
              "attributes"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "groupbyattrs",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "GroupByKeys",
            "type": "stringArray",
            "description": "GroupByKeys describes the attribute names that are going to be used for grouping. Empty value is allowed, since processor in such case can compact data",
            "required": false,
            "path_tokens": [
              "keys"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "groupbytrace",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "NumTraces",
            "type": "int",
            "description": "NumTraces is the max number of traces to keep in memory waiting for the duration. Default: 1_000_000.",
            "required": false,
            "default": "1_000_000",
            "path_tokens": [
              "num_traces"
            ]
          },
          {
            "name": "NumWorkers",
            "type": "int",
            "description": "NumWorkers is a number of workers processing event queue. Default: 1.",
            "required": false,
            "default": 1,
            "path_tokens": [
              "num_workers"
            ]
          },
          {
            "name": "WaitDuration",
            "type": "duration",
            "description": "WaitDuration tells the processor to wait for the specified duration for the trace to be complete. Default: 1s.",
            "required": false,
            "default": "time.Second",
            "path_tokens": [
              "wait_duration"
            ],
            "format": "duration"
          },
          {
            "name": "DiscardOrphans",
            "type": "bool",
            "description": "DiscardOrphans instructs the processor to discard traces without the root span. This typically indicates that the trace is incomplete. Default: false. Not yet implemented, and an error will be returned when this option is used.",
            "required": false,
            "default": false,
            "path_tokens": [
              "discard_orphans"
            ]
          },
          {
            "name": "StoreOnDisk",
            "type": "bool",
            "description": "StoreOnDisk tells the processor to keep only the trace ID in memory, serializing the trace spans to disk. Useful when the duration to wait for traces to complete is high. Default: false. Not yet implemented, and an error will be returned when this option is used.",
            "required": false,
            "default": false,
            "path_tokens": [
              "store_on_disk"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "isolationforest",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ForestSize",
            "type": "int",
            "description": "",
            "required": false,
            "validation": {
              "max": "1000",
              "minExclusive": "0"
            },
            "path_tokens": [
              "forest_size"
            ]
          },
          {
            "name": "SubsampleSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "subsample_size"
            ]
          },
          {
            "name": "ContaminationRate",
            "type": "double",
            "description": "",
            "required": false,
            "validation": {
              "max": "1.0",
              "min": "0.0"
            },
            "path_tokens": [
              "contamination_rate"
            ]
          },
          {
            "name": "Mode",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "mode"
            ]
          },
          {
            "name": "Threshold",
            "type": "double",
            "description": "",
            "required": false,
            "validation": {
              "max": "1.0",
              "min": "0.0"
            },
            "path_tokens": [
              "threshold"
            ]
          },
          {
            "name": "TrainingWindow",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "training_window"
            ]
          },
          {
            "name": "UpdateFrequency",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "update_frequency"
            ]
          },
          {
            "name": "MinSamples",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "min_samples"
            ]
          },
          {
            "name": "ScoreAttribute",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "score_attribute"
            ]
          },
          {
            "name": "ClassificationAttribute",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "classification_attribute"
            ]
          },
          {
            "name": "Traces",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "features",
              "traces"
            ]
          },
          {
            "name": "Metrics",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "features",
              "metrics"
            ]
          },
          {
            "name": "Logs",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "features",
              "logs"
            ]
          },
          {
            "name": "Models",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "models"
            ]
          },
          {
            "name": "MaxMemoryMB",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "performance",
              "max_memory_mb"
            ]
          },
          {
            "name": "BatchSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "performance",
              "batch_size"
            ]
          },
          {
            "name": "ParallelWorkers",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "performance",
              "parallel_workers"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "cumulativetodelta",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "MaxStaleness",
            "type": "duration",
            "description": "MaxStaleness is the total time a state entry will live past the time it was last seen. Set to 0 to retain state indefinitely.",
            "required": false,
            "path_tokens": [
              "max_staleness"
            ],
            "format": "duration"
          },
          {
            "name": "InitialValue",
            "type": "enum",
            "description": "InitialValue determines how to handle the first datapoint for a given metric. Valid values:   - auto: (default) send the first point iff the startime is set AND the starttime happens after the component started AND the starttime is different from the timestamp   - keep: always send the first point   - drop: don't send the first point, but store it for subsequent delta calculations",
            "required": false,
            "path_tokens": [
              "initial_value"
            ],
            "enum_values": [
              "auto",
              "drop",
              "keep"
            ]
          },
          {
            "name": "Metrics",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "include",
              "metrics"
            ]
          },
          {
            "name": "MetricTypes",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "include",
              "metric_types"
            ]
          },
          {
            "name": "Metrics",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "exclude",
              "metrics"
            ]
          },
          {
            "name": "MetricTypes",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "exclude",
              "metric_types"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "interval",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Interval",
            "type": "duration",
            "description": "Interval is the time interval at which the processor will aggregate metrics.",
            "required": false,
            "default": "60s",
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "Gauge",
            "type": "bool",
            "description": "Gauge is a flag that determines whether gauge metrics should be passed through as they are or aggregated.",
            "required": false,
            "default": false,
            "path_tokens": [
              "pass_through",
              "gauge"
            ]
          },
          {
            "name": "Summary",
            "type": "bool",
            "description": "Summary is a flag that determines whether summary metrics should be passed through as they are or aggregated.",
            "required": false,
            "default": false,
            "path_tokens": [
              "pass_through",
              "summary"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "logdedup",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "LogCountAttribute",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "log_count_attribute"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "",
            "required": false,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "Timezone",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "timezone"
            ]
          },
          {
            "name": "ExcludeFields",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "exclude_fields"
            ]
          },
          {
            "name": "IncludeFields",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "include_fields"
            ]
          },
          {
            "name": "Conditions",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "conditions"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "k8sattributes",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "context"
            ]
          },
          {
            "name": "Passthrough",
            "type": "bool",
            "description": "Passthrough mode only annotates resources with the pod IP and does not try to extract any other metadata. It does not need access to the K8S cluster API. Agent/Collector must receive spans directly from services to be able to correctly detect the pod IPs.",
            "required": false,
            "path_tokens": [
              "passthrough"
            ]
          },
          {
            "name": "Metadata",
            "type": "stringArray",
            "description": "Metadata allows to extract pod/namespace/node metadata from a list of metadata fields. The field accepts a list of strings. Metadata fields supported right now are,   k8s.pod.name, k8s.pod.uid, k8s.deployment.name,   k8s.node.name, k8s.namespace.name, k8s.pod.start_time,   k8s.replicaset.name, k8s.replicaset.uid,   k8s.daemonset.name, k8s.daemonset.uid,   k8s.job.name, k8s.job.uid, k8s.cronjob.name,   k8s.statefulset.name, k8s.statefulset.uid,   k8s.container.name, container.id, container.image.name,   container.image.tag, container.image.repo_digests   k8s.cluster.uid Specifying anything other than these values will result in an error. By default, the following fields are extracted and added to spans, metrics and logs as resource attributes:  - k8s.pod.name  - k8s.pod.uid  - k8s.pod.start_time  - k8s.namespace.name  - k8s.node.name  - k8s.deployment.name (if the pod is controlled by a deployment)  - k8s.container.name (requires an additional attribute to be set: container.id)  - container.image.name (requires one of the following additional attributes to be set: container.id or k8s.container.name)  - container.image.tag (requires one of the following additional attributes to be set: container.id or k8s.container.name)",
            "required": false,
            "path_tokens": [
              "extract",
              "metadata"
            ]
          },
          {
            "name": "Annotations",
            "type": "array",
            "description": "Annotations allows extracting data from pod annotations and record it as resource attributes. It is a list of FieldExtractConfig type. See FieldExtractConfig documentation for more details.",
            "required": false,
            "path_tokens": [
              "extract",
              "annotations"
            ]
          },
          {
            "name": "Labels",
            "type": "array",
            "description": "Labels allows extracting data from pod labels and record it as resource attributes. It is a list of FieldExtractConfig type. See FieldExtractConfig documentation for more details.",
            "required": false,
            "path_tokens": [
              "extract",
              "labels"
            ]
          },
          {
            "name": "OtelAnnotations",
            "type": "bool",
            "description": "OtelAnnotations extracts all pod annotations with the prefix \"resource.opentelemetry.io\" as resource attributes E.g. \"resource.opentelemetry.io/foo\" becomes \"foo\"",
            "required": false,
            "path_tokens": [
              "extract",
              "otel_annotations"
            ]
          },
          {
            "name": "Node",
            "type": "string",
            "description": "Node represents a k8s node or host. If specified, any pods not running on the specified node will be ignored by the tagger.",
            "required": false,
            "path_tokens": [
              "filter",
              "node"
            ]
          },
          {
            "name": "NodeFromEnvVar",
            "type": "string",
            "description": "NodeFromEnv can be used to extract the node name from an environment variable. The value must be the name of the environment variable. This is useful when the node a Otel agent will run on cannot be predicted. In such cases, the Kubernetes downward API can be used to add the node name to each pod as an environment variable. K8s tagger can then read this value and filter pods by it. For example, node name can be passed to each agent with the downward API as follows env:   - name: K8S_NODE_NAME     valueFrom:       fieldRef:         fieldPath: spec.nodeName Then the NodeFromEnv field can be set to `K8S_NODE_NAME` to filter all pods by the node that the agent is running on. More on downward API here: https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/",
            "required": false,
            "path_tokens": [
              "filter",
              "node_from_env_var"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "Namespace filters all pods by the provided namespace. All other pods are ignored.",
            "required": false,
            "path_tokens": [
              "filter",
              "namespace"
            ]
          },
          {
            "name": "Fields",
            "type": "array",
            "description": "Fields allows to filter pods by generic k8s fields. Only the following operations are supported:    - equals    - not-equals Check FieldFilterConfig for more details.",
            "required": false,
            "path_tokens": [
              "filter",
              "fields"
            ]
          },
          {
            "name": "Labels",
            "type": "array",
            "description": "Labels allows to filter pods by generic k8s pod labels. Only the following operations are supported:    - equals    - not-equals    - exists    - not-exists Check FieldFilterConfig for more details.",
            "required": false,
            "path_tokens": [
              "filter",
              "labels"
            ]
          },
          {
            "name": "Association",
            "type": "array",
            "description": "Association section allows to define rules for tagging spans, metrics, and logs with Pod metadata.",
            "required": false,
            "path_tokens": [
              "pod_association"
            ]
          },
          {
            "name": "Pods",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "exclude",
              "pods"
            ]
          },
          {
            "name": "WaitForMetadata",
            "type": "bool",
            "description": "WaitForMetadata is a flag that determines if the processor should wait k8s metadata to be synced when starting.",
            "required": false,
            "path_tokens": [
              "wait_for_metadata"
            ]
          },
          {
            "name": "WaitForMetadataTimeout",
            "type": "duration",
            "description": "WaitForMetadataTimeout is the maximum time the processor will wait for the k8s metadata to be synced.",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "wait_for_metadata_timeout"
            ],
            "format": "duration"
          }
        ],
        "examples": [
          "default:\nall_set:\n  resource_attributes:\n    container.id:\n      enabled: true\n    container.image.name:\n      enabled: true\n    container.image.repo_digests:\n      enabled: true\n    container.image.tag:\n      enabled: true\n    k8s.cluster.uid:\n      enabled: true\n    k8s.container.name:\n      enabled: true\n    k8s.cronjob.name:\n      enabled: true\n    k8s.daemonset.name:\n      enabled: true\n    k8s.daemonset.uid:\n      enabled: true\n    k8s.deployment.name:\n      enabled: true\n    k8s.deployment.uid:\n      enabled: true\n    k8s.job.name:\n      enabled: true\n    k8s.job.uid:\n      enabled: true\n    k8s.namespace.name:\n      enabled: true\n    k8s.node.name:\n      enabled: true\n    k8s.node.uid:\n      enabled: true\n    k8s.pod.hostname:\n      enabled: true\n    k8s.pod.ip:\n      enabled: true\n    k8s.pod.name:\n      enabled: true\n    k8s.pod.start_time:\n      enabled: true\n    k8s.pod.uid:\n      enabled: true\n    k8s.replicaset.name:\n      enabled: true\n    k8s.replicaset.uid:\n      enabled: true\n    k8s.statefulset.name:\n      enabled: true\n    k8s.statefulset.uid:\n      enabled: true\n    service.instance.id:\n      enabled: true\n    service.name:\n      enabled: true\n    service.namespace:\n      enabled: true\n    service.version:\n      enabled: true\nnone_set:\n  resource_attributes:\n    container.id:\n      enabled: false\n    container.image.name:\n      enabled: false\n    container.image.repo_digests:\n      enabled: false\n    container.image.tag:\n      enabled: false\n    k8s.cluster.uid:\n      enabled: false\n    k8s.container.name:\n      enabled: false\n    k8s.cronjob.name:\n      enabled: false\n    k8s.daemonset.name:\n      enabled: false\n    k8s.daemonset.uid:\n      enabled: false\n    k8s.deployment.name:\n      enabled: false\n    k8s.deployment.uid:\n      enabled: false\n    k8s.job.name:\n      enabled: false\n    k8s.job.uid:\n      enabled: false\n    k8s.namespace.name:\n      enabled: false\n    k8s.node.name:\n      enabled: false\n    k8s.node.uid:\n      enabled: false\n    k8s.pod.hostname:\n      enabled: false\n    k8s.pod.ip:\n      enabled: false\n    k8s.pod.name:\n      enabled: false\n    k8s.pod.start_time:\n      enabled: false\n    k8s.pod.uid:\n      enabled: false\n    k8s.replicaset.name:\n      enabled: false\n    k8s.replicaset.uid:\n      enabled: false\n    k8s.statefulset.name:\n      enabled: false\n    k8s.statefulset.uid:\n      enabled: false\n    service.instance.id:\n      enabled: false\n    service.name:\n      enabled: false\n    service.namespace:\n      enabled: false\n    service.version:\n      enabled: false\n"
        ]
      },
      "constraints": []
    },
    {
      "name": "metricsgeneration",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Rules",
            "type": "array",
            "description": "Set of rules for generating new metrics",
            "required": false,
            "path_tokens": [
              "rules"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "logstransform",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Operators",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "operators"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream consumer. Default is false.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying. Default value is 1 second.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`. Default value is 30 seconds.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to a downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0. Default value is 5 minutes.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "maxBatchSize",
            "type": "int",
            "description": "currently not configurable by users, but available for benchmarking",
            "required": false,
            "path_tokens": [
              "max_batch_size"
            ]
          },
          {
            "name": "flushInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "flush_interval"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "metricstarttime",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Strategy",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "strategy"
            ]
          },
          {
            "name": "GCInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "gc_interval"
            ],
            "format": "duration"
          },
          {
            "name": "StartTimeMetricRegex",
            "type": "string",
            "description": "StartTimeMetricRegex only applies then the start_time_metric strategy is used",
            "required": false,
            "path_tokens": [
              "start_time_metric_regex"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "metricstransform",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Transforms",
            "type": "array",
            "description": "transform specifies a list of transforms on metrics with each transform focusing on one metric.",
            "required": false,
            "path_tokens": [
              "transforms"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "filter",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ErrorMode",
            "type": "enum",
            "description": "ErrorMode determines how the processor reacts to errors that occur while processing an OTTL condition. Valid values are `ignore` and `propagate`. `ignore` means the processor ignores errors returned by conditions and continues on to the next condition. This is the recommended mode. `propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector. The default value is `propagate`.",
            "required": false,
            "default": "ottl.PropagateError",
            "path_tokens": [
              "error_mode"
            ],
            "enum_values": [
              "ignore",
              "propagate",
              "silent"
            ]
          },
          {
            "name": "MatchType",
            "type": "custom",
            "description": "MatchType specifies the type of matching desired",
            "required": false,
            "path_tokens": [
              "metrics",
              "include",
              "match_type"
            ]
          },
          {
            "name": "CacheEnabled",
            "type": "bool",
            "description": "CacheEnabled determines whether match results are LRU cached to make subsequent matches faster. Cache size is unlimited unless CacheMaxNumEntries is also specified.",
            "required": false,
            "path_tokens": [
              "metrics",
              "include",
              "regexp",
              "cacheenabled"
            ]
          },
          {
            "name": "CacheMaxNumEntries",
            "type": "int",
            "description": "CacheMaxNumEntries is the max number of entries of the LRU cache that stores match results. CacheMaxNumEntries is ignored if CacheEnabled is false.",
            "required": false,
            "path_tokens": [
              "metrics",
              "include",
              "regexp",
              "cachemaxnumentries"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames specifies the list of string patterns to match metric names against. A match occurs if the metric name matches at least one string pattern in this list.",
            "required": false,
            "path_tokens": [
              "metrics",
              "include",
              "metric_names"
            ]
          },
          {
            "name": "Expressions",
            "type": "stringArray",
            "description": "Expressions specifies the list of expr expressions to match metrics against. A match occurs if any datapoint in a metric matches at least one expression in this list.",
            "required": false,
            "path_tokens": [
              "metrics",
              "include",
              "expressions"
            ]
          },
          {
            "name": "ResourceAttributes",
            "type": "array",
            "description": "ResourceAttributes defines a list of possible resource attributes to match metrics against. A match occurs if any resource attribute matches all expressions in this given list.",
            "required": false,
            "path_tokens": [
              "metrics",
              "include",
              "resource_attributes"
            ]
          },
          {
            "name": "MatchType",
            "type": "custom",
            "description": "MatchType specifies the type of matching desired",
            "required": false,
            "path_tokens": [
              "metrics",
              "exclude",
              "match_type"
            ]
          },
          {
            "name": "CacheEnabled",
            "type": "bool",
            "description": "CacheEnabled determines whether match results are LRU cached to make subsequent matches faster. Cache size is unlimited unless CacheMaxNumEntries is also specified.",
            "required": false,
            "path_tokens": [
              "metrics",
              "exclude",
              "regexp",
              "cacheenabled"
            ]
          },
          {
            "name": "CacheMaxNumEntries",
            "type": "int",
            "description": "CacheMaxNumEntries is the max number of entries of the LRU cache that stores match results. CacheMaxNumEntries is ignored if CacheEnabled is false.",
            "required": false,
            "path_tokens": [
              "metrics",
              "exclude",
              "regexp",
              "cachemaxnumentries"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames specifies the list of string patterns to match metric names against. A match occurs if the metric name matches at least one string pattern in this list.",
            "required": false,
            "path_tokens": [
              "metrics",
              "exclude",
              "metric_names"
            ]
          },
          {
            "name": "Expressions",
            "type": "stringArray",
            "description": "Expressions specifies the list of expr expressions to match metrics against. A match occurs if any datapoint in a metric matches at least one expression in this list.",
            "required": false,
            "path_tokens": [
              "metrics",
              "exclude",
              "expressions"
            ]
          },
          {
            "name": "ResourceAttributes",
            "type": "array",
            "description": "ResourceAttributes defines a list of possible resource attributes to match metrics against. A match occurs if any resource attribute matches all expressions in this given list.",
            "required": false,
            "path_tokens": [
              "metrics",
              "exclude",
              "resource_attributes"
            ]
          },
          {
            "name": "CacheEnabled",
            "type": "bool",
            "description": "CacheEnabled determines whether match results are LRU cached to make subsequent matches faster. Cache size is unlimited unless CacheMaxNumEntries is also specified.",
            "required": false,
            "path_tokens": [
              "metrics",
              "regexp",
              "cacheenabled"
            ]
          },
          {
            "name": "CacheMaxNumEntries",
            "type": "int",
            "description": "CacheMaxNumEntries is the max number of entries of the LRU cache that stores match results. CacheMaxNumEntries is ignored if CacheEnabled is false.",
            "required": false,
            "path_tokens": [
              "metrics",
              "regexp",
              "cachemaxnumentries"
            ]
          },
          {
            "name": "MetricConditions",
            "type": "stringArray",
            "description": "MetricConditions is a list of OTTL conditions for an ottlmetric context. If any condition resolves to true, the metric will be dropped. Supports `and`, `or`, and `()`",
            "required": false,
            "path_tokens": [
              "metrics",
              "metric"
            ]
          },
          {
            "name": "DataPointConditions",
            "type": "stringArray",
            "description": "DataPointConditions is a list of OTTL conditions for an ottldatapoint context. If any condition resolves to true, the datapoint will be dropped. Supports `and`, `or`, and `()`",
            "required": false,
            "path_tokens": [
              "metrics",
              "datapoint"
            ]
          },
          {
            "name": "LogMatchType",
            "type": "custom",
            "description": "LogMatchType specifies the type of matching desired",
            "required": false,
            "path_tokens": [
              "logs",
              "include",
              "match_type"
            ]
          },
          {
            "name": "ResourceAttributes",
            "type": "array",
            "description": "ResourceAttributes defines a list of possible resource attributes to match logs against. A match occurs if any resource attribute matches all expressions in this given list.",
            "required": false,
            "path_tokens": [
              "logs",
              "include",
              "resource_attributes"
            ]
          },
          {
            "name": "RecordAttributes",
            "type": "array",
            "description": "RecordAttributes defines a list of possible record attributes to match logs against. A match occurs if any record attribute matches at least one expression in this given list.",
            "required": false,
            "path_tokens": [
              "logs",
              "include",
              "record_attributes"
            ]
          },
          {
            "name": "SeverityTexts",
            "type": "stringArray",
            "description": "SeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "logs",
              "include",
              "severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the minimum severity needed for the log record to match. This corresponds to the short names specified here: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/data-model.md#displaying-severity this field is case-insensitive (\"INFO\" == \"info\")",
            "required": false,
            "path_tokens": [
              "logs",
              "include",
              "severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined lets logs records with \"unknown\" severity match. If MinSeverity is not set, this field is ignored, as fields are not matched based on severity.",
            "required": false,
            "path_tokens": [
              "logs",
              "include",
              "severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "logs",
              "include",
              "bodies"
            ]
          },
          {
            "name": "LogMatchType",
            "type": "custom",
            "description": "LogMatchType specifies the type of matching desired",
            "required": false,
            "path_tokens": [
              "logs",
              "exclude",
              "match_type"
            ]
          },
          {
            "name": "ResourceAttributes",
            "type": "array",
            "description": "ResourceAttributes defines a list of possible resource attributes to match logs against. A match occurs if any resource attribute matches all expressions in this given list.",
            "required": false,
            "path_tokens": [
              "logs",
              "exclude",
              "resource_attributes"
            ]
          },
          {
            "name": "RecordAttributes",
            "type": "array",
            "description": "RecordAttributes defines a list of possible record attributes to match logs against. A match occurs if any record attribute matches at least one expression in this given list.",
            "required": false,
            "path_tokens": [
              "logs",
              "exclude",
              "record_attributes"
            ]
          },
          {
            "name": "SeverityTexts",
            "type": "stringArray",
            "description": "SeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "logs",
              "exclude",
              "severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the minimum severity needed for the log record to match. This corresponds to the short names specified here: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/data-model.md#displaying-severity this field is case-insensitive (\"INFO\" == \"info\")",
            "required": false,
            "path_tokens": [
              "logs",
              "exclude",
              "severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined lets logs records with \"unknown\" severity match. If MinSeverity is not set, this field is ignored, as fields are not matched based on severity.",
            "required": false,
            "path_tokens": [
              "logs",
              "exclude",
              "severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "logs",
              "exclude",
              "bodies"
            ]
          },
          {
            "name": "LogConditions",
            "type": "stringArray",
            "description": "LogConditions is a list of OTTL conditions for an ottllog context. If any condition resolves to true, the log event will be dropped. Supports `and`, `or`, and `()`",
            "required": false,
            "path_tokens": [
              "logs",
              "log_record"
            ]
          },
          {
            "name": "MatchType",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "match_type"
            ],
            "enum_values": [
              "match_type",
              "regexp",
              "strict"
            ]
          },
          {
            "name": "Services",
            "type": "stringArray",
            "description": "Services specify the list of items to match service name against. A match occurs if the span's service name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "services"
            ]
          },
          {
            "name": "SpanNames",
            "type": "stringArray",
            "description": "SpanNames specify the list of items to match span name against. A match occurs if the span name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "span_names"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "log_bodies"
            ]
          },
          {
            "name": "LogSeverityTexts",
            "type": "stringArray",
            "description": "LogSeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "log_severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the lowest severity that may be matched. e.g. if this is plog.SeverityNumberInfo, INFO, WARN, ERROR, and FATAL logs will match.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "log_severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined controls whether logs with \"undefined\" severity matches. If this is true, entries with undefined severity will match.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "log_severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames is a list of strings to match metric name against. A match occurs if metric name matches at least one item in the list. This field is optional.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "metric_names"
            ]
          },
          {
            "name": "Attributes",
            "type": "array",
            "description": "Attributes specifies the list of attributes to match against. All of these attributes must match for a match to occur. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "attributes"
            ]
          },
          {
            "name": "Resources",
            "type": "array",
            "description": "Resources specify the list of items to match the resources against. A match occurs if the data's resources match at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "resources"
            ]
          },
          {
            "name": "Libraries",
            "type": "array",
            "description": "Libraries specify the list of items to match the implementation library against. A match occurs if the span's implementation library matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "libraries"
            ]
          },
          {
            "name": "SpanKinds",
            "type": "stringArray",
            "description": "SpanKinds specify the list of items to match the span kind against. A match occurs if the span's span kind matches at least one item in this list. This is an optional field",
            "required": false,
            "path_tokens": [
              "spans",
              "include",
              "span_kinds"
            ]
          },
          {
            "name": "MatchType",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "match_type"
            ],
            "enum_values": [
              "match_type",
              "regexp",
              "strict"
            ]
          },
          {
            "name": "Services",
            "type": "stringArray",
            "description": "Services specify the list of items to match service name against. A match occurs if the span's service name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "services"
            ]
          },
          {
            "name": "SpanNames",
            "type": "stringArray",
            "description": "SpanNames specify the list of items to match span name against. A match occurs if the span name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "span_names"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "log_bodies"
            ]
          },
          {
            "name": "LogSeverityTexts",
            "type": "stringArray",
            "description": "LogSeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "log_severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the lowest severity that may be matched. e.g. if this is plog.SeverityNumberInfo, INFO, WARN, ERROR, and FATAL logs will match.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "log_severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined controls whether logs with \"undefined\" severity matches. If this is true, entries with undefined severity will match.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "log_severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames is a list of strings to match metric name against. A match occurs if metric name matches at least one item in the list. This field is optional.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "metric_names"
            ]
          },
          {
            "name": "Attributes",
            "type": "array",
            "description": "Attributes specifies the list of attributes to match against. All of these attributes must match for a match to occur. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "attributes"
            ]
          },
          {
            "name": "Resources",
            "type": "array",
            "description": "Resources specify the list of items to match the resources against. A match occurs if the data's resources match at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "resources"
            ]
          },
          {
            "name": "Libraries",
            "type": "array",
            "description": "Libraries specify the list of items to match the implementation library against. A match occurs if the span's implementation library matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "libraries"
            ]
          },
          {
            "name": "SpanKinds",
            "type": "stringArray",
            "description": "SpanKinds specify the list of items to match the span kind against. A match occurs if the span's span kind matches at least one item in this list. This is an optional field",
            "required": false,
            "path_tokens": [
              "spans",
              "exclude",
              "span_kinds"
            ]
          },
          {
            "name": "SpanConditions",
            "type": "stringArray",
            "description": "SpanConditions is a list of OTTL conditions for an ottlspan context. If any condition resolves to true, the span will be dropped. Supports `and`, `or`, and `()`",
            "required": false,
            "path_tokens": [
              "traces",
              "span"
            ]
          },
          {
            "name": "SpanEventConditions",
            "type": "stringArray",
            "description": "SpanEventConditions is a list of OTTL conditions for an ottlspanevent context. If any condition resolves to true, the span event will be dropped. Supports `and`, `or`, and `()`",
            "required": false,
            "path_tokens": [
              "traces",
              "spanevent"
            ]
          },
          {
            "name": "dataPointFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.dataPointFunctions",
            "path_tokens": [
              "data_point_functions"
            ]
          },
          {
            "name": "logFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.logFunctions",
            "path_tokens": [
              "log_functions"
            ]
          },
          {
            "name": "metricFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.metricFunctions",
            "path_tokens": [
              "metric_functions"
            ]
          },
          {
            "name": "spanEventFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.spanEventFunctions",
            "path_tokens": [
              "span_event_functions"
            ]
          },
          {
            "name": "spanFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.spanFunctions",
            "path_tokens": [
              "span_functions"
            ]
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "atMostOne",
          "keys": [
            [
              "logs",
              "include"
            ],
            [
              "logs",
              "log_record"
            ]
          ]
        },
        {
          "kind": "atMostOne",
          "keys": [
            [
              "logs",
              "exclude"
            ],
            [
              "logs",
              "log_record"
            ]
          ]
        }
      ]
    },
    {
      "name": "probabilisticsampler",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "SamplingPercentage",
            "type": "double",
            "description": "SamplingPercentage is the percentage rate at which traces or logs are going to be sampled. Defaults to zero, i.e.: no sample. Values greater or equal 100 are treated as \"sample all traces/logs\".",
            "required": false,
            "path_tokens": [
              "sampling_percentage"
            ]
          },
          {
            "name": "HashSeed",
            "type": "int",
            "description": "HashSeed allows one to configure the hashing seed. This is important in scenarios where multiple layers of collectors have different sampling rates: if they use the same seed all passing one layer may pass the other even if they have different sampling rates, configuring different seeds avoids that.",
            "required": false,
            "path_tokens": [
              "hash_seed"
            ]
          },
          {
            "name": "Mode",
            "type": "enum",
            "description": "Mode selects the sampling behavior. Supported values: - \"hash_seed\": the legacy behavior of this processor.   Using an FNV hash combined with the HashSeed value, this   sampler performs a non-consistent probabilistic   downsampling.  The number of spans output is expected to   equal SamplingPercentage (as a ratio) times the number of   spans inpout, assuming good behavior from FNV and good   entropy in the hashed attributes or TraceID. - \"equalizing\": Using an OTel-specified consistent sampling   mechanism, this sampler selectively reduces the effective   sampling probability of arriving spans.  This can be   useful to select a small fraction of complete traces from   a stream with mixed sampling rates.  The rate of spans   passing through depends on how much sampling has already   been applied.  If an arriving span was head sampled at   the same probability it passes through.  If the span   arrives with lower probability, a warning is logged   because it means this sampler is configured with too   large a sampling probability to ensure complete traces. - \"proportional\": Using an OTel-specified consistent sampling   mechanism, this sampler reduces the effective sampling   probability of each span by `SamplingProbability`.",
            "required": false,
            "default": "",
            "path_tokens": [
              "mode"
            ],
            "enum_values": [
              "equalizing",
              "hash_seed",
              "proportional"
            ]
          },
          {
            "name": "FailClosed",
            "type": "bool",
            "description": "FailClosed indicates to not sample data (the processor will fail \"closed\") in case of error, such as failure to parse the tracestate field or missing the randomness attribute. By default, failure cases are sampled (the processor is fails \"open\").  Sampling priority-based decisions are made after FailClosed is processed, making it possible to sample despite errors using priority.",
            "required": false,
            "default": true,
            "path_tokens": [
              "fail_closed"
            ]
          },
          {
            "name": "SamplingPrecision",
            "type": "int",
            "description": "SamplingPrecision is how many hex digits of sampling threshold will be encoded, from 1 up to 14.  Default is 4. 0 is treated as full precision.",
            "required": false,
            "default": 4,
            "path_tokens": [
              "sampling_precision"
            ]
          },
          {
            "name": "FromAttribute",
            "type": "string",
            "description": "FromAttribute (logs only) The optional name of a log record attribute used for sampling purposes, such as a unique log record ID. The value of the attribute is only used if the trace ID is absent or if `attribute_source` is set to `record`.",
            "required": false,
            "path_tokens": [
              "from_attribute"
            ]
          },
          {
            "name": "SamplingPriority",
            "type": "string",
            "description": "SamplingPriority (logs only) enables using a log record attribute as the sampling priority of the log record.",
            "required": false,
            "path_tokens": [
              "sampling_priority"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "redaction",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AllowAllKeys",
            "type": "bool",
            "description": "AllowAllKeys is a flag to allow all span attribute keys. Setting this to true disables the AllowedKeys list. The list of BlockedValues is applied regardless. If you just want to block values, set this to true.",
            "required": false,
            "path_tokens": [
              "allow_all_keys"
            ]
          },
          {
            "name": "AllowedKeys",
            "type": "stringArray",
            "description": "AllowedKeys is a list of allowed span attribute keys. Span attributes not on the list are removed. The list fails closed if it's empty. To allow all keys, you should explicitly set AllowAllKeys",
            "required": false,
            "path_tokens": [
              "allowed_keys"
            ]
          },
          {
            "name": "BlockedKeyPatterns",
            "type": "stringArray",
            "description": "BlockedKeyPatterns is a list of blocked span attribute key patterns. Span attributes matching the regexes on the list are masked.",
            "required": false,
            "path_tokens": [
              "blocked_key_patterns"
            ]
          },
          {
            "name": "HashFunction",
            "type": "enum",
            "description": "HashFunction defines the function for hashing the values instead of masking them with a fixed string. By default, no hash function is used and masking with a fixed string is performed.",
            "required": false,
            "path_tokens": [
              "hash_function"
            ],
            "enum_values": [
              "md5",
              "sha1",
              "sha3"
            ]
          },
          {
            "name": "IgnoredKeys",
            "type": "stringArray",
            "description": "IgnoredKeys is a list of span attribute keys that are not redacted. Span attributes in this list are allowed to pass through the filter without being changed or removed.",
            "required": false,
            "path_tokens": [
              "ignored_keys"
            ]
          },
          {
            "name": "RedactAllTypes",
            "type": "bool",
            "description": "RedactAllTypes of attributes, including those that are not string, by converting to a string representation. By default only string values are redacted.",
            "required": false,
            "path_tokens": [
              "redact_all_types"
            ]
          },
          {
            "name": "BlockedValues",
            "type": "stringArray",
            "description": "BlockedValues is a list of regular expressions for blocking values of allowed span attributes. Values that match are masked.",
            "required": false,
            "path_tokens": [
              "blocked_values"
            ]
          },
          {
            "name": "AllowedValues",
            "type": "stringArray",
            "description": "AllowedValues is a list of regular expressions for allowing values of blocked span attributes. Values that match are not masked.",
            "required": false,
            "path_tokens": [
              "allowed_values"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "sql",
              "enabled"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes specifies which attribute keys to apply SQL sanitization to. If empty, SQL sanitization is applied to all string values in log bodies but not to span/metric attributes",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "sql",
              "attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "redis",
              "enabled"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes specifies which attribute keys to apply Redis sanitization to. If empty, Redis sanitization is applied to all string values in log bodies but not to span/metric attributes",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "redis",
              "attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "valkey",
              "enabled"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes specifies which attribute keys to apply Valkey sanitization to. If empty, Valkey sanitization is applied to all string values in log bodies but not to span/metric attributes",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "valkey",
              "attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "memcached",
              "enabled"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes specifies which attribute keys to apply Memcached sanitization to. If empty, Memcached sanitization is applied to all string values in log bodies but not to span/metric attributes",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "memcached",
              "attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "mongo",
              "enabled"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes specifies which attribute keys to apply MongoDB sanitization to. If empty, MongoDB sanitization is applied to all string values in log bodies but not to span/metric attributes",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "mongo",
              "attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "opensearch",
              "enabled"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes specifies which attribute keys to apply OpenSearch sanitization to. If empty, OpenSearch sanitization is applied to all string values in log bodies but not to span/metric attributes",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "opensearch",
              "attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "es",
              "enabled"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes specifies which attribute keys to apply Elasticsearch sanitization to. If empty, Elasticsearch sanitization is applied to all string values in log bodies but not to span/metric attributes",
            "required": false,
            "path_tokens": [
              "db_sanitizer",
              "es",
              "attributes"
            ]
          },
          {
            "name": "Summary",
            "type": "string",
            "description": "Summary controls the verbosity level of the diagnostic attributes that the processor adds to the spans when it redacts or masks other attributes. In some contexts a list of redacted attributes leaks information, while it is valuable when integrating and testing a new configuration. Possible values are `debug`, `info`, and `silent`.",
            "required": false,
            "path_tokens": [
              "summary"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "resource",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AttributesActions",
            "type": "array",
            "description": "AttributesActions specifies the list of actions to be applied on resource attributes. The set of actions are {INSERT, UPDATE, UPSERT, DELETE, HASH, EXTRACT}.",
            "required": false,
            "path_tokens": [
              "attributes"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sumologic",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AddCloudNamespace",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "add_cloud_namespace"
            ]
          },
          {
            "name": "TranslateAttributes",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "translate_attributes"
            ]
          },
          {
            "name": "TranslateTelegrafAttributes",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "translate_telegraf_attributes"
            ]
          },
          {
            "name": "Separator",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "nest_attributes",
              "separator"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "nest_attributes",
              "enabled"
            ]
          },
          {
            "name": "Include",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "nest_attributes",
              "include"
            ]
          },
          {
            "name": "Exclude",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "nest_attributes",
              "exclude"
            ]
          },
          {
            "name": "AggregateAttributes",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "aggregate_attributes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "severity_number",
              "enabled"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "severity_number",
              "name"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "severity_text",
              "enabled"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "severity_text",
              "name"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "span_id",
              "enabled"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "span_id",
              "name"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "trace_id",
              "enabled"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "field_attributes",
              "trace_id",
              "name"
            ]
          },
          {
            "name": "TranslateDockerMetrics",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "translate_docker_metrics"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "attributes",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Services",
            "type": "stringArray",
            "description": "Services specify the list of items to match service name against. A match occurs if the span's service name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "services"
            ]
          },
          {
            "name": "SpanNames",
            "type": "stringArray",
            "description": "SpanNames specify the list of items to match span name against. A match occurs if the span name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "span_names"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "include",
              "log_bodies"
            ]
          },
          {
            "name": "LogSeverityTexts",
            "type": "stringArray",
            "description": "LogSeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "include",
              "log_severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the lowest severity that may be matched. e.g. if this is plog.SeverityNumberInfo, INFO, WARN, ERROR, and FATAL logs will match.",
            "required": false,
            "path_tokens": [
              "include",
              "log_severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined controls whether logs with \"undefined\" severity matches. If this is true, entries with undefined severity will match.",
            "required": false,
            "path_tokens": [
              "include",
              "log_severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames is a list of strings to match metric name against. A match occurs if metric name matches at least one item in the list. This field is optional.",
            "required": false,
            "path_tokens": [
              "include",
              "metric_names"
            ]
          },
          {
            "name": "Attributes",
            "type": "array",
            "description": "Attributes specifies the list of attributes to match against. All of these attributes must match for a match to occur. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "attributes"
            ]
          },
          {
            "name": "Resources",
            "type": "array",
            "description": "Resources specify the list of items to match the resources against. A match occurs if the data's resources match at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "resources"
            ]
          },
          {
            "name": "Libraries",
            "type": "array",
            "description": "Libraries specify the list of items to match the implementation library against. A match occurs if the span's implementation library matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "libraries"
            ]
          },
          {
            "name": "SpanKinds",
            "type": "stringArray",
            "description": "SpanKinds specify the list of items to match the span kind against. A match occurs if the span's span kind matches at least one item in this list. This is an optional field",
            "required": false,
            "path_tokens": [
              "include",
              "span_kinds"
            ]
          },
          {
            "name": "Services",
            "type": "stringArray",
            "description": "Services specify the list of items to match service name against. A match occurs if the span's service name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "services"
            ]
          },
          {
            "name": "SpanNames",
            "type": "stringArray",
            "description": "SpanNames specify the list of items to match span name against. A match occurs if the span name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "span_names"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_bodies"
            ]
          },
          {
            "name": "LogSeverityTexts",
            "type": "stringArray",
            "description": "LogSeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the lowest severity that may be matched. e.g. if this is plog.SeverityNumberInfo, INFO, WARN, ERROR, and FATAL logs will match.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined controls whether logs with \"undefined\" severity matches. If this is true, entries with undefined severity will match.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames is a list of strings to match metric name against. A match occurs if metric name matches at least one item in the list. This field is optional.",
            "required": false,
            "path_tokens": [
              "exclude",
              "metric_names"
            ]
          },
          {
            "name": "Attributes",
            "type": "array",
            "description": "Attributes specifies the list of attributes to match against. All of these attributes must match for a match to occur. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "attributes"
            ]
          },
          {
            "name": "Resources",
            "type": "array",
            "description": "Resources specify the list of items to match the resources against. A match occurs if the data's resources match at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "resources"
            ]
          },
          {
            "name": "Libraries",
            "type": "array",
            "description": "Libraries specify the list of items to match the implementation library against. A match occurs if the span's implementation library matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "libraries"
            ]
          },
          {
            "name": "SpanKinds",
            "type": "stringArray",
            "description": "SpanKinds specify the list of items to match the span kind against. A match occurs if the span's span kind matches at least one item in this list. This is an optional field",
            "required": false,
            "path_tokens": [
              "exclude",
              "span_kinds"
            ]
          },
          {
            "name": "Actions",
            "type": "array",
            "description": "Actions specifies the list of attributes to act on. The set of actions are {INSERT, UPDATE, UPSERT, DELETE, HASH, EXTRACT, CONVERT}. This is a required field.",
            "required": false,
            "path_tokens": [
              "actions"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "remotetap",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Limit",
            "type": "custom",
            "description": "Limit is a float that indicates the maximum number of messages repeated through the websocket by this processor in messages per second. Defaults to 1.",
            "required": false,
            "path_tokens": [
              "limit"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "schema",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Prefetch",
            "type": "stringArray",
            "description": "PreCache is a list of schema URLs that are downloaded and cached at the start of the collector runtime in order to avoid fetching data that later on could block processing of signals. (Optional field)",
            "required": false,
            "path_tokens": [
              "prefetch"
            ]
          },
          {
            "name": "Targets",
            "type": "stringArray",
            "description": "Targets define what schema families should be translated to, allowing older and newer formats to conform to the target schema identifier.",
            "required": false,
            "path_tokens": [
              "targets"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "span",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "MatchType",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "include",
              "match_type"
            ],
            "enum_values": [
              "match_type",
              "regexp",
              "strict"
            ]
          },
          {
            "name": "Services",
            "type": "stringArray",
            "description": "Services specify the list of items to match service name against. A match occurs if the span's service name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "services"
            ]
          },
          {
            "name": "SpanNames",
            "type": "stringArray",
            "description": "SpanNames specify the list of items to match span name against. A match occurs if the span name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "span_names"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "include",
              "log_bodies"
            ]
          },
          {
            "name": "LogSeverityTexts",
            "type": "stringArray",
            "description": "LogSeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "include",
              "log_severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the lowest severity that may be matched. e.g. if this is plog.SeverityNumberInfo, INFO, WARN, ERROR, and FATAL logs will match.",
            "required": false,
            "path_tokens": [
              "include",
              "log_severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined controls whether logs with \"undefined\" severity matches. If this is true, entries with undefined severity will match.",
            "required": false,
            "path_tokens": [
              "include",
              "log_severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames is a list of strings to match metric name against. A match occurs if metric name matches at least one item in the list. This field is optional.",
            "required": false,
            "path_tokens": [
              "include",
              "metric_names"
            ]
          },
          {
            "name": "Attributes",
            "type": "array",
            "description": "Attributes specifies the list of attributes to match against. All of these attributes must match for a match to occur. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "attributes"
            ]
          },
          {
            "name": "Resources",
            "type": "array",
            "description": "Resources specify the list of items to match the resources against. A match occurs if the data's resources match at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "resources"
            ]
          },
          {
            "name": "Libraries",
            "type": "array",
            "description": "Libraries specify the list of items to match the implementation library against. A match occurs if the span's implementation library matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "include",
              "libraries"
            ]
          },
          {
            "name": "SpanKinds",
            "type": "stringArray",
            "description": "SpanKinds specify the list of items to match the span kind against. A match occurs if the span's span kind matches at least one item in this list. This is an optional field",
            "required": false,
            "path_tokens": [
              "include",
              "span_kinds"
            ]
          },
          {
            "name": "MatchType",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "exclude",
              "match_type"
            ],
            "enum_values": [
              "match_type",
              "regexp",
              "strict"
            ]
          },
          {
            "name": "Services",
            "type": "stringArray",
            "description": "Services specify the list of items to match service name against. A match occurs if the span's service name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "services"
            ]
          },
          {
            "name": "SpanNames",
            "type": "stringArray",
            "description": "SpanNames specify the list of items to match span name against. A match occurs if the span name matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "span_names"
            ]
          },
          {
            "name": "LogBodies",
            "type": "stringArray",
            "description": "LogBodies is a list of strings that the LogRecord's body field must match against.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_bodies"
            ]
          },
          {
            "name": "LogSeverityTexts",
            "type": "stringArray",
            "description": "LogSeverityTexts is a list of strings that the LogRecord's severity text field must match against.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_severity_texts"
            ]
          },
          {
            "name": "Min",
            "type": "custom",
            "description": "Min is the lowest severity that may be matched. e.g. if this is plog.SeverityNumberInfo, INFO, WARN, ERROR, and FATAL logs will match.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_severity_number",
              "min"
            ]
          },
          {
            "name": "MatchUndefined",
            "type": "bool",
            "description": "MatchUndefined controls whether logs with \"undefined\" severity matches. If this is true, entries with undefined severity will match.",
            "required": false,
            "path_tokens": [
              "exclude",
              "log_severity_number",
              "match_undefined"
            ]
          },
          {
            "name": "MetricNames",
            "type": "stringArray",
            "description": "MetricNames is a list of strings to match metric name against. A match occurs if metric name matches at least one item in the list. This field is optional.",
            "required": false,
            "path_tokens": [
              "exclude",
              "metric_names"
            ]
          },
          {
            "name": "Attributes",
            "type": "array",
            "description": "Attributes specifies the list of attributes to match against. All of these attributes must match for a match to occur. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "attributes"
            ]
          },
          {
            "name": "Resources",
            "type": "array",
            "description": "Resources specify the list of items to match the resources against. A match occurs if the data's resources match at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "resources"
            ]
          },
          {
            "name": "Libraries",
            "type": "array",
            "description": "Libraries specify the list of items to match the implementation library against. A match occurs if the span's implementation library matches at least one item in this list. This is an optional field.",
            "required": false,
            "path_tokens": [
              "exclude",
              "libraries"
            ]
          },
          {
            "name": "SpanKinds",
            "type": "stringArray",
            "description": "SpanKinds specify the list of items to match the span kind against. A match occurs if the span's span kind matches at least one item in this list. This is an optional field",
            "required": false,
            "path_tokens": [
              "exclude",
              "span_kinds"
            ]
          },
          {
            "name": "FromAttributes",
            "type": "stringArray",
            "description": "FromAttributes represents the attribute keys to pull the values from to generate the new span name. All attribute keys are required in the span to re-name a span. If any attribute is missing from the span, no re-name will occur. Note: The new span name is constructed in order of the `from_attributes` specified in the configuration. This field is required and cannot be empty.",
            "required": false,
            "path_tokens": [
              "name",
              "from_attributes"
            ]
          },
          {
            "name": "Separator",
            "type": "string",
            "description": "Separator is the string used to separate attributes values in the new span name. If no value is set, no separator is used between attribute values. Used with FromAttributes only.",
            "required": false,
            "path_tokens": [
              "name",
              "separator"
            ]
          },
          {
            "name": "Rules",
            "type": "stringArray",
            "description": "Rules is a list of rules to extract attribute values from span name. The values in the span name are replaced by extracted attribute names. Each rule in the list is a regex pattern string. Span name is checked against the regex. If it matches then all named subexpressions of the regex are extracted as attributes and are added to the span. Each subexpression name becomes an attribute name and subexpression matched portion becomes the attribute value. The matched portion in the span name is replaced by extracted attribute name. If the attributes already exist in the span then they will be overwritten. The process is repeated for all rules in the order they are specified. Each subsequent rule works on the span name that is the output after processing the previous rule.",
            "required": false,
            "path_tokens": [
              "name",
              "to_attributes",
              "rules"
            ]
          },
          {
            "name": "BreakAfterMatch",
            "type": "bool",
            "description": "BreakAfterMatch specifies if processing of rules should stop after the first match. If it is false rule processing will continue to be performed over the modified span name.",
            "required": false,
            "path_tokens": [
              "name",
              "to_attributes",
              "break_after_match"
            ]
          },
          {
            "name": "KeepOriginalName",
            "type": "bool",
            "description": "KeepOriginalName specifies if the original span name should be kept after processing the rules. If it is true the original span name will be kept, otherwise it will be replaced with the placeholders of the captured attributes.",
            "required": false,
            "path_tokens": [
              "name",
              "to_attributes",
              "keep_original_name"
            ]
          },
          {
            "name": "Code",
            "type": "string",
            "description": "Code is one of three values \"Ok\" or \"Error\" or \"Unset\". Please check: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#set-status",
            "required": false,
            "path_tokens": [
              "status",
              "code"
            ]
          },
          {
            "name": "Description",
            "type": "string",
            "description": "Description is an optional field documenting Error statuses.",
            "required": false,
            "path_tokens": [
              "status",
              "description"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "tailsampling",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "DecisionWait",
            "type": "duration",
            "description": "DecisionWait is the desired wait time from the arrival of the first span of trace until the decision about sampling it or not is evaluated.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "decision_wait"
            ],
            "format": "duration"
          },
          {
            "name": "NumTraces",
            "type": "int",
            "description": "NumTraces is the number of traces kept on memory. Typically most of the data of a trace is released after a sampling decision is taken.",
            "required": false,
            "default": 50000,
            "path_tokens": [
              "num_traces"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's NumTraces limit is reached. If true, the component will wait for space; otherwise, old traces will be evicted to make space.",
            "required": false,
            "path_tokens": [
              "block_on_overflow"
            ]
          },
          {
            "name": "ExpectedNewTracesPerSec",
            "type": "int",
            "description": "ExpectedNewTracesPerSec sets the expected number of new traces sending to the tail sampling processor per second. This helps with allocating data structures with closer to actual usage size.",
            "required": false,
            "path_tokens": [
              "expected_new_traces_per_sec"
            ]
          },
          {
            "name": "PolicyCfgs",
            "type": "array",
            "description": "PolicyCfgs sets the tail-based sampling policy which makes a sampling decision for a given trace when requested.",
            "required": false,
            "path_tokens": [
              "policies"
            ]
          },
          {
            "name": "SampledCacheSize",
            "type": "int",
            "description": "SampledCacheSize specifies the size of the cache that holds the sampled trace IDs. This value will be the maximum amount of trace IDs that the cache can hold before overwriting previous IDs. For effective use, this value should be at least an order of magnitude greater than Config.NumTraces. If left as default 0, a no-op DecisionCache will be used.",
            "required": false,
            "path_tokens": [
              "decision_cache",
              "sampled_cache_size"
            ]
          },
          {
            "name": "NonSampledCacheSize",
            "type": "int",
            "description": "NonSampledCacheSize specifies the size of the cache that holds the non-sampled trace IDs. This value will be the maximum amount of trace IDs that the cache can hold before overwriting previous IDs. For effective use, this value should be at least an order of magnitude greater than Config.NumTraces. If left as default 0, a no-op DecisionCache will be used.",
            "required": false,
            "path_tokens": [
              "decision_cache",
              "non_sampled_cache_size"
            ]
          },
          {
            "name": "Options",
            "type": "array",
            "description": "Options allows for additional configuration of the tail-based sampling processor in code.",
            "required": false,
            "path_tokens": [
              "[]",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "SampleOnFirstMatch",
            "type": "bool",
            "description": "Make decision as soon as a policy matches",
            "required": false,
            "default": false,
            "path_tokens": [
              "sample_on_first_match"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "alertmanager",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "GeneratorURL",
            "type": "string",
            "description": "",
            "required": false,
            "default": "opentelemetry-collector",
            "path_tokens": [
              "generator_url"
            ]
          },
          {
            "name": "DefaultSeverity",
            "type": "string",
            "description": "",
            "required": false,
            "default": "info",
            "path_tokens": [
              "severity"
            ]
          },
          {
            "name": "SeverityAttribute",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "severity_attribute"
            ]
          },
          {
            "name": "APIVersion",
            "type": "string",
            "description": "",
            "required": false,
            "default": "v2",
            "path_tokens": [
              "api_version"
            ]
          },
          {
            "name": "EventLabels",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "event_labels"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "alibabacloudlogservice",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "LogService's Endpoint, https://www.alibabacloud.com/help/doc-detail/29008.htm for AlibabaCloud Kubernetes(or ECS), set {region-id}-intranet.log.aliyuncs.com, eg cn-hangzhou-intranet.log.aliyuncs.com;  others set {region-id}.log.aliyuncs.com, eg cn-hangzhou.log.aliyuncs.com",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Project",
            "type": "string",
            "description": "LogService's Project Name",
            "required": false,
            "path_tokens": [
              "project"
            ]
          },
          {
            "name": "Logstore",
            "type": "string",
            "description": "LogService's Logstore Name",
            "required": false,
            "path_tokens": [
              "logstore"
            ]
          },
          {
            "name": "AccessKeyID",
            "type": "string",
            "description": "AlibabaCloud access key id",
            "required": false,
            "path_tokens": [
              "access_key_id"
            ]
          },
          {
            "name": "AccessKeySecret",
            "type": "custom",
            "description": "AlibabaCloud access key secret",
            "required": false,
            "path_tokens": [
              "access_key_secret"
            ],
            "sensitive": true
          },
          {
            "name": "ECSRamRole",
            "type": "string",
            "description": "Set AlibabaCLoud ECS ram role if you are using ACK",
            "required": false,
            "path_tokens": [
              "ecs_ram_role"
            ]
          },
          {
            "name": "TokenFilePath",
            "type": "string",
            "description": "Set Token File Path if you are using ACK",
            "required": false,
            "path_tokens": [
              "token_file_path"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awskinesis",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "default": "otlp",
            "path_tokens": [
              "encoding",
              "name"
            ]
          },
          {
            "name": "Compression",
            "type": "string",
            "description": "",
            "required": false,
            "default": "none",
            "path_tokens": [
              "encoding",
              "compression"
            ]
          },
          {
            "name": "StreamName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "aws",
              "stream_name"
            ]
          },
          {
            "name": "KinesisEndpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "aws",
              "kinesis_endpoint"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "",
            "required": false,
            "default": "us-west-2",
            "path_tokens": [
              "aws",
              "region"
            ]
          },
          {
            "name": "Role",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "aws",
              "role"
            ]
          },
          {
            "name": "MaxRecordsPerBatch",
            "type": "int",
            "description": "",
            "required": false,
            "default": "batch.MaxBatchedRecords",
            "path_tokens": [
              "max_records_per_batch"
            ]
          },
          {
            "name": "MaxRecordSize",
            "type": "int",
            "description": "",
            "required": false,
            "default": "batch.MaxRecordSize",
            "path_tokens": [
              "max_record_size"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awss3",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Region",
            "type": "string",
            "description": "",
            "required": false,
            "default": "us-east-1",
            "path_tokens": [
              "s3uploader",
              "region"
            ]
          },
          {
            "name": "S3Bucket",
            "type": "string",
            "description": "S3Bucket is the bucket name to be uploaded to.",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "s3_bucket"
            ]
          },
          {
            "name": "S3Prefix",
            "type": "string",
            "description": "S3Prefix is the key (directory) prefix to written to inside the bucket",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "s3_prefix"
            ]
          },
          {
            "name": "S3PartitionFormat",
            "type": "string",
            "description": "S3PartitionFormat is used to provide the rollup on how data is written. Uses [strftime](https://www.man7.org/linux/man-pages/man3/strftime.3.html) formatting.",
            "required": false,
            "default": "year=%Y/month=%m/day=%d/hour=%H/minute=%M",
            "path_tokens": [
              "s3uploader",
              "s3_partition_format"
            ]
          },
          {
            "name": "FilePrefix",
            "type": "string",
            "description": "FilePrefix is the filename prefix used for the file to avoid any potential collisions.",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "file_prefix"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is the URL used for communicated with S3.",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "RoleArn",
            "type": "string",
            "description": "RoleArn is the role policy to use when interacting with S3",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "role_arn"
            ]
          },
          {
            "name": "S3ForcePathStyle",
            "type": "bool",
            "description": "S3ForcePathStyle sets the value for force path style.",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "s3_force_path_style"
            ]
          },
          {
            "name": "DisableSSL",
            "type": "bool",
            "description": "DisableSLL forces communication to happen via HTTP instead of HTTPS.",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "disable_ssl"
            ]
          },
          {
            "name": "ACL",
            "type": "string",
            "description": "ACL is the canned ACL to use when uploading objects.",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "acl"
            ]
          },
          {
            "name": "StorageClass",
            "type": "string",
            "description": "",
            "required": false,
            "default": "STANDARD",
            "path_tokens": [
              "s3uploader",
              "storage_class"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "Compression sets the algorithm used to process the payload before uploading to S3. Valid values are: `gzip` or no value set.",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "RetryMode",
            "type": "string",
            "description": "RetryMode specifies the retry mode for S3 client, default is \"standard\". Valid values are: \"standard\", \"adaptive\", or \"nop\". \"nop\" will disable retry by setting the retryer to aws.NopRetryer.",
            "required": false,
            "default": "standard",
            "path_tokens": [
              "s3uploader",
              "retry_mode"
            ]
          },
          {
            "name": "RetryMaxAttempts",
            "type": "int",
            "description": "RetryMaxAttempts specifies the maximum number of attempts for S3 client. Default is 3 (SDK default).",
            "required": false,
            "default": 3,
            "path_tokens": [
              "s3uploader",
              "retry_max_attempts"
            ]
          },
          {
            "name": "RetryMaxBackoff",
            "type": "duration",
            "description": "RetryMaxBackoff specifies the maximum backoff delay for S3 client. Default is 20 seconds (SDK default).",
            "required": false,
            "default": "20s",
            "path_tokens": [
              "s3uploader",
              "retry_max_backoff"
            ],
            "format": "duration"
          },
          {
            "name": "UniqueKeyFuncName",
            "type": "string",
            "description": "UniqueKeyFuncName specifies a function to use for generating a unique string as part of the S3 key. If unspecified, a default function will be used that generates a random string. Valid values are: \"uuidv7\"",
            "required": false,
            "path_tokens": [
              "s3uploader",
              "unique_key_func_name"
            ]
          },
          {
            "name": "MarshalerName",
            "type": "enum",
            "description": "",
            "required": false,
            "default": "otlp_json",
            "path_tokens": [
              "marshaler"
            ],
            "enum_values": [
              "body",
              "otlp_json",
              "otlp_proto",
              "sumo_ic"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "encoding",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "encoding",
              "[]"
            ]
          },
          {
            "name": "EncodingFileExtension",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "encoding_file_extension"
            ]
          },
          {
            "name": "S3Bucket",
            "type": "string",
            "description": "S3Bucket indicates the mapping of the bucket name used for uploading to a specific resource attribute value.",
            "required": false,
            "path_tokens": [
              "resource_attrs_to_s3",
              "s3_bucket"
            ]
          },
          {
            "name": "S3Prefix",
            "type": "string",
            "description": "S3Prefix indicates the mapping of the key (directory) prefix used for writing into the bucket to a specific resource attribute value.",
            "required": false,
            "path_tokens": [
              "resource_attrs_to_s3",
              "s3_prefix"
            ]
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "anyOf",
          "keys": [
            [
              "s3uploader",
              "endpoint"
            ],
            [
              "s3uploader",
              "s3_bucket"
            ]
          ]
        }
      ]
    },
    {
      "name": "json",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "URL",
            "type": "string",
            "description": "URL is the endpoint to the azure storage account. This is only required until there is an azure auth extension in the future.",
            "required": true,
            "path_tokens": [
              "url"
            ]
          },
          {
            "name": "Logs",
            "type": "string",
            "description": "",
            "required": false,
            "default": "logs",
            "path_tokens": [
              "container",
              "logs"
            ]
          },
          {
            "name": "Metrics",
            "type": "string",
            "description": "",
            "required": false,
            "default": "metrics",
            "path_tokens": [
              "container",
              "metrics"
            ]
          },
          {
            "name": "Traces",
            "type": "string",
            "description": "",
            "required": false,
            "default": "traces",
            "path_tokens": [
              "container",
              "traces"
            ]
          },
          {
            "name": "Type",
            "type": "enum",
            "description": "Type is the authentication type. supported values are connection_string, service_principal, system_managed_identity and user_managed_identity",
            "required": false,
            "default": "connection_string",
            "path_tokens": [
              "auth",
              "type"
            ],
            "enum_values": [
              "connection_string",
              "service_principal",
              "system_managed_identity",
              "user_managed_identity",
              "workload_identity"
            ]
          },
          {
            "name": "TenantID",
            "type": "string",
            "description": "TenantID is the tenand id for the AAD App. It's only needed when type is service principal.",
            "required": false,
            "path_tokens": [
              "auth",
              "tenant_id"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "ClientID is the AAD Application client id. It's needed when type is service principal or user managed identity",
            "required": true,
            "path_tokens": [
              "auth",
              "client_id"
            ]
          },
          {
            "name": "ClientSecret",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "client_secret"
            ],
            "sensitive": true
          },
          {
            "name": "ConnectionString",
            "type": "string",
            "description": "ConnectionString to the endpoint.",
            "required": true,
            "path_tokens": [
              "auth",
              "connection_string"
            ]
          },
          {
            "name": "FederatedTokenFile",
            "type": "string",
            "description": "FederatedTokenFile is the path to the file containing the federated token. It's needed when type is workload_identity.",
            "required": false,
            "path_tokens": [
              "auth",
              "federated_token_file"
            ],
            "sensitive": true
          },
          {
            "name": "MetricsFormat",
            "type": "string",
            "description": "",
            "required": false,
            "default": "2006/01/02/metrics_15_04_05.json",
            "path_tokens": [
              "blob_name_format",
              "metrics_format"
            ]
          },
          {
            "name": "LogsFormat",
            "type": "string",
            "description": "",
            "required": false,
            "default": "2006/01/02/logs_15_04_05.json",
            "path_tokens": [
              "blob_name_format",
              "logs_format"
            ]
          },
          {
            "name": "TracesFormat",
            "type": "string",
            "description": "",
            "required": false,
            "default": "2006/01/02/traces_15_04_05.json",
            "path_tokens": [
              "blob_name_format",
              "traces_format"
            ]
          },
          {
            "name": "SerialNumRange",
            "type": "int",
            "description": "",
            "required": false,
            "default": 10000,
            "path_tokens": [
              "blob_name_format",
              "serial_num_range"
            ]
          },
          {
            "name": "SerialNumBeforeExtension",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "blob_name_format",
              "serial_num_before_extension"
            ]
          },
          {
            "name": "Params",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "blob_name_format",
              "params"
            ]
          },
          {
            "name": "FormatType",
            "type": "string",
            "description": "FormatType is the format of encoded telemetry data. Supported values are json and proto.",
            "required": false,
            "default": "json",
            "path_tokens": [
              "format"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "append_blob",
              "enabled"
            ]
          },
          {
            "name": "Separator",
            "type": "string",
            "description": "",
            "required": false,
            "default": "\\n",
            "path_tokens": [
              "append_blob",
              "separator"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "encodings",
              "logs",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "encodings",
              "logs",
              "[]"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "encodings",
              "metrics",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "encodings",
              "metrics",
              "[]"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "encodings",
              "traces",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "encodings",
              "traces",
              "[]"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "azuremonitor",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "ConnectionString",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection_string"
            ],
            "sensitive": true
          },
          {
            "name": "InstrumentationKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "instrumentation_key"
            ],
            "sensitive": true
          },
          {
            "name": "MaxBatchSize",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1024,
            "path_tokens": [
              "maxbatchsize"
            ]
          },
          {
            "name": "MaxBatchInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "maxbatchinterval"
            ],
            "format": "duration"
          },
          {
            "name": "SpanEventsEnabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "spaneventsenabled"
            ]
          },
          {
            "name": "ShutdownTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "1s",
            "path_tokens": [
              "shutdown_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CustomEventsEnabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "custom_events_enabled"
            ]
          },
          {
            "name": "ExceptionEventsEnabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "exception_events_enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "transform",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ErrorMode",
            "type": "enum",
            "description": "ErrorMode determines how the processor reacts to errors that occur while processing a statement. Valid values are `ignore` and `propagate`. `ignore` means the processor ignores errors returned by statements and continues on to the next statement. This is the recommended mode. `propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector. The default value is `propagate`.",
            "required": false,
            "default": "ottl.PropagateError",
            "path_tokens": [
              "error_mode"
            ],
            "enum_values": [
              "ignore",
              "propagate",
              "silent"
            ]
          },
          {
            "name": "TraceStatements",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "trace_statements"
            ]
          },
          {
            "name": "MetricStatements",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "metric_statements"
            ]
          },
          {
            "name": "LogStatements",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "log_statements"
            ]
          },
          {
            "name": "ProfileStatements",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "profile_statements"
            ]
          },
          {
            "name": "FlattenData",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "flatten_data"
            ]
          },
          {
            "name": "core",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "core"
            ]
          },
          {
            "name": "development",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "development"
            ]
          },
          {
            "name": "addCaller",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "add_caller"
            ]
          },
          {
            "name": "onPanic",
            "type": "custom",
            "description": "default is WriteThenPanic",
            "required": false,
            "path_tokens": [
              "logger",
              "on_panic"
            ]
          },
          {
            "name": "onFatal",
            "type": "custom",
            "description": "default is WriteThenFatal",
            "required": false,
            "path_tokens": [
              "logger",
              "on_fatal"
            ]
          },
          {
            "name": "name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "name"
            ]
          },
          {
            "name": "errorOutput",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "error_output"
            ]
          },
          {
            "name": "addStack",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "add_stack"
            ]
          },
          {
            "name": "callerSkip",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "caller_skip"
            ]
          },
          {
            "name": "clock",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "clock"
            ]
          },
          {
            "name": "dataPointFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.dataPointFunctions",
            "path_tokens": [
              "data_point_functions"
            ]
          },
          {
            "name": "logFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.logFunctions",
            "path_tokens": [
              "log_functions"
            ]
          },
          {
            "name": "metricFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.metricFunctions",
            "path_tokens": [
              "metric_functions"
            ]
          },
          {
            "name": "spanEventFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.spanEventFunctions",
            "path_tokens": [
              "span_event_functions"
            ]
          },
          {
            "name": "spanFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.spanFunctions",
            "path_tokens": [
              "span_functions"
            ]
          },
          {
            "name": "profileFunctions",
            "type": "stringMap",
            "description": "",
            "required": false,
            "default": "f.profileFunctions",
            "path_tokens": [
              "profile_functions"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "managed",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "ClusterURI",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "cluster_uri"
            ]
          },
          {
            "name": "ApplicationID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "application_id"
            ]
          },
          {
            "name": "ApplicationKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "application_key"
            ],
            "sensitive": true
          },
          {
            "name": "TenantID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tenant_id"
            ]
          },
          {
            "name": "ManagedIdentityID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "managed_identity_id"
            ]
          },
          {
            "name": "UseAzureAuth",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "use_azure_auth"
            ]
          },
          {
            "name": "Database",
            "type": "string",
            "description": "",
            "required": false,
            "default": "oteldb",
            "path_tokens": [
              "db_name"
            ]
          },
          {
            "name": "MetricTable",
            "type": "string",
            "description": "",
            "required": false,
            "default": "OTELMetrics",
            "path_tokens": [
              "metrics_table_name"
            ]
          },
          {
            "name": "LogTable",
            "type": "string",
            "description": "",
            "required": false,
            "default": "OTELLogs",
            "path_tokens": [
              "logs_table_name"
            ]
          },
          {
            "name": "TraceTable",
            "type": "string",
            "description": "",
            "required": false,
            "default": "OTELTraces",
            "path_tokens": [
              "traces_table_name"
            ]
          },
          {
            "name": "MetricTableMapping",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics_table_json_mapping"
            ]
          },
          {
            "name": "LogTableMapping",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs_table_json_mapping"
            ]
          },
          {
            "name": "TraceTableMapping",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces_table_json_mapping"
            ]
          },
          {
            "name": "IngestionType",
            "type": "string",
            "description": "",
            "required": false,
            "default": "queued",
            "path_tokens": [
              "ingestion_type"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "cassandra",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "UserName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "DSN",
            "type": "string",
            "description": "",
            "required": false,
            "default": "127.0.0.1",
            "path_tokens": [
              "dsn"
            ]
          },
          {
            "name": "Keyspace",
            "type": "string",
            "description": "",
            "required": false,
            "default": "otel",
            "path_tokens": [
              "keyspace"
            ]
          },
          {
            "name": "TraceTable",
            "type": "string",
            "description": "",
            "required": false,
            "default": "otel_spans",
            "path_tokens": [
              "trace_table"
            ]
          },
          {
            "name": "LogsTable",
            "type": "string",
            "description": "",
            "required": false,
            "default": "otel_logs",
            "path_tokens": [
              "logs_table"
            ]
          },
          {
            "name": "Algorithm",
            "type": "string",
            "description": "",
            "required": false,
            "default": "LZ4Compressor",
            "path_tokens": [
              "compression",
              "algorithm"
            ]
          },
          {
            "name": "Class",
            "type": "string",
            "description": "",
            "required": false,
            "default": "SimpleStrategy",
            "path_tokens": [
              "replication",
              "class"
            ]
          },
          {
            "name": "ReplicationFactor",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1,
            "path_tokens": [
              "replication",
              "replication_factor"
            ]
          },
          {
            "name": "Port",
            "type": "int",
            "description": "",
            "required": false,
            "default": 9042,
            "path_tokens": [
              "port"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "bmchelix",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "APIKey",
            "type": "custom",
            "description": "",
            "required": true,
            "path_tokens": [
              "api_key"
            ],
            "sensitive": true
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "coralogix",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Domain",
            "type": "string",
            "description": "Coralogix domain",
            "required": false,
            "path_tokens": [
              "domain"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "domain_settings",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "traces",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "traces",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "traces",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "traces",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "traces",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "traces",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "traces",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "traces",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "traces",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "traces",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "metrics",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "metrics",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "metrics",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "metrics",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "metrics",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "metrics",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "metrics",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "metrics",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "metrics",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "metrics",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "logs",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "logs",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "logs",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "logs",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "logs",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "logs",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "logs",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "logs",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "logs",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "logs",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "profiles",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "profiles",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "profiles",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "profiles",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "profiles",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "profiles",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "profiles",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "profiles",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "profiles",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "profiles",
              "middlewares"
            ]
          },
          {
            "name": "PrivateKey",
            "type": "custom",
            "description": "Your Coralogix private key (sensitive) for authentication",
            "required": false,
            "default": "",
            "path_tokens": [
              "private_key"
            ],
            "sensitive": true
          },
          {
            "name": "AppNameAttributes",
            "type": "stringArray",
            "description": "Ordered list of Resource attributes that are used for Coralogix AppName and SubSystem values. The first non-empty Resource attribute is used. Example: AppNameAttributes: [\"k8s.namespace.name\", \"service.namespace\"] Example: SubSystemAttributes: [\"k8s.deployment.name\", \"k8s.daemonset.name\", \"service.name\"]",
            "required": false,
            "path_tokens": [
              "application_name_attributes"
            ]
          },
          {
            "name": "SubSystemAttributes",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "subsystem_name_attributes"
            ]
          },
          {
            "name": "AppName",
            "type": "string",
            "description": "Default Coralogix application and subsystem name values.",
            "required": false,
            "default": "",
            "path_tokens": [
              "application_name"
            ]
          },
          {
            "name": "SubSystem",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "subsystem_name"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "rate_limiter",
              "enabled"
            ]
          },
          {
            "name": "Threshold",
            "type": "int",
            "description": "",
            "required": false,
            "default": 10,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "rate_limiter",
              "threshold"
            ]
          },
          {
            "name": "Duration",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "time.Minute",
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "rate_limiter",
              "duration"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "dataset",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "DatasetURL",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "dataset_url"
            ]
          },
          {
            "name": "APIKey",
            "type": "custom",
            "description": "",
            "required": true,
            "path_tokens": [
              "api_key"
            ],
            "sensitive": true
          },
          {
            "name": "Debug",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "debug"
            ]
          },
          {
            "name": "MaxLifetime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "max_lifetime"
            ],
            "format": "duration"
          },
          {
            "name": "PurgeOlderThan",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "purge_older_than"
            ],
            "format": "duration"
          },
          {
            "name": "GroupBy",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "group_by"
            ]
          },
          {
            "name": "RetryInitialInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "retry_initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RetryMaxInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "retry_max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RetryMaxElapsedTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "retry_max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "RetryShutdownTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "retry_shutdown_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MaxParallelOutgoing",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "buffer",
              "max_parallel_outgoing"
            ]
          },
          {
            "name": "ExportSeparator",
            "type": "string",
            "description": "ExportSeparator is separator used when flattening exported attributes Default value: .",
            "required": false,
            "path_tokens": [
              "traces",
              "export_separator"
            ]
          },
          {
            "name": "ExportDistinguishingSuffix",
            "type": "string",
            "description": "ExportDistinguishingSuffix is suffix used to be appended to the end of attribute name in case of collision Default value: _",
            "required": false,
            "path_tokens": [
              "traces",
              "export_distinguishing_suffix"
            ]
          },
          {
            "name": "ExportResourceInfo",
            "type": "bool",
            "description": "ExportResourceInfo is optional flag to signal that the resource info is being exported to DataSet while exporting Logs. This is especially useful when reducing DataSet billable log volume. Default value: false",
            "required": false,
            "path_tokens": [
              "logs",
              "export_resource_info_on_event"
            ]
          },
          {
            "name": "ExportResourcePrefix",
            "type": "string",
            "description": "ExportResourcePrefix is prefix for the resource attributes when they are exported (see ExportResourceInfo). Default value: resource.attributes.",
            "required": false,
            "path_tokens": [
              "logs",
              "export_resource_prefix"
            ]
          },
          {
            "name": "ExportScopeInfo",
            "type": "bool",
            "description": "ExportScopeInfo is an optional flag that signals if scope info should be exported (when available) with each event. If scope information is not utilized, it makes sense to disable exporting it since it will result in increased billable log volume. Default value: true",
            "required": false,
            "path_tokens": [
              "logs",
              "export_scope_info_on_event"
            ]
          },
          {
            "name": "ExportScopePrefix",
            "type": "string",
            "description": "ExportScopePrefix is prefix for the scope attributes when they are exported (see ExportScopeInfo). Default value: scope.attributes.",
            "required": false,
            "path_tokens": [
              "logs",
              "export_scope_prefix"
            ]
          },
          {
            "name": "DecomposeComplexMessageField",
            "type": "bool",
            "description": "DecomposeComplexMessageField is an optional flag to signal that message / body of complex types (e.g. a map) should be decomposed / deconstructed into multiple fields. This is usually done outside of the main DataSet integration on the client side (e.g. as part of the attribute processor or similar) or on the server side (DataSet server side JSON parser for message field) and that's why this functionality is disabled by default.",
            "required": false,
            "path_tokens": [
              "logs",
              "decompose_complex_message_field"
            ]
          },
          {
            "name": "DecomposedComplexMessagePrefix",
            "type": "string",
            "description": "DecomposedComplexMessagePrefix is prefix for the decomposed complex message (see DecomposeComplexMessageField). Default value: body.map.",
            "required": false,
            "path_tokens": [
              "logs",
              "decomposed_complex_message_prefix"
            ]
          },
          {
            "name": "ExportSeparator",
            "type": "string",
            "description": "ExportSeparator is separator used when flattening exported attributes Default value: .",
            "required": false,
            "path_tokens": [
              "logs",
              "export_separator"
            ]
          },
          {
            "name": "ExportDistinguishingSuffix",
            "type": "string",
            "description": "ExportDistinguishingSuffix is suffix used to be appended to the end of attribute name in case of collision Default value: _",
            "required": false,
            "path_tokens": [
              "logs",
              "export_distinguishing_suffix"
            ]
          },
          {
            "name": "UseHostName",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "server_host",
              "use_hostname"
            ]
          },
          {
            "name": "ServerHost",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server_host",
              "server_host"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout",
              "timeout"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awscloudwatchlogs",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "LogGroupName",
            "type": "string",
            "description": "LogGroupName is the name of CloudWatch log group which defines group of log streams that share the same retention, monitoring, and access control settings.",
            "required": true,
            "path_tokens": [
              "log_group_name"
            ]
          },
          {
            "name": "LogStreamName",
            "type": "string",
            "description": "LogStreamName is the name of CloudWatch log stream which is a sequence of log events that share the same source.",
            "required": true,
            "path_tokens": [
              "log_stream_name"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is the CloudWatch Logs service endpoint which the requests are forwarded to. https://docs.aws.amazon.com/general/latest/gr/cwl_region.html e.g. logs.us-east-1.amazonaws.com Optional.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "LogRetention",
            "type": "int",
            "description": "LogRetention is the option to set the log retention policy for the CloudWatch Log Group. Defaults to Never Expire if not specified or set to 0 Possible values are 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2192, 2557, 2922, 3288, or 3653",
            "required": false,
            "path_tokens": [
              "log_retention"
            ]
          },
          {
            "name": "Tags",
            "type": "stringMap",
            "description": "Tags is the option to set tags for the CloudWatch Log Group.  If specified, please add at least 1 and at most 50 tags.  Input is a string to string map like so: { 'key': 'value' } Keys must be between 1-128 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$ Values must be between 1-256 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "required": false,
            "path_tokens": [
              "tags"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "core",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "core"
            ]
          },
          {
            "name": "development",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "development"
            ]
          },
          {
            "name": "addCaller",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "add_caller"
            ]
          },
          {
            "name": "onPanic",
            "type": "custom",
            "description": "default is WriteThenPanic",
            "required": false,
            "path_tokens": [
              "logger",
              "on_panic"
            ]
          },
          {
            "name": "onFatal",
            "type": "custom",
            "description": "default is WriteThenFatal",
            "required": false,
            "path_tokens": [
              "logger",
              "on_fatal"
            ]
          },
          {
            "name": "name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "name"
            ]
          },
          {
            "name": "errorOutput",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "error_output"
            ]
          },
          {
            "name": "addStack",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "add_stack"
            ]
          },
          {
            "name": "callerSkip",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "caller_skip"
            ]
          },
          {
            "name": "clock",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "clock"
            ]
          },
          {
            "name": "NumberOfWorkers",
            "type": "int",
            "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents.",
            "required": false,
            "path_tokens": [
              "num_workers"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "X-Ray service endpoint to which the collector sends segment documents.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "RequestTimeoutSeconds",
            "type": "int",
            "description": "Number of seconds before timing out a request.",
            "required": false,
            "path_tokens": [
              "request_timeout_seconds"
            ]
          },
          {
            "name": "MaxRetries",
            "type": "int",
            "description": "Maximum number of retries before abandoning an attempt to post data.",
            "required": false,
            "path_tokens": [
              "max_retries"
            ]
          },
          {
            "name": "NoVerifySSL",
            "type": "bool",
            "description": "Enable or disable TLS certificate verification.",
            "required": false,
            "path_tokens": [
              "no_verify_ssl"
            ]
          },
          {
            "name": "ProxyAddress",
            "type": "string",
            "description": "Upload segments to AWS X-Ray through a proxy.",
            "required": false,
            "path_tokens": [
              "proxy_address"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Send segments to AWS X-Ray service in a specific region.",
            "required": false,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "LocalMode",
            "type": "bool",
            "description": "Local mode to skip EC2 instance metadata check.",
            "required": false,
            "path_tokens": [
              "local_mode"
            ]
          },
          {
            "name": "ResourceARN",
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the AWS resource running the collector.",
            "required": false,
            "path_tokens": [
              "resource_arn"
            ]
          },
          {
            "name": "RoleARN",
            "type": "string",
            "description": "IAM role to upload segments to a different account.",
            "required": false,
            "path_tokens": [
              "role_arn"
            ]
          },
          {
            "name": "ExternalID",
            "type": "string",
            "description": "External ID to verify third party role assumption",
            "required": false,
            "path_tokens": [
              "external_id"
            ]
          },
          {
            "name": "RawLog",
            "type": "bool",
            "description": "Export raw log string instead of log wrapper Required for emf logs",
            "required": false,
            "path_tokens": [
              "raw_log"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awsxray",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "NumberOfWorkers",
            "type": "int",
            "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents.",
            "required": false,
            "path_tokens": [
              "num_workers"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "X-Ray service endpoint to which the collector sends segment documents.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "RequestTimeoutSeconds",
            "type": "int",
            "description": "Number of seconds before timing out a request.",
            "required": false,
            "path_tokens": [
              "request_timeout_seconds"
            ]
          },
          {
            "name": "MaxRetries",
            "type": "int",
            "description": "Maximum number of retries before abandoning an attempt to post data.",
            "required": false,
            "path_tokens": [
              "max_retries"
            ]
          },
          {
            "name": "NoVerifySSL",
            "type": "bool",
            "description": "Enable or disable TLS certificate verification.",
            "required": false,
            "path_tokens": [
              "no_verify_ssl"
            ]
          },
          {
            "name": "ProxyAddress",
            "type": "string",
            "description": "Upload segments to AWS X-Ray through a proxy.",
            "required": false,
            "path_tokens": [
              "proxy_address"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Send segments to AWS X-Ray service in a specific region.",
            "required": false,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "LocalMode",
            "type": "bool",
            "description": "Local mode to skip EC2 instance metadata check.",
            "required": false,
            "path_tokens": [
              "local_mode"
            ]
          },
          {
            "name": "ResourceARN",
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the AWS resource running the collector.",
            "required": false,
            "path_tokens": [
              "resource_arn"
            ]
          },
          {
            "name": "RoleARN",
            "type": "string",
            "description": "IAM role to upload segments to a different account.",
            "required": false,
            "path_tokens": [
              "role_arn"
            ]
          },
          {
            "name": "ExternalID",
            "type": "string",
            "description": "External ID to verify third party role assumption",
            "required": false,
            "path_tokens": [
              "external_id"
            ]
          },
          {
            "name": "IndexedAttributes",
            "type": "stringArray",
            "description": "By default, OpenTelemetry attributes are converted to X-Ray metadata, which are not indexed. Specify a list of attribute names to be converted to X-Ray annotations instead, which will be indexed. See annotation vs. metadata: https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-annotations",
            "required": false,
            "path_tokens": [
              "indexed_attributes"
            ]
          },
          {
            "name": "IndexAllAttributes",
            "type": "bool",
            "description": "Set to true to convert all OpenTelemetry attributes to X-Ray annotation (indexed) ignoring the IndexedAttributes option. Default value: false",
            "required": false,
            "path_tokens": [
              "index_all_attributes"
            ]
          },
          {
            "name": "LogGroupNames",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "aws_log_groups"
            ]
          },
          {
            "name": "skipTimestampValidation",
            "type": "bool",
            "description": "skipTimestampValidation if enabled, will skip timestamp validation logic on the trace ID",
            "required": false,
            "path_tokens": [
              "skip_timestamp_validation"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "carbon",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. The address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle TCP connections the client can keep open. Default value is 100. If `sending_queue` is enabled, it is recommended to use same value as `sending_queue::num_consumers`.",
            "required": false,
            "default": 100,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`.",
            "required": false,
            "path_tokens": [
              "resource_to_telemetry_conversion",
              "enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "doris",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Logs",
            "type": "string",
            "description": "Logs is the table name for logs.",
            "required": false,
            "default": "otel_logs",
            "path_tokens": [
              "table",
              "logs"
            ]
          },
          {
            "name": "Traces",
            "type": "string",
            "description": "Traces is the table name for traces.",
            "required": false,
            "default": "otel_traces",
            "path_tokens": [
              "table",
              "traces"
            ]
          },
          {
            "name": "Metrics",
            "type": "string",
            "description": "Metrics is the table name for metrics.",
            "required": false,
            "default": "otel_metrics",
            "path_tokens": [
              "table",
              "metrics"
            ]
          },
          {
            "name": "Database",
            "type": "string",
            "description": "Database is the database name.",
            "required": false,
            "default": "otel",
            "path_tokens": [
              "database"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username is the authentication username.",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "Password is the authentication password.",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "CreateSchema",
            "type": "bool",
            "description": "CreateSchema is whether databases and tables are created automatically.",
            "required": false,
            "default": true,
            "path_tokens": [
              "create_schema"
            ]
          },
          {
            "name": "MySQLEndpoint",
            "type": "string",
            "description": "MySQLEndpoint is the mysql protocol address to create the schema; ignored if create_schema is false.",
            "required": false,
            "path_tokens": [
              "mysql_endpoint"
            ]
          },
          {
            "name": "HistoryDays",
            "type": "int",
            "description": "Data older than these days will be deleted; ignored if create_schema is false. If set to 0, historical data will not be deleted.",
            "required": false,
            "default": 0,
            "validation": {
              "max": "0",
              "min": "0"
            },
            "path_tokens": [
              "history_days"
            ]
          },
          {
            "name": "CreateHistoryDays",
            "type": "int",
            "description": "The number of days in the history partition that was created when the table was created; ignored if create_schema is false. If history_days is not 0, create_history_days needs to be less than or equal to history_days.",
            "required": false,
            "default": 0,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "create_history_days"
            ]
          },
          {
            "name": "ReplicationNum",
            "type": "int",
            "description": "ReplicationNum is the number of replicas of the table; ignored if create_schema is false.",
            "required": false,
            "default": 1,
            "validation": {
              "min": "1"
            },
            "path_tokens": [
              "replication_num"
            ]
          },
          {
            "name": "TimeZone",
            "type": "string",
            "description": "Timezone is the timezone of the doris.",
            "required": false,
            "path_tokens": [
              "timezone"
            ]
          },
          {
            "name": "LogResponse",
            "type": "bool",
            "description": "LogResponse is whether to log the response of doris stream load.",
            "required": false,
            "default": false,
            "path_tokens": [
              "log_response"
            ]
          },
          {
            "name": "LabelPrefix",
            "type": "string",
            "description": "LabelPrefix is the prefix of the label in doris stream load.",
            "required": false,
            "default": "open_telemetry",
            "path_tokens": [
              "label_prefix"
            ]
          },
          {
            "name": "LogProgressInterval",
            "type": "int",
            "description": "ProgressInterval is the interval of the progress reporter.",
            "required": false,
            "default": 10,
            "path_tokens": [
              "log_progress_interval"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "[]",
              "name",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "zone",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "[]",
              "zone",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "tx",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "[]",
              "tx",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "extend",
            "type": "array",
            "description": "The tzdata information can be followed by a string that describes how to handle DST transitions not recorded in zoneTrans. The format is the TZ environment variable without a colon; see https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html. Example string, for America/Los_Angeles: PST8PDT,M3.2.0,M11.1.0",
            "required": false,
            "path_tokens": [
              "[]",
              "extend",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "cacheStart",
            "type": "array",
            "description": "Most lookups will be for the current time. To avoid the binary search through tx, keep a static one-element cache that gives the correct zone for the time when the Location was created. if cacheStart \u003c= t \u003c cacheEnd, lookup can return cacheZone. The units for cacheStart and cacheEnd are seconds since January 1, 1970 UTC, to match the argument to lookup.",
            "required": false,
            "path_tokens": [
              "[]",
              "cache_start",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "cacheEnd",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "[]",
              "cache_end",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "name",
            "type": "array",
            "description": "abbreviated name, \"CET\"",
            "required": false,
            "path_tokens": [
              "[]",
              "cache_zone",
              "name",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "offset",
            "type": "array",
            "description": "seconds east of UTC",
            "required": false,
            "path_tokens": [
              "[]",
              "cache_zone",
              "offset",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "isDST",
            "type": "array",
            "description": "is this zone Daylight Savings Time?",
            "required": false,
            "path_tokens": [
              "[]",
              "cache_zone",
              "is_d_s_t",
              "[]"
            ],
            "item_type": "object"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awsemf",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "NumberOfWorkers",
            "type": "int",
            "description": "Maximum number of concurrent calls to AWS X-Ray to upload documents.",
            "required": false,
            "path_tokens": [
              "num_workers"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "X-Ray service endpoint to which the collector sends segment documents.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "RequestTimeoutSeconds",
            "type": "int",
            "description": "Number of seconds before timing out a request.",
            "required": false,
            "path_tokens": [
              "request_timeout_seconds"
            ]
          },
          {
            "name": "MaxRetries",
            "type": "int",
            "description": "Maximum number of retries before abandoning an attempt to post data.",
            "required": false,
            "path_tokens": [
              "max_retries"
            ]
          },
          {
            "name": "NoVerifySSL",
            "type": "bool",
            "description": "Enable or disable TLS certificate verification.",
            "required": false,
            "path_tokens": [
              "no_verify_ssl"
            ]
          },
          {
            "name": "ProxyAddress",
            "type": "string",
            "description": "Upload segments to AWS X-Ray through a proxy.",
            "required": false,
            "path_tokens": [
              "proxy_address"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Send segments to AWS X-Ray service in a specific region.",
            "required": false,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "LocalMode",
            "type": "bool",
            "description": "Local mode to skip EC2 instance metadata check.",
            "required": false,
            "path_tokens": [
              "local_mode"
            ]
          },
          {
            "name": "ResourceARN",
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the AWS resource running the collector.",
            "required": false,
            "path_tokens": [
              "resource_arn"
            ]
          },
          {
            "name": "RoleARN",
            "type": "string",
            "description": "IAM role to upload segments to a different account.",
            "required": false,
            "path_tokens": [
              "role_arn"
            ]
          },
          {
            "name": "ExternalID",
            "type": "string",
            "description": "External ID to verify third party role assumption",
            "required": false,
            "path_tokens": [
              "external_id"
            ]
          },
          {
            "name": "LogGroupName",
            "type": "string",
            "description": "LogGroupName is the name of CloudWatch log group which defines group of log streams that share the same retention, monitoring, and access control settings.",
            "required": false,
            "default": "",
            "path_tokens": [
              "log_group_name"
            ]
          },
          {
            "name": "LogStreamName",
            "type": "string",
            "description": "LogStreamName is the name of CloudWatch log stream which is a sequence of log events that share the same source.",
            "required": false,
            "default": "",
            "path_tokens": [
              "log_stream_name"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "Namespace is a container for CloudWatch metrics. Metrics in different namespaces are isolated from each other.",
            "required": false,
            "default": "",
            "path_tokens": [
              "namespace"
            ]
          },
          {
            "name": "RetainInitialValueOfDeltaMetric",
            "type": "bool",
            "description": "RetainInitialValueOfDeltaMetric is the flag to signal that the initial value of a metric is a valid datapoint. The default behavior is that the first value occurrence of a metric is set as the baseline for the calculation of the delta to the next occurrence. With this flag set to true the exporter will instead use this first value as the initial delta value. This is especially useful when handling low frequency metrics.",
            "required": false,
            "default": false,
            "path_tokens": [
              "retain_initial_value_of_delta_metric"
            ]
          },
          {
            "name": "DimensionRollupOption",
            "type": "string",
            "description": "DimensionRollupOption is the option for metrics dimension rollup. Three options are available, default option is \"ZeroAndSingleDimensionRollup\". \"ZeroAndSingleDimensionRollup\" - Enable both zero dimension rollup and single dimension rollup \"SingleDimensionRollupOnly\" - Enable single dimension rollup \"NoDimensionRollup\" - No dimension rollup (only keep original metrics which contain all dimensions)",
            "required": false,
            "path_tokens": [
              "dimension_rollup_option"
            ]
          },
          {
            "name": "LogRetention",
            "type": "int",
            "description": "LogRetention is the option to set the log retention policy for the CloudWatch Log Group. Defaults to Never Expire if not specified or set to 0 Possible values are 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2192, 2557, 2922, 3288, or 3653",
            "required": false,
            "path_tokens": [
              "log_retention"
            ]
          },
          {
            "name": "Tags",
            "type": "stringMap",
            "description": "Tags is the option to set tags for the CloudWatch Log Group.  If specified, please add at most 50 tags.  Input is a string to string map like so: { 'key': 'value' } Keys must be between 1-128 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$ Values must be between 1-256 characters and follow the regex pattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
            "required": false,
            "path_tokens": [
              "tags"
            ]
          },
          {
            "name": "ParseJSONEncodedAttributeValues",
            "type": "stringArray",
            "description": "ParseJSONEncodedAttributeValues is an array of attribute keys whose corresponding values are JSON-encoded as strings. Those strings will be decoded to its original json structure.",
            "required": false,
            "path_tokens": [
              "parse_json_encoded_attr_values"
            ]
          },
          {
            "name": "MetricDeclarations",
            "type": "array",
            "description": "MetricDeclarations is the list of rules to be used to set dimensions for exported metrics.",
            "required": false,
            "path_tokens": [
              "metric_declarations"
            ]
          },
          {
            "name": "MetricDescriptors",
            "type": "array",
            "description": "MetricDescriptors is the list of override metric descriptors that are sent to the CloudWatch",
            "required": false,
            "path_tokens": [
              "metric_descriptors"
            ]
          },
          {
            "name": "OutputDestination",
            "type": "string",
            "description": "OutputDestination is an option to specify the EMFExporter output. Default option is \"cloudwatch\" \"cloudwatch\" - direct the exporter output to CloudWatch backend \"stdout\" - direct the exporter output to stdout TODO: we can support directing output to a file (in the future) while customer specifies a file path here.",
            "required": false,
            "default": "cloudwatch",
            "path_tokens": [
              "output_destination"
            ]
          },
          {
            "name": "EKSFargateContainerInsightsEnabled",
            "type": "bool",
            "description": "EKSFargateContainerInsightsEnabled is an option to reformat certin metric labels so that they take the form of a high level object The end result will make the labels look like those coming out of ECS and be more easily injected into cloudwatch Note that at the moment in order to use this feature the value \"kubernetes\" must also be added to the ParseJSONEncodedAttributeValues array in order to be used",
            "required": false,
            "path_tokens": [
              "eks_fargate_container_insights_enabled"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`.",
            "required": false,
            "path_tokens": [
              "resource_to_telemetry_conversion",
              "enabled"
            ]
          },
          {
            "name": "DetailedMetrics",
            "type": "bool",
            "description": "DetailedMetrics is an option for retaining detailed datapoint values in exported metrics (e.g instead of exporting a quantile as a statistical value, preserve the quantile's population)",
            "required": false,
            "path_tokens": [
              "detailed_metrics"
            ]
          },
          {
            "name": "Version",
            "type": "string",
            "description": "Version is an option for sending metrics to CloudWatchLogs with Embedded Metric Format in selected version  (with \"_aws\") https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format_Specification.html#CloudWatch_Embedded_Metric_Format_Specification_structure Otherwise, sending metrics as Embedded Metric Format version 0 (without \"_aws\")",
            "required": false,
            "default": "1",
            "path_tokens": [
              "version"
            ]
          },
          {
            "name": "core",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "core"
            ]
          },
          {
            "name": "development",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "development"
            ]
          },
          {
            "name": "addCaller",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "add_caller"
            ]
          },
          {
            "name": "onPanic",
            "type": "custom",
            "description": "default is WriteThenPanic",
            "required": false,
            "path_tokens": [
              "logger",
              "on_panic"
            ]
          },
          {
            "name": "onFatal",
            "type": "custom",
            "description": "default is WriteThenFatal",
            "required": false,
            "path_tokens": [
              "logger",
              "on_fatal"
            ]
          },
          {
            "name": "name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "name"
            ]
          },
          {
            "name": "errorOutput",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "error_output"
            ]
          },
          {
            "name": "addStack",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "add_stack"
            ]
          },
          {
            "name": "callerSkip",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "logger",
              "caller_skip"
            ]
          },
          {
            "name": "clock",
            "type": "custom",
            "description": "",
            "required": false,
            "default": "zapcore.DefaultClock",
            "path_tokens": [
              "logger",
              "clock"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "faro",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "json",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Path",
            "type": "string",
            "description": "Path of the file to write to. Path is relative to current directory.",
            "required": true,
            "path_tokens": [
              "path"
            ]
          },
          {
            "name": "Append",
            "type": "bool",
            "description": "Mode defines whether the exporter should append to the file. Options: - false[default]:  truncates the file - true:  appends to the file.",
            "required": false,
            "path_tokens": [
              "append"
            ]
          },
          {
            "name": "MaxMegabytes",
            "type": "int",
            "description": "MaxMegabytes is the maximum size in megabytes of the file before it gets rotated. It defaults to 100 megabytes.",
            "required": false,
            "path_tokens": [
              "rotation",
              "max_megabytes"
            ]
          },
          {
            "name": "MaxDays",
            "type": "int",
            "description": "MaxDays is the maximum number of days to retain old log files based on the timestamp encoded in their filename.  Note that a day is defined as 24 hours and may not exactly correspond to calendar days due to daylight savings, leap seconds, etc. The default is not to remove old log files based on age.",
            "required": false,
            "path_tokens": [
              "rotation",
              "max_days"
            ]
          },
          {
            "name": "MaxBackups",
            "type": "int",
            "description": "MaxBackups is the maximum number of old log files to retain. The default is to 100 files.",
            "required": false,
            "default": 100,
            "path_tokens": [
              "rotation",
              "max_backups"
            ]
          },
          {
            "name": "LocalTime",
            "type": "bool",
            "description": "LocalTime determines if the time used for formatting the timestamps in backup files is the computer's local time.  The default is to use UTC time.",
            "required": false,
            "path_tokens": [
              "rotation",
              "localtime"
            ]
          },
          {
            "name": "FormatType",
            "type": "string",
            "description": "FormatType define the data format of encoded telemetry data Options: - json[default]:  OTLP json bytes. - proto:  OTLP binary protobuf bytes.",
            "required": false,
            "default": "json",
            "path_tokens": [
              "format"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "encoding",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "encoding",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "string",
            "description": "Compression Codec used to export telemetry data Supported compression algorithms:`zstd`",
            "required": false,
            "path_tokens": [
              "compression"
            ]
          },
          {
            "name": "FlushInterval",
            "type": "duration",
            "description": "FlushInterval is the duration between flushes. See time.ParseDuration for valid values.",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "flush_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enables group_by. When group_by is enabled, rotation setting is ignored.  Default is false.",
            "required": false,
            "path_tokens": [
              "group_by",
              "enabled"
            ]
          },
          {
            "name": "ResourceAttribute",
            "type": "string",
            "description": "ResourceAttribute specifies the name of the resource attribute that contains the path segment of the file to write to. The final path will be the Path config value, with the * replaced with the value of this resource attribute. Default is \"fileexporter.path_segment\".",
            "required": false,
            "default": "fileexporter.path_segment",
            "path_tokens": [
              "group_by",
              "resource_attribute"
            ]
          },
          {
            "name": "MaxOpenFiles",
            "type": "int",
            "description": "MaxOpenFiles specifies the maximum number of open file descriptors for the output files. The default is 100.",
            "required": false,
            "default": 100,
            "path_tokens": [
              "group_by",
              "max_open_files"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "clickhouse",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "collectorVersion",
            "type": "string",
            "description": "collectorVersion is the build version of the collector. This is overridden when an exporter is initialized.",
            "required": false,
            "path_tokens": [
              "collector_version"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is the clickhouse endpoint.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username is the authentication username.",
            "required": false,
            "path_tokens": [
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "Password is the authentication password.",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Database",
            "type": "string",
            "description": "Database is the database name to export.",
            "required": false,
            "path_tokens": [
              "database"
            ]
          },
          {
            "name": "ConnectionParams",
            "type": "stringMap",
            "description": "ConnectionParams is the extra connection parameters with map format. for example compression/dial_timeout",
            "required": false,
            "path_tokens": [
              "connection_params"
            ]
          },
          {
            "name": "LogsTableName",
            "type": "string",
            "description": "LogsTableName is the table name for logs. default is `otel_logs`.",
            "required": false,
            "path_tokens": [
              "logs_table_name"
            ]
          },
          {
            "name": "TracesTableName",
            "type": "string",
            "description": "TracesTableName is the table name for traces. default is `otel_traces`.",
            "required": false,
            "path_tokens": [
              "traces_table_name"
            ]
          },
          {
            "name": "MetricsTableName",
            "type": "string",
            "description": "MetricsTableName is the table name for metrics. default is `otel_metrics`. Deprecated: MetricsTableName exists for historical compatibility and should not be used. To set the metrics tables name, use the MetricsTables parameter instead.",
            "required": false,
            "path_tokens": [
              "metrics_table_name"
            ]
          },
          {
            "name": "TTL",
            "type": "duration",
            "description": "TTL is The data time-to-live example 30m, 48h. 0 means no ttl.",
            "required": false,
            "path_tokens": [
              "ttl"
            ],
            "format": "duration"
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "table_engine",
              "name"
            ]
          },
          {
            "name": "Params",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "table_engine",
              "params"
            ]
          },
          {
            "name": "ClusterName",
            "type": "string",
            "description": "ClusterName if set will append `ON CLUSTER` with the provided name when creating tables.",
            "required": false,
            "path_tokens": [
              "cluster_name"
            ]
          },
          {
            "name": "CreateSchema",
            "type": "bool",
            "description": "CreateSchema if set to true will run the DDL for creating the database and tables. default is true.",
            "required": false,
            "path_tokens": [
              "create_schema"
            ]
          },
          {
            "name": "Compress",
            "type": "string",
            "description": "Compress controls the compression algorithm. Valid options: `none` (disabled), `zstd`, `lz4` (default), `gzip`, `deflate`, `br`, `true` (lz4).",
            "required": false,
            "path_tokens": [
              "compress"
            ]
          },
          {
            "name": "AsyncInsert",
            "type": "bool",
            "description": "AsyncInsert if true will enable async inserts. Default is `true`. Ignored if async inserts are configured in the `endpoint` or `connection_params`. Async inserts may still be overridden server-side.",
            "required": false,
            "path_tokens": [
              "async_insert"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics_tables",
              "gauge",
              "name"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics_tables",
              "sum",
              "name"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics_tables",
              "summary",
              "name"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics_tables",
              "histogram",
              "name"
            ]
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics_tables",
              "exponential_histogram",
              "name"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "googlecloudpubsub",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "ProjectID",
            "type": "string",
            "description": "Google Cloud Project ID where the Pubsub client will connect to",
            "required": false,
            "path_tokens": [
              "project"
            ]
          },
          {
            "name": "UserAgent",
            "type": "string",
            "description": "User agent that will be used by the Pubsub client to connect to the service",
            "required": false,
            "default": "opentelemetry-collector-contrib {{version}}",
            "path_tokens": [
              "user_agent"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Override of the Pubsub Endpoint, leave empty for the default endpoint",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "Only has effect if Endpoint is not \"\"",
            "required": false,
            "path_tokens": [
              "insecure"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "The fully qualified resource name of the Pubsub topic",
            "required": false,
            "path_tokens": [
              "topic"
            ]
          },
          {
            "name": "Compression",
            "type": "string",
            "description": "Compression of the payload (only gzip or is supported, no compression is the default)",
            "required": false,
            "path_tokens": [
              "compression"
            ]
          },
          {
            "name": "Behavior",
            "type": "string",
            "description": "Behavior of the watermark. Currently, only of the message (none, earliest and current, current being the default) will set the timestamp on pubsub based on timestamps of the events inside the message",
            "required": false,
            "default": "current",
            "path_tokens": [
              "watermark",
              "behavior"
            ]
          },
          {
            "name": "AllowedDrift",
            "type": "duration",
            "description": "Indication on how much the timestamp can drift from the current time, the timestamp will be capped to the allowed maximum. A duration of 0 is the same as maximum duration",
            "required": false,
            "default": 0,
            "path_tokens": [
              "watermark",
              "allowed_drift"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates if ordering is enabled",
            "required": false,
            "default": false,
            "path_tokens": [
              "ordering",
              "enabled"
            ]
          },
          {
            "name": "FromResourceAttribute",
            "type": "string",
            "description": "FromResourceAttribute is a resource attribute that will be used as the ordering key.",
            "required": false,
            "default": "",
            "path_tokens": [
              "ordering",
              "from_resource_attribute"
            ]
          },
          {
            "name": "RemoveResourceAttribute",
            "type": "bool",
            "description": "RemoveResourceAttribute indicates if the ordering key should be removed from the resource attributes.",
            "required": false,
            "default": false,
            "path_tokens": [
              "ordering",
              "remove_resource_attribute"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "logicmonitor",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`.",
            "required": false,
            "path_tokens": [
              "resource_to_telemetry_conversion",
              "enabled"
            ]
          },
          {
            "name": "AccessID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_token",
              "access_id"
            ],
            "sensitive": true
          },
          {
            "name": "AccessKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_token",
              "access_key"
            ],
            "sensitive": true
          },
          {
            "name": "ResourceMappingOperation",
            "type": "enum",
            "description": "Operation to be performed for resource mapping. Valid values are `and`, `or`.",
            "required": false,
            "path_tokens": [
              "logs",
              "resource_mapping_op"
            ],
            "enum_values": [
              "and",
              "or"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "kafka",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Brokers",
            "type": "stringArray",
            "description": "Brokers holds the list of Kafka bootstrap servers (default localhost:9092).",
            "required": false,
            "path_tokens": [
              "brokers"
            ]
          },
          {
            "name": "ResolveCanonicalBootstrapServersOnly",
            "type": "bool",
            "description": "ResolveCanonicalBootstrapServersOnly configures the Kafka client to perform a DNS lookup on each of the provided brokers, and then perform a reverse lookup on the resulting IPs to obtain the canonical hostnames to use as the bootstrap servers. This can be required in SASL environments.",
            "required": false,
            "path_tokens": [
              "resolve_canonical_bootstrap_servers_only"
            ]
          },
          {
            "name": "ProtocolVersion",
            "type": "string",
            "description": "ProtocolVersion defines the Kafka protocol version that the client will assume it is running against.",
            "required": false,
            "path_tokens": [
              "protocol_version"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "ClientID holds the client ID advertised to Kafka, which can be used for enforcing ACLs, throttling quotas, and more (default \"otel-collector\")",
            "required": false,
            "path_tokens": [
              "client_id"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "plain_text",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "plain_text",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username to be used on authentication",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "Password to be used on authentication",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "Mechanism",
            "type": "string",
            "description": "SASL Mechanism to be used, possible values are: (PLAIN, AWS_MSK_IAM_OAUTHBEARER, SCRAM-SHA-256 or SCRAM-SHA-512).",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "mechanism"
            ]
          },
          {
            "name": "Version",
            "type": "int",
            "description": "SASL Protocol Version to be used, possible values are: (0, 1). Defaults to 0.",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "version"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Region is the AWS region the MSK cluster is based in",
            "required": false,
            "path_tokens": [
              "auth",
              "sasl",
              "aws_msk",
              "region"
            ]
          },
          {
            "name": "ServiceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "service_name"
            ]
          },
          {
            "name": "Realm",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "realm"
            ]
          },
          {
            "name": "UseKeyTab",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "use_keytab"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "ConfigPath",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "config_file"
            ]
          },
          {
            "name": "KeyTabPath",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "keytab_file"
            ]
          },
          {
            "name": "DisablePAFXFAST",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "kerberos",
              "disable_fast_negotiation"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Full",
            "type": "bool",
            "description": "Whether to maintain a full set of metadata for all topics, or just the minimal set that has been necessary so far. The full set is simpler and usually more convenient, but can take up a substantial amount of memory if you have many topics and partitions. Defaults to true.",
            "required": false,
            "path_tokens": [
              "metadata",
              "full"
            ]
          },
          {
            "name": "RefreshInterval",
            "type": "duration",
            "description": "RefreshInterval controls the frequency at which cluster metadata is refreshed. Defaults to 10 minutes.",
            "required": false,
            "path_tokens": [
              "metadata",
              "refresh_interval"
            ],
            "format": "duration"
          },
          {
            "name": "Max",
            "type": "int",
            "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election or at startup (default 3).",
            "required": false,
            "path_tokens": [
              "metadata",
              "retry",
              "max"
            ]
          },
          {
            "name": "Backoff",
            "type": "duration",
            "description": "How long to wait for leader election to occur before retrying (default 250ms). Similar to the JVM's `retry.backoff.ms`.",
            "required": false,
            "path_tokens": [
              "metadata",
              "retry",
              "backoff"
            ],
            "format": "duration"
          },
          {
            "name": "RackID",
            "type": "string",
            "description": "RackID provides the rack identifier for this client to enable rack-aware replica selection when supported by the brokers. This maps to Kafka's standard \"client.rack\" setting. By default, this is empty.",
            "required": false,
            "path_tokens": [
              "rack_id"
            ]
          },
          {
            "name": "MaxMessageBytes",
            "type": "int",
            "description": "Maximum message bytes the producer will accept to produce (default 1000000)",
            "required": false,
            "default": 1000000,
            "path_tokens": [
              "producer",
              "max_message_bytes"
            ],
            "unit": "bytes"
          },
          {
            "name": "RequiredAcks",
            "type": "enum",
            "description": "RequiredAcks holds the number acknowledgements required before producing returns successfully. See: https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#acks Acceptable values are:   0 (NoResponse)   Does not wait for any acknowledgements.   1 (WaitForLocal) Waits for only the leader to write the record to its local log,                    but does not wait for followers to acknowledge. (default)  -1 (WaitForAll)   Waits for all in-sync replicas to acknowledge.                    In YAML configuration, \"all\" is accepted as an alias for -1.",
            "required": false,
            "default": 1,
            "path_tokens": [
              "producer",
              "required_acks"
            ],
            "enum_values": [
              "noresponse",
              "waitforall",
              "waitforlocal"
            ]
          },
          {
            "name": "Compression",
            "type": "string",
            "description": "Compression Codec used to produce messages https://pkg.go.dev/github.com/IBM/sarama@v1.30.0#CompressionCodec The options are: 'none' (default), 'gzip', 'snappy', 'lz4', and 'zstd'",
            "required": false,
            "default": "none",
            "path_tokens": [
              "producer",
              "compression"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "compression_params",
              "level"
            ]
          },
          {
            "name": "FlushMaxMessages",
            "type": "int",
            "description": "The maximum number of messages the producer will send in a single broker request. Defaults to 0 for unlimited. Similar to `queue.buffering.max.messages` in the JVM producer.",
            "required": false,
            "default": 0,
            "path_tokens": [
              "producer",
              "flush_max_messages"
            ]
          },
          {
            "name": "AllowAutoTopicCreation",
            "type": "bool",
            "description": "Whether or not to allow automatic topic creation. (default enabled).",
            "required": false,
            "default": true,
            "path_tokens": [
              "producer",
              "allow_auto_topic_creation"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic to which messages of the signal type should be produced. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_logs",
            "path_tokens": [
              "logs",
              "topic"
            ]
          },
          {
            "name": "TopicFromMetadataKey",
            "type": "string",
            "description": "TopicFromMetadataKey holds the name of the metadata key to use as the topic name for this signal type. If this is set, it takes precedence over the topic name set in the topic field.",
            "required": false,
            "path_tokens": [
              "logs",
              "topic_from_metadata_key"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the encoding of messages for the signal type. Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "logs",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic to which messages of the signal type should be produced. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_metrics",
            "path_tokens": [
              "metrics",
              "topic"
            ]
          },
          {
            "name": "TopicFromMetadataKey",
            "type": "string",
            "description": "TopicFromMetadataKey holds the name of the metadata key to use as the topic name for this signal type. If this is set, it takes precedence over the topic name set in the topic field.",
            "required": false,
            "path_tokens": [
              "metrics",
              "topic_from_metadata_key"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the encoding of messages for the signal type. Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "metrics",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic to which messages of the signal type should be produced. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_spans",
            "path_tokens": [
              "traces",
              "topic"
            ]
          },
          {
            "name": "TopicFromMetadataKey",
            "type": "string",
            "description": "TopicFromMetadataKey holds the name of the metadata key to use as the topic name for this signal type. If this is set, it takes precedence over the topic name set in the topic field.",
            "required": false,
            "path_tokens": [
              "traces",
              "topic_from_metadata_key"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the encoding of messages for the signal type. Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "traces",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic to which messages of the signal type should be produced. The default depends on the signal type:  - \"otlp_spans\" for traces  - \"otlp_metrics\" for metrics  - \"otlp_logs\" for logs  - \"otlp_profiles\" for profiles",
            "required": false,
            "default": "otlp_profiles",
            "path_tokens": [
              "profiles",
              "topic"
            ]
          },
          {
            "name": "TopicFromMetadataKey",
            "type": "string",
            "description": "TopicFromMetadataKey holds the name of the metadata key to use as the topic name for this signal type. If this is set, it takes precedence over the topic name set in the topic field.",
            "required": false,
            "path_tokens": [
              "profiles",
              "topic_from_metadata_key"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the encoding of messages for the signal type. Defaults to \"otlp_proto\".",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "profiles",
              "encoding"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "Topic holds the name of the Kafka topic to which data should be exported. Topic has no default. If explicitly specified, it will take precedence over the default values of logs::topic, metrics::topic, and traces::topic. Deprecated [v0.124.0]: use logs::topic, metrics::topic, and traces::topic instead.",
            "required": false,
            "path_tokens": [
              "topic"
            ]
          },
          {
            "name": "IncludeMetadataKeys",
            "type": "stringArray",
            "description": "IncludeMetadataKeys indicates the receiver's client metadata keys to propagate as Kafka message headers.",
            "required": false,
            "path_tokens": [
              "include_metadata_keys"
            ]
          },
          {
            "name": "TopicFromAttribute",
            "type": "string",
            "description": "TopicFromAttribute is the name of the attribute to use as the topic name.",
            "required": false,
            "path_tokens": [
              "topic_from_attribute"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding holds the encoding of Kafka message values. Encoding has no default. If explicitly specified, it will take precedence over the default values of logs::encoding, metrics::encoding, and traces::encoding. Deprecated [v0.124.0]: use logs::encoding, metrics::encoding, and traces::encoding instead.",
            "required": false,
            "path_tokens": [
              "encoding"
            ]
          },
          {
            "name": "PartitionTracesByID",
            "type": "bool",
            "description": "PartitionTracesByID sets the message key of outgoing trace messages to the trace ID. NOTE: this does not have any effect for Jaeger encodings. Jaeger encodings always use use the trace ID for the message key.",
            "required": false,
            "path_tokens": [
              "partition_traces_by_id"
            ]
          },
          {
            "name": "PartitionMetricsByResourceAttributes",
            "type": "bool",
            "description": "PartitionMetricsByResourceAttributes controls the partitioning of metrics messages by resource. If this is true, then the message key will be set to a hash of the resource's identifying attributes.",
            "required": false,
            "default": false,
            "path_tokens": [
              "partition_metrics_by_resource_attributes"
            ]
          },
          {
            "name": "PartitionLogsByResourceAttributes",
            "type": "bool",
            "description": "PartitionLogsByResourceAttributes controls the partitioning of logs messages by resource. If this is true, then the message key will be set to a hash of the resource's identifying attributes.",
            "required": false,
            "default": false,
            "path_tokens": [
              "partition_logs_by_resource_attributes"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "influxdb",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Org",
            "type": "string",
            "description": "Org is the InfluxDB organization name of the destination bucket.",
            "required": false,
            "path_tokens": [
              "org"
            ]
          },
          {
            "name": "Bucket",
            "type": "string",
            "description": "Bucket is the InfluxDB bucket name that telemetry will be written to.",
            "required": false,
            "path_tokens": [
              "bucket"
            ]
          },
          {
            "name": "Token",
            "type": "custom",
            "description": "Token is used to identify InfluxDB permissions within the organization.",
            "required": false,
            "path_tokens": [
              "token"
            ],
            "sensitive": true
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled is used to specify if the exporter should use the v1.X InfluxDB API schema",
            "required": false,
            "path_tokens": [
              "v1_compatibility",
              "enabled"
            ]
          },
          {
            "name": "DB",
            "type": "string",
            "description": "DB is used to specify the name of the V1 InfluxDB database that telemetry will be written to.",
            "required": false,
            "path_tokens": [
              "v1_compatibility",
              "db"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username is used to optionally specify the basic auth username",
            "required": false,
            "path_tokens": [
              "v1_compatibility",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "Password is used to optionally specify the basic auth password",
            "required": false,
            "path_tokens": [
              "v1_compatibility",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "SpanDimensions",
            "type": "stringArray",
            "description": "SpanDimensions are span attributes to be used as line protocol tags. These are always included as tags: - trace ID - span ID The default values are strongly recommended for use with Jaeger: - service.name - span.name Other common attributes can be found here: - https://opentelemetry.io/docs/specs/semconv/",
            "required": false,
            "default": ".SpanDimensions",
            "path_tokens": [
              "span_dimensions"
            ]
          },
          {
            "name": "LogRecordDimensions",
            "type": "stringArray",
            "description": "LogRecordDimensions are log record attributes to be used as line protocol tags. These are always included as tags, if available: - trace ID - span ID The default values: - service.name Other common attributes can be found here: - https://opentelemetry.io/docs/specs/semconv/ When using InfluxDB for both logs and traces, be certain that log_record_dimensions matches the tracing span_dimensions value.",
            "required": false,
            "default": ".LogRecordDimensions",
            "path_tokens": [
              "log_record_dimensions"
            ]
          },
          {
            "name": "MetricsSchema",
            "type": "string",
            "description": "MetricsSchema indicates the metrics schema to emit to line protocol. Options: - telegraf-prometheus-v1 - telegraf-prometheus-v2",
            "required": false,
            "path_tokens": [
              "metrics_schema"
            ]
          },
          {
            "name": "PayloadMaxLines",
            "type": "int",
            "description": "PayloadMaxLines is the maximum number of line protocol lines to POST in a single request.",
            "required": false,
            "default": "10_000",
            "path_tokens": [
              "payload_max_lines"
            ]
          },
          {
            "name": "PayloadMaxBytes",
            "type": "int",
            "description": "PayloadMaxBytes is the maximum number of line protocol bytes to POST in a single request.",
            "required": false,
            "default": "10_000_000",
            "path_tokens": [
              "payload_max_bytes"
            ],
            "unit": "bytes"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "honeycombmarker",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "APIKey",
            "type": "custom",
            "description": "APIKey is the authentication token associated with the Honeycomb account.",
            "required": true,
            "path_tokens": [
              "api_key"
            ],
            "sensitive": true
          },
          {
            "name": "APIURL",
            "type": "string",
            "description": "API URL to use (defaults to https://api.honeycomb.io)",
            "required": false,
            "default": "https://api.honeycomb.io",
            "path_tokens": [
              "api_url"
            ]
          },
          {
            "name": "Markers",
            "type": "array",
            "description": "Markers is the list of markers to create",
            "required": false,
            "path_tokens": [
              "markers"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "elasticsearch",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Endpoints",
            "type": "stringArray",
            "description": "Endpoints holds the Elasticsearch URLs the exporter should send events to. This setting is required if CloudID is not set and if the ELASTICSEARCH_URL environment variable is not set.",
            "required": false,
            "path_tokens": [
              "endpoints"
            ]
          },
          {
            "name": "CloudID",
            "type": "string",
            "description": "CloudID holds the cloud ID to identify the Elastic Cloud cluster to send events to. https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html This setting is required if no URL is configured.",
            "required": false,
            "path_tokens": [
              "cloudid"
            ]
          },
          {
            "name": "NumWorkers",
            "type": "int",
            "description": "NumWorkers configures the number of workers publishing bulk requests.",
            "required": false,
            "path_tokens": [
              "num_workers"
            ]
          },
          {
            "name": "LogsIndex",
            "type": "string",
            "description": "LogsIndex configures the static index used for document routing for logs. It should be empty if dynamic document routing is preferred.",
            "required": false,
            "path_tokens": [
              "logs_index"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled enables dynamic index routing. Deprecated: [v0.122.0] This config is now ignored. Dynamic index routing is always done by default.",
            "required": false,
            "path_tokens": [
              "logs_dynamic_index",
              "enabled"
            ]
          },
          {
            "name": "MetricsIndex",
            "type": "string",
            "description": "MetricsIndex configures the static index used for document routing for metrics. It should be empty if dynamic document routing is preferred.",
            "required": false,
            "path_tokens": [
              "metrics_index"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled enables dynamic index routing. Deprecated: [v0.122.0] This config is now ignored. Dynamic index routing is always done by default.",
            "required": false,
            "path_tokens": [
              "metrics_dynamic_index",
              "enabled"
            ]
          },
          {
            "name": "TracesIndex",
            "type": "string",
            "description": "TracesIndex configures the static index used for document routing for metrics. It should be empty if dynamic document routing is preferred.",
            "required": false,
            "path_tokens": [
              "traces_index"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled enables dynamic index routing. Deprecated: [v0.122.0] This config is now ignored. Dynamic index routing is always done by default.",
            "required": false,
            "path_tokens": [
              "traces_dynamic_index",
              "enabled"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "logs_dynamic_id",
              "enabled"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "logs_dynamic_pipeline",
              "enabled"
            ]
          },
          {
            "name": "Pipeline",
            "type": "string",
            "description": "Pipeline configures the ingest node pipeline name that should be used to process the events. https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html",
            "required": false,
            "path_tokens": [
              "pipeline"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "User",
            "type": "string",
            "description": "User is used to configure HTTP Basic Authentication.",
            "required": false,
            "path_tokens": [
              "user"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "Password is used to configure HTTP Basic Authentication.",
            "required": false,
            "path_tokens": [
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "APIKey",
            "type": "custom",
            "description": "APIKey is used to configure ApiKey based Authentication. https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html",
            "required": false,
            "path_tokens": [
              "api_key"
            ],
            "sensitive": true
          },
          {
            "name": "OnStart",
            "type": "bool",
            "description": "OnStart, if set, instructs the exporter to look for available Elasticsearch nodes the first time the exporter connects to the cluster.",
            "required": false,
            "path_tokens": [
              "discover",
              "on_start"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "Interval instructs the exporter to renew the list of Elasticsearch URLs with the given interval. URLs will not be updated if Interval is \u003c=0.",
            "required": false,
            "path_tokens": [
              "discover",
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled allows users to disable retry without having to comment out all settings.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry",
              "enabled"
            ]
          },
          {
            "name": "MaxRequests",
            "type": "int",
            "description": "MaxRequests configures how often an HTTP request is attempted before it is assumed to be failed. Deprecated: use MaxRetries instead.",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "retry",
              "max_requests"
            ]
          },
          {
            "name": "MaxRetries",
            "type": "int",
            "description": "MaxRetries configures how many times an HTTP request is retried.",
            "required": false,
            "default": 0,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "retry",
              "max_retries"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval configures the initial waiting time if a request failed.",
            "required": false,
            "default": "100ms",
            "path_tokens": [
              "retry",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval configures the max waiting time if consecutive requests failed.",
            "required": false,
            "default": "1m",
            "path_tokens": [
              "retry",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RetryOnStatus",
            "type": "array",
            "description": "RetryOnStatus configures the status codes that trigger request or document level retries.",
            "required": false,
            "path_tokens": [
              "retry",
              "retry_on_status"
            ]
          },
          {
            "name": "Bytes",
            "type": "int",
            "description": "Bytes sets the send buffer flushing limit.",
            "required": false,
            "default": 5000000,
            "path_tokens": [
              "flush",
              "bytes"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "Interval configures the max age of a document in the send buffer.",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "flush",
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "Mode",
            "type": "string",
            "description": "Mode configures the default document mapping mode. The mode may be overridden in two ways:  - by the client metadata key X-Elastic-Mapping-Mode, if specified  - by the scope attribute elastic.mapping.mode, if specified The order of precedence is:   scope attribute \u003e client metadata \u003e default mode.",
            "required": false,
            "default": "otel",
            "path_tokens": [
              "mapping",
              "mode"
            ]
          },
          {
            "name": "AllowedModes",
            "type": "stringArray",
            "description": "AllowedModes controls the allowed document mapping modes specified through X-Elastic-Mapping-Mode client metadata. If unspecified, all mapping modes are allowed.",
            "required": false,
            "path_tokens": [
              "mapping",
              "allowed_modes"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "logstash_format",
              "enabled"
            ]
          },
          {
            "name": "PrefixSeparator",
            "type": "string",
            "description": "",
            "required": false,
            "default": "-",
            "path_tokens": [
              "logstash_format",
              "prefix_separator"
            ]
          },
          {
            "name": "DateFormat",
            "type": "string",
            "description": "",
            "required": false,
            "default": "%Y.%m.%d",
            "path_tokens": [
              "logstash_format",
              "date_format"
            ]
          },
          {
            "name": "LogRequestBody",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "telemetry",
              "log_request_body"
            ]
          },
          {
            "name": "LogResponseBody",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "telemetry",
              "log_response_body"
            ]
          },
          {
            "name": "LogFailedDocsInput",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "telemetry",
              "log_failed_docs_input"
            ]
          },
          {
            "name": "LogFailedDocsInputRateLimit",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "telemetry",
              "log_failed_docs_input_rate_limit"
            ],
            "format": "duration"
          },
          {
            "name": "IncludeSourceOnError",
            "type": "custom",
            "description": "IncludeSourceOnError configures whether the bulk index responses include a part of the source document on error. Defaults to nil. This setting requires Elasticsearch 8.18+. Using it in prior versions have no effect. NOTE: The default behavior if this configuration is not set, is to discard the error reason entirely, i.e. only the error type is returned. WARNING: If set to true, the exporter may log error responses containing request payload, causing potential sensitive data to be exposed in logs. Users are expected to sanitize the responses themselves.",
            "required": false,
            "path_tokens": [
              "include_source_on_error"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "enabled"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "batcher",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "",
            "required": false,
            "default": 5000,
            "path_tokens": [
              "batcher",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "max_size"
            ]
          },
          {
            "name": "enabledSet",
            "type": "array",
            "description": "enabledSet tracks whether Enabled has been specified. If enabledSet is false, the exporter will perform its own buffering.",
            "required": false,
            "path_tokens": [
              "batcher",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "MetadataKeys",
            "type": "stringArray",
            "description": "Experimental: MetadataKeys defines a list of client.Metadata keys that will be used as partition keys for when batcher is enabled and will be added to the exporter's telemetry if defined. The config only applies when `sending_queue::batch` is defined or when the, now deprecated, batcher is used (set to `true` or `false`). The metadata keys are converted to lower case as key lookups for client metadata is case insensitive. This means that the metric produced by internal telemetry will also have the attribute in lower case. Keys are case-insensitive and duplicates will trigger a validation error.",
            "required": false,
            "path_tokens": [
              "metadata_keys"
            ]
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "atMostOne",
          "keys": [
            [
              "retry",
              "max_requests"
            ],
            [
              "retry",
              "max_retries"
            ]
          ]
        }
      ]
    },
    {
      "name": "logzio",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Token",
            "type": "custom",
            "description": "Your Logz.io Account Token, can be found at https://app.logz.io/#/dashboard/settings/general",
            "required": false,
            "default": "",
            "path_tokens": [
              "account_token"
            ],
            "sensitive": true
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Your Logz.io 2-letter region code, can be found at https://docs.logz.io/user-guide/accounts/account-region.html#available-regions",
            "required": false,
            "default": "",
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "CustomEndpoint",
            "type": "string",
            "description": "**Deprecation** Custom endpoint to ship traces to. Use only for dev and tests.",
            "required": false,
            "path_tokens": [
              "custom_endpoint"
            ]
          },
          {
            "name": "DrainInterval",
            "type": "int",
            "description": "**Deprecation** Queue drain interval in seconds. Defaults to `3`.",
            "required": false,
            "path_tokens": [
              "drain_interval"
            ]
          },
          {
            "name": "QueueCapacity",
            "type": "int",
            "description": "**Deprecation** Queue capacity in bytes. Defaults to `20 * 1024 * 1024` ~ 20mb.",
            "required": false,
            "path_tokens": [
              "queue_capacity"
            ]
          },
          {
            "name": "QueueMaxLength",
            "type": "int",
            "description": "**Deprecation** Max number of items allowed in the queue. Defaults to `500000`.",
            "required": false,
            "path_tokens": [
              "queue_max_length"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "mezmo",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "IngestURL",
            "type": "string",
            "description": "IngestURL is the URL to send telemetry to.",
            "required": false,
            "default": "https://logs.mezmo.com/otel/ingest/rest",
            "path_tokens": [
              "ingest_url"
            ]
          },
          {
            "name": "IngestKey",
            "type": "custom",
            "description": "Token is the authentication token provided by Mezmo.",
            "required": false,
            "path_tokens": [
              "ingest_key"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "googlecloud",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "loadbalancing",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "protocol",
              "otlp",
              "middlewares"
            ]
          },
          {
            "name": "Hostnames",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "static",
              "hostnames"
            ]
          },
          {
            "name": "Hostname",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "dns",
              "hostname"
            ]
          },
          {
            "name": "Port",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "dns",
              "port"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "dns",
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "dns",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Service",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "k8s",
              "service"
            ]
          },
          {
            "name": "Ports",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "k8s",
              "ports"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "k8s",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReturnHostnames",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "k8s",
              "return_hostnames"
            ]
          },
          {
            "name": "NamespaceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "aws_cloud_map",
              "namespace"
            ]
          },
          {
            "name": "ServiceName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "aws_cloud_map",
              "service_name"
            ]
          },
          {
            "name": "HealthStatus",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "aws_cloud_map",
              "health_status"
            ],
            "enum_values": [
              "ALL",
              "HEALTHY",
              "HEALTHY_OR_ELSE_ALL",
              "UNHEALTHY"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "aws_cloud_map",
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "aws_cloud_map",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Port",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "resolver",
              "aws_cloud_map",
              "port"
            ]
          },
          {
            "name": "RoutingKey",
            "type": "string",
            "description": "RoutingKey is a single routing key value",
            "required": false,
            "path_tokens": [
              "routing_key"
            ]
          },
          {
            "name": "RoutingAttributes",
            "type": "stringArray",
            "description": "RoutingAttributes creates a composite routing key, based on several resource attributes of the application. Supports all attributes available (both resource and span), as well as the pseudo attributes \"span.kind\" and \"span.name\".",
            "required": false,
            "path_tokens": [
              "routing_attributes"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "opensearch",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "http",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "http",
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "http",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "http",
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "http",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "http",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "http",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "http",
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "http",
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "http",
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "http",
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "http",
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "http",
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http",
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http",
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "http",
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "http",
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "http",
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Mode",
            "type": "string",
            "description": "Mode configures the field mappings. Supported modes are the following:   ss4o: exports logs in the Simple Schema for Observability standard.   This mode is enabled by default.   See: https://opensearch.org/docs/latest/observing-your-data/ss4o/   ecs: maps fields defined in the OpenTelemetry Semantic Conventions   to the Elastic Common Schema.   See: https://www.elastic.co/guide/en/ecs/current/index.html   flatten_attributes: uses the ECS mapping but flattens all resource and   log attributes in the record to the top-level.",
            "required": false,
            "path_tokens": [
              "mapping",
              "mode"
            ]
          },
          {
            "name": "Fields",
            "type": "stringMap",
            "description": "Additional field mappings.",
            "required": false,
            "path_tokens": [
              "mapping",
              "fields"
            ]
          },
          {
            "name": "File",
            "type": "string",
            "description": "File to read additional fields mappings from.",
            "required": false,
            "path_tokens": [
              "mapping",
              "file"
            ]
          },
          {
            "name": "TimestampField",
            "type": "string",
            "description": "Field to store timestamp in.  If not set uses the default @timestamp",
            "required": false,
            "path_tokens": [
              "mapping",
              "timestamp_field"
            ]
          },
          {
            "name": "UnixTimestamp",
            "type": "bool",
            "description": "Whether to store timestamp in Epoch milliseconds",
            "required": false,
            "path_tokens": [
              "mapping",
              "unix_timestamp"
            ]
          },
          {
            "name": "Dedup",
            "type": "bool",
            "description": "Try to find and remove duplicate fields",
            "required": false,
            "path_tokens": [
              "mapping",
              "dedup"
            ]
          },
          {
            "name": "Dedot",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "mapping",
              "dedot"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Dataset",
            "type": "string",
            "description": "The Observability indices would follow the recommended for immutable data stream ingestion pattern using the data_stream concepts. See https://opensearch.org/docs/latest/dashboards/im-dashboards/datastream/ Index pattern will follow the next naming template ss4o_{type}-{dataset}-{namespace}",
            "required": false,
            "path_tokens": [
              "dataset"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "namespace"
            ]
          },
          {
            "name": "LogsIndex",
            "type": "string",
            "description": "LogsIndex configures the index, index alias, or data stream name logs should be indexed in. https://opensearch.org/docs/latest/im-plugin/index/ https://opensearch.org/docs/latest/dashboards/im-dashboards/datastream/",
            "required": false,
            "path_tokens": [
              "logs_index"
            ]
          },
          {
            "name": "LogsIndexFallback",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs_index_fallback"
            ]
          },
          {
            "name": "LogsIndexTimeFormat",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs_index_time_format"
            ]
          },
          {
            "name": "TracesIndex",
            "type": "string",
            "description": "TracesIndex configures the index, index alias, or data stream name traces should be indexed in. https://opensearch.org/docs/latest/im-plugin/index/ https://opensearch.org/docs/latest/dashboards/im-dashboards/datastream/",
            "required": false,
            "path_tokens": [
              "traces_index"
            ]
          },
          {
            "name": "TracesIndexFallback",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces_index_fallback"
            ]
          },
          {
            "name": "TracesIndexTimeFormat",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "traces_index_time_format"
            ]
          },
          {
            "name": "BulkAction",
            "type": "string",
            "description": "BulkAction configures the action for ingesting data. Only `create` and `index` are allowed here. If not specified, the default value `create` will be used.",
            "required": false,
            "path_tokens": [
              "bulk_action"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sematext",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Region specifies the Sematext region the user is operating in Options: - EU - US",
            "required": false,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "AppToken",
            "type": "string",
            "description": "App token is the token of Sematext Monitoring App to which you want to send the metrics.",
            "required": false,
            "path_tokens": [
              "metrics",
              "app_token"
            ],
            "sensitive": true
          },
          {
            "name": "MetricsEndpoint",
            "type": "array",
            "description": "MetricsEndpoint specifies the endpoint for receiving metrics in Sematext",
            "required": false,
            "path_tokens": [
              "metrics",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "MetricsSchema",
            "type": "string",
            "description": "MetricsSchema indicates the metrics schema to emit to line protocol. Default: telegraf-prometheus-v2",
            "required": false,
            "path_tokens": [
              "metrics",
              "[]"
            ]
          },
          {
            "name": "PayloadMaxLines",
            "type": "int",
            "description": "PayloadMaxLines is the maximum number of line protocol lines to POST in a single request.",
            "required": false,
            "path_tokens": [
              "metrics",
              "payload_max_lines"
            ]
          },
          {
            "name": "PayloadMaxBytes",
            "type": "int",
            "description": "PayloadMaxBytes is the maximum number of line protocol bytes to POST in a single request.",
            "required": false,
            "path_tokens": [
              "metrics",
              "payload_max_bytes"
            ],
            "unit": "bytes"
          },
          {
            "name": "AppToken",
            "type": "string",
            "description": "App token is the token of Sematext Monitoring App to which you want to send the logs.",
            "required": false,
            "path_tokens": [
              "logs",
              "app_token"
            ],
            "sensitive": true
          },
          {
            "name": "LogsEndpoint",
            "type": "array",
            "description": "LogsEndpoint specifies the endpoint for receiving logs in Sematext",
            "required": false,
            "path_tokens": [
              "logs",
              "[]"
            ],
            "item_type": "object"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "pulsar",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint of pulsar broker (default \"pulsar://localhost:6650\")",
            "required": false,
            "default": "pulsar://localhost:6650",
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "The name of the pulsar topic to export to (default otlp_spans for traces, otlp_metrics for metrics)",
            "required": false,
            "default": "",
            "path_tokens": [
              "topic"
            ]
          },
          {
            "name": "Encoding",
            "type": "string",
            "description": "Encoding of messages (default \"otlp_proto\")",
            "required": false,
            "default": "otlp_proto",
            "path_tokens": [
              "encoding"
            ]
          },
          {
            "name": "MaxReconnectToBroker",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "max_reconnect_broker"
            ]
          },
          {
            "name": "HashingScheme",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "hashing_scheme"
            ],
            "enum_values": [
              "java_string_hash",
              "murmur3_32hash"
            ]
          },
          {
            "name": "CompressionLevel",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "compression_level"
            ],
            "enum_values": [
              "better",
              "default",
              "faster"
            ]
          },
          {
            "name": "CompressionType",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "compression_type"
            ],
            "enum_values": [
              "lz4",
              "none",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "MaxPendingMessages",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "max_pending_messages"
            ]
          },
          {
            "name": "BatcherBuilderType",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "batch_builder_type"
            ],
            "enum_values": [
              "default",
              "key_based"
            ]
          },
          {
            "name": "PartitionsAutoDiscoveryInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "partitions_auto_discovery_interval"
            ],
            "format": "duration"
          },
          {
            "name": "BatchingMaxPublishDelay",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "batching_max_publish_delay"
            ],
            "format": "duration"
          },
          {
            "name": "BatchingMaxMessages",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "batching_max_messages"
            ]
          },
          {
            "name": "BatchingMaxSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "batching_max_size"
            ]
          },
          {
            "name": "DisableBlockIfQueueFull",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "disable_block_if_queue_full"
            ]
          },
          {
            "name": "DisableBatching",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "producer",
              "disable_batching"
            ]
          },
          {
            "name": "TLSTrustCertsFilePath",
            "type": "string",
            "description": "Set the path to the trusted TLS certificate file",
            "required": false,
            "path_tokens": [
              "tls_trust_certs_file_path"
            ]
          },
          {
            "name": "TLSAllowInsecureConnection",
            "type": "bool",
            "description": "Configure whether the Pulsar client accept untrusted TLS certificate from broker (default: false)",
            "required": false,
            "path_tokens": [
              "tls_allow_insecure_connection"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "Token",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "token",
              "token"
            ],
            "sensitive": true
          },
          {
            "name": "ProviderDomain",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "provider_domain"
            ]
          },
          {
            "name": "TenantDomain",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "tenant_domain"
            ]
          },
          {
            "name": "TenantService",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "tenant_service"
            ]
          },
          {
            "name": "PrivateKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "private_key"
            ],
            "sensitive": true
          },
          {
            "name": "KeyID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "key_id"
            ]
          },
          {
            "name": "PrincipalHeader",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "principal_header"
            ]
          },
          {
            "name": "ZtsURL",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "athenz",
              "zts_url"
            ]
          },
          {
            "name": "IssuerURL",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "oauth2",
              "issuer_url"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "oauth2",
              "client_id"
            ]
          },
          {
            "name": "Audience",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "oauth2",
              "audience"
            ]
          },
          {
            "name": "OperationTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "operation_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ConnectionTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "connection_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionsPerBroker",
            "type": "int",
            "description": "",
            "required": false,
            "default": 1,
            "path_tokens": [
              "max_connections_per_broker"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sapm",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint is the destination to where traces will be sent to in SAPM format. It must be a full URL and include the scheme, port and path e.g, https://ingest.signalfx.com/v2/trace",
            "required": true,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "AccessToken",
            "type": "custom",
            "description": "AccessToken is the authentication token provided by SignalFx.",
            "required": false,
            "path_tokens": [
              "access_token"
            ],
            "sensitive": true
          },
          {
            "name": "NumWorkers",
            "type": "int",
            "description": "NumWorkers is the number of workers that should be used to export traces. Exporter can make as many requests in parallel as the number of workers. Defaults to 8.",
            "required": false,
            "default": 8,
            "path_tokens": [
              "num_workers"
            ]
          },
          {
            "name": "MaxConnections",
            "type": "int",
            "description": "MaxConnections is used to set a limit to the maximum idle HTTP connection the exporter can keep open.",
            "required": false,
            "path_tokens": [
              "max_connections"
            ]
          },
          {
            "name": "DisableCompression",
            "type": "bool",
            "description": "Disable compression. If set to true then Compression field is ignored.",
            "required": false,
            "path_tokens": [
              "disable_compression"
            ]
          },
          {
            "name": "Compression",
            "type": "string",
            "description": "Compression method to use (gzip or zstd). Ignored if DisableCompression=true. If unspecified defaults to gzip.",
            "required": false,
            "path_tokens": [
              "compression"
            ]
          },
          {
            "name": "LogDetailedResponse",
            "type": "bool",
            "description": "Log detailed response from trace ingest.",
            "required": false,
            "path_tokens": [
              "log_detailed_response"
            ]
          },
          {
            "name": "AccessTokenPassthrough",
            "type": "bool",
            "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request.",
            "required": false,
            "path_tokens": [
              "access_token_passthrough"
            ],
            "sensitive": true
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sentry",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "DSN",
            "type": "string",
            "description": "DSN to report transaction to Sentry. If the DSN is not set, no trace will be sent to Sentry.",
            "required": false,
            "path_tokens": [
              "dsn"
            ]
          },
          {
            "name": "Environment",
            "type": "string",
            "description": "The deployment environment name, such as production or staging. Environments are case-sensitive. The environment name can't contain newlines, spaces or forward slashes, can't be the string \"None\", or exceed 64 characters.",
            "required": false,
            "path_tokens": [
              "environment"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify controls whether the client verifies the Sentry server certificate chain",
            "required": false,
            "path_tokens": [
              "insecure_skip_verify"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "rabbitmq",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "connection",
              "endpoint"
            ]
          },
          {
            "name": "VHost",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection",
              "vhost"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "connection",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "connection",
              "auth",
              "plain",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection",
              "auth",
              "plain",
              "password"
            ],
            "sensitive": true
          },
          {
            "name": "ConnectionTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "connection",
              "connection_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Heartbeat",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "connection",
              "heartbeat"
            ],
            "format": "duration"
          },
          {
            "name": "PublishConfirmationTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "connection",
              "publish_confirmation_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Name",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "connection",
              "name"
            ]
          },
          {
            "name": "Exchange",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "routing",
              "exchange"
            ]
          },
          {
            "name": "RoutingKey",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "routing",
              "routing_key"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "encoding_extension",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "encoding_extension",
              "[]"
            ]
          },
          {
            "name": "Durable",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "durable"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "prometheusremotewrite",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "default": ".Timeout",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "prefix attached to each exported metric name See: https://prometheus.io/docs/practices/naming/#metric-names",
            "required": false,
            "default": "",
            "path_tokens": [
              "namespace"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if false the queue is not enabled, the export requests are executed synchronously.",
            "required": false,
            "default": true,
            "path_tokens": [
              "remote_write_queue",
              "enabled"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize is the maximum number of OTLP metric batches allowed in the queue at a given time. Ignored if Enabled is false.",
            "required": false,
            "default": 10000,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "remote_write_queue",
              "queue_size"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumWorkers configures the number of workers used by the collector to fan out remote write requests.",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "remote_write_queue",
              "num_consumers"
            ]
          },
          {
            "name": "ExternalLabels",
            "type": "stringMap",
            "description": "ExternalLabels defines a map of label keys and values that are allowed to start with reserved prefix \"__\"",
            "required": false,
            "path_tokens": [
              "external_labels"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "default": "http://some.url:9411/api/prom/push",
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "default": 0,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "default": 524288,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "default": ".Timeout",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "default": "defaultTransport.MaxIdleConns",
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "default": "defaultTransport.IdleConnTimeout",
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "default": true,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "MaxBatchSizeBytes",
            "type": "int",
            "description": "maximum size in bytes of time series batch sent to remote storage",
            "required": false,
            "default": 3000000,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "max_batch_size_bytes"
            ],
            "unit": "bytes"
          },
          {
            "name": "MaxBatchRequestParallelism",
            "type": "custom",
            "description": "maximum amount of parallel requests to do when handling large batch request",
            "required": false,
            "path_tokens": [
              "max_batch_request_parallelism"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`.",
            "required": false,
            "path_tokens": [
              "resource_to_telemetry_conversion",
              "enabled"
            ]
          },
          {
            "name": "Directory",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "wal",
              "directory"
            ]
          },
          {
            "name": "BufferSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "wal",
              "buffer_size"
            ]
          },
          {
            "name": "TruncateFrequency",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "wal",
              "truncate_frequency"
            ],
            "format": "duration"
          },
          {
            "name": "LagRecordFrequency",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "wal",
              "lag_record_frequency"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if false the target_info metric is not generated by the exporter",
            "required": false,
            "default": true,
            "path_tokens": [
              "target_info",
              "enabled"
            ]
          },
          {
            "name": "AddMetricSuffixes",
            "type": "bool",
            "description": "AddMetricSuffixes controls whether unit and type suffixes are added to metrics on export",
            "required": false,
            "default": true,
            "path_tokens": [
              "add_metric_suffixes"
            ]
          },
          {
            "name": "SendMetadata",
            "type": "bool",
            "description": "SendMetadata controls whether prometheus metadata will be generated and sent, this option is ignored when using PRW 2.0, which always includes metadata.",
            "required": false,
            "default": false,
            "path_tokens": [
              "send_metadata"
            ]
          },
          {
            "name": "RemoteWriteProtoMsg",
            "type": "custom",
            "description": "RemoteWriteProtoMsg controls whether prometheus remote write v1 or v2 is sent.",
            "required": false,
            "default": "config.RemoteWriteProtoMsgV1",
            "path_tokens": [
              "protobuf_message"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "prometheus",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "Namespace if set, exports metrics under the provided value.",
            "required": false,
            "path_tokens": [
              "namespace"
            ]
          },
          {
            "name": "ConstLabels",
            "type": "custom",
            "description": "ConstLabels are values that are applied for every exported metric.",
            "required": false,
            "path_tokens": [
              "const_labels"
            ]
          },
          {
            "name": "SendTimestamps",
            "type": "bool",
            "description": "SendTimestamps will send the underlying scrape timestamp with the export",
            "required": false,
            "default": false,
            "path_tokens": [
              "send_timestamps"
            ]
          },
          {
            "name": "MetricExpiration",
            "type": "duration",
            "description": "MetricExpiration defines how long metrics are kept without updates",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "metric_expiration"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to convert resource attributes to telemetry attributes. Default is `false`.",
            "required": false,
            "path_tokens": [
              "resource_to_telemetry_conversion",
              "enabled"
            ]
          },
          {
            "name": "EnableOpenMetrics",
            "type": "bool",
            "description": "EnableOpenMetrics enables the use of the OpenMetrics encoding option for the prometheus exporter.",
            "required": false,
            "default": false,
            "path_tokens": [
              "enable_open_metrics"
            ]
          },
          {
            "name": "AddMetricSuffixes",
            "type": "bool",
            "description": "AddMetricSuffixes controls whether suffixes are added to metric names. Defaults to true. Deprecated: Use TranslationStrategy instead. This setting is ignored when TranslationStrategy is explicitly set.",
            "required": false,
            "default": true,
            "path_tokens": [
              "add_metric_suffixes"
            ]
          },
          {
            "name": "TranslationStrategy",
            "type": "enum",
            "description": "TranslationStrategy controls how OTLP metric and attribute names are translated into Prometheus metric and label names. When set, this takes precedence over AddMetricSuffixes.",
            "required": false,
            "path_tokens": [
              "translation_strategy"
            ],
            "enum_values": [
              "NoTranslation",
              "NoUTF8EscapingWithSuffixes",
              "UnderscoreEscapingWithSuffixes",
              "UnderscoreEscapingWithoutSuffixes"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "googlemanagedprometheus",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ProjectID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "project"
            ]
          },
          {
            "name": "UserAgent",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "user_agent"
            ]
          },
          {
            "name": "Prefix",
            "type": "string",
            "description": "Prefix configures the prefix of metrics sent to GoogleManagedPrometheus.  Defaults to prometheus.googleapis.com. Changing this prefix is not recommended, as it may cause metrics to not be queryable with promql in the Cloud Monitoring UI.",
            "required": false,
            "path_tokens": [
              "metric",
              "prefix"
            ]
          },
          {
            "name": "GetClientOptions",
            "type": "array",
            "description": "GetClientOptions returns additional options to be passed to the underlying Google Cloud API client. Must be set programmatically (no support via declarative config). If GetClientOptions returns any options, the exporter will not add the default credentials, as those could conflict with options provided via GetClientOptions. Optional.",
            "required": false,
            "path_tokens": [
              "metric",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "metric",
              "endpoint"
            ]
          },
          {
            "name": "Compression",
            "type": "string",
            "description": "Compression specifies the compression format for Metrics and Logging gRPC requests. Supported values: gzip.",
            "required": false,
            "path_tokens": [
              "metric",
              "compression"
            ]
          },
          {
            "name": "UseInsecure",
            "type": "bool",
            "description": "Only has effect if Endpoint is not \"\"",
            "required": false,
            "path_tokens": [
              "metric",
              "use_insecure"
            ]
          },
          {
            "name": "GRPCPoolSize",
            "type": "int",
            "description": "GRPCPoolSize sets the size of the connection pool in the GCP client",
            "required": false,
            "path_tokens": [
              "metric",
              "grpc_pool_size"
            ]
          },
          {
            "name": "ResourceFilters",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "metric",
              "resource_filters"
            ]
          },
          {
            "name": "CumulativeNormalization",
            "type": "bool",
            "description": "CumulativeNormalization normalizes cumulative metrics without start times or with explicit reset points by subtracting subsequent points from the initial point. It is enabled by default. Since it caches starting points, it may result in increased memory usage.",
            "required": false,
            "path_tokens": [
              "metric",
              "cumulative_normalization"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "stef",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "zipkin",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Format",
            "type": "string",
            "description": "",
            "required": false,
            "default": "json",
            "path_tokens": [
              "format"
            ]
          },
          {
            "name": "DefaultServiceName",
            "type": "string",
            "description": "",
            "required": false,
            "default": "\u003cmissing service name\u003e",
            "path_tokens": [
              "default_service_name"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "syslog",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Syslog server address",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Port",
            "type": "int",
            "description": "Syslog server port (ignored for Unix sockets)",
            "required": false,
            "default": 514,
            "validation": {
              "max": "65535",
              "min": "1"
            },
            "path_tokens": [
              "port"
            ]
          },
          {
            "name": "Network",
            "type": "string",
            "description": "Network for syslog communication options: tcp, udp, unix",
            "required": false,
            "default": "confignet.TransportTypeTCP",
            "path_tokens": [
              "network"
            ]
          },
          {
            "name": "Protocol",
            "type": "string",
            "description": "Protocol of syslog messages options: rfc5424, rfc3164",
            "required": false,
            "default": "rfc5424",
            "path_tokens": [
              "protocol"
            ]
          },
          {
            "name": "EnableOctetCounting",
            "type": "bool",
            "description": "Whether or not to enable RFC 6587 Octet Counting.",
            "required": false,
            "path_tokens": [
              "enable_octet_counting"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "tencentcloudlogservice",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Region",
            "type": "string",
            "description": "LogService's Region, https://cloud.tencent.com/document/product/614/18940 for TencentCloud Kubernetes(or CVM), set ap-{region}.cls.tencentyun.com, eg ap-beijing.cls.tencentyun.com;  others set ap-{region}.cls.tencentcs.com, eg ap-beijing.cls.tencentcs.com",
            "required": false,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "LogSet",
            "type": "string",
            "description": "LogService's LogSet Name",
            "required": false,
            "path_tokens": [
              "logset"
            ]
          },
          {
            "name": "Topic",
            "type": "string",
            "description": "LogService's Topic Name",
            "required": false,
            "path_tokens": [
              "topic"
            ]
          },
          {
            "name": "SecretID",
            "type": "string",
            "description": "TencentCloud access key id",
            "required": false,
            "path_tokens": [
              "secret_id"
            ],
            "sensitive": true
          },
          {
            "name": "SecretKey",
            "type": "custom",
            "description": "TencentCloud access key secret",
            "required": false,
            "path_tokens": [
              "secret_key"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "splunkhec",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "enabled"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "max_size"
            ]
          },
          {
            "name": "isSet",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "batcher",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "LogDataEnabled",
            "type": "bool",
            "description": "LogDataEnabled can be used to disable sending logs by the exporter.",
            "required": false,
            "default": true,
            "path_tokens": [
              "log_data_enabled"
            ]
          },
          {
            "name": "ProfilingDataEnabled",
            "type": "bool",
            "description": "ProfilingDataEnabled can be used to disable sending profiling data by the exporter.",
            "required": false,
            "default": true,
            "path_tokens": [
              "profiling_data_enabled"
            ]
          },
          {
            "name": "Token",
            "type": "custom",
            "description": "HEC Token is the authentication token provided by Splunk: https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector.",
            "required": true,
            "path_tokens": [
              "token"
            ],
            "sensitive": true
          },
          {
            "name": "Source",
            "type": "string",
            "description": "Optional Splunk source: https://docs.splunk.com/Splexicon:Source. Sources identify the incoming data.",
            "required": false,
            "path_tokens": [
              "source"
            ]
          },
          {
            "name": "SourceType",
            "type": "string",
            "description": "Optional Splunk source type: https://docs.splunk.com/Splexicon:Sourcetype.",
            "required": false,
            "path_tokens": [
              "sourcetype"
            ]
          },
          {
            "name": "Index",
            "type": "string",
            "description": "Splunk index, optional name of the Splunk index.",
            "required": false,
            "path_tokens": [
              "index"
            ]
          },
          {
            "name": "DisableCompression",
            "type": "bool",
            "description": "Disable GZip compression. Defaults to false.",
            "required": false,
            "default": false,
            "path_tokens": [
              "disable_compression"
            ]
          },
          {
            "name": "MaxContentLengthLogs",
            "type": "int",
            "description": "Maximum log payload size in bytes. Default value is 2097152 bytes (2MiB). Maximum allowed value is 838860800 (~ 800 MB).",
            "required": false,
            "default": 2097152,
            "path_tokens": [
              "max_content_length_logs"
            ]
          },
          {
            "name": "MaxContentLengthMetrics",
            "type": "int",
            "description": "Maximum metric payload size in bytes. Default value is 2097152 bytes (2MiB). Maximum allowed value is 838860800 (~ 800 MB).",
            "required": false,
            "default": 2097152,
            "path_tokens": [
              "max_content_length_metrics"
            ]
          },
          {
            "name": "MaxContentLengthTraces",
            "type": "int",
            "description": "Maximum trace payload size in bytes. Default value is 2097152 bytes (2MiB). Maximum allowed value is 838860800 (~ 800 MB).",
            "required": false,
            "default": 2097152,
            "path_tokens": [
              "max_content_length_traces"
            ]
          },
          {
            "name": "MaxEventSize",
            "type": "int",
            "description": "Maximum payload size, raw uncompressed. Default value is 5242880 bytes (5MiB). Maximum allowed value is 838860800 (~ 800 MB).",
            "required": false,
            "default": 5242880,
            "path_tokens": [
              "max_event_size"
            ]
          },
          {
            "name": "SplunkAppName",
            "type": "string",
            "description": "App name is used to track telemetry information for Splunk App's using HEC by App name. Defaults to \"OpenTelemetry Collector Contrib\".",
            "required": false,
            "default": "OpenTelemetry Collector Contrib",
            "path_tokens": [
              "splunk_app_name"
            ]
          },
          {
            "name": "SplunkAppVersion",
            "type": "string",
            "description": "App version is used to track telemetry information for Splunk App's using HEC by App version. Defaults to the current OpenTelemetry Collector Contrib build version.",
            "required": false,
            "path_tokens": [
              "splunk_app_version"
            ]
          },
          {
            "name": "Source",
            "type": "string",
            "description": "Source indicates the mapping of the source field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "otel_attrs_to_hec_metadata",
              "source"
            ]
          },
          {
            "name": "SourceType",
            "type": "string",
            "description": "SourceType indicates the mapping of the sourcetype field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "otel_attrs_to_hec_metadata",
              "sourcetype"
            ]
          },
          {
            "name": "Index",
            "type": "string",
            "description": "Index indicates the mapping of the index field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "otel_attrs_to_hec_metadata",
              "index"
            ]
          },
          {
            "name": "Host",
            "type": "string",
            "description": "Host indicates the mapping of the host field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "otel_attrs_to_hec_metadata",
              "host"
            ]
          },
          {
            "name": "Source",
            "type": "string",
            "description": "Source indicates the mapping of the source field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "source"
            ]
          },
          {
            "name": "SourceType",
            "type": "string",
            "description": "SourceType indicates the mapping of the sourcetype field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "sourcetype"
            ]
          },
          {
            "name": "Index",
            "type": "string",
            "description": "Index indicates the mapping of the index field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "index"
            ]
          },
          {
            "name": "Host",
            "type": "string",
            "description": "Host indicates the mapping of the host field to a specific unified model attribute.",
            "required": false,
            "path_tokens": [
              "hec_metadata_to_otel_attrs",
              "host"
            ]
          },
          {
            "name": "SeverityText",
            "type": "string",
            "description": "SeverityText informs the exporter to map the severity text field to a specific HEC field.",
            "required": false,
            "default": "splunk.DefaultSeverityTextLabel",
            "path_tokens": [
              "otel_to_hec_fields",
              "severity_text"
            ]
          },
          {
            "name": "SeverityNumber",
            "type": "string",
            "description": "SeverityNumber informs the exporter to map the severity number field to a specific HEC field.",
            "required": false,
            "default": "splunk.DefaultSeverityNumberLabel",
            "path_tokens": [
              "otel_to_hec_fields",
              "severity_number"
            ]
          },
          {
            "name": "HealthPath",
            "type": "string",
            "description": "HealthPath for health API, default is '/services/collector/health'",
            "required": false,
            "default": "splunk.DefaultHealthPath",
            "path_tokens": [
              "health_path"
            ]
          },
          {
            "name": "HecHealthCheckEnabled",
            "type": "bool",
            "description": "HecHealthCheckEnabled can be used to verify Splunk HEC health on exporter's startup",
            "required": false,
            "default": false,
            "path_tokens": [
              "health_check_enabled"
            ]
          },
          {
            "name": "ExportRaw",
            "type": "bool",
            "description": "ExportRaw to send only the log's body, targeting a Splunk HEC raw endpoint.",
            "required": false,
            "default": false,
            "path_tokens": [
              "export_raw"
            ]
          },
          {
            "name": "UseMultiMetricFormat",
            "type": "bool",
            "description": "UseMultiMetricFormat combines metric events to save space during ingestion.",
            "required": false,
            "path_tokens": [
              "use_multi_metric_format"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "Interval represents the time interval for the heartbeat interval. If nothing or 0 is set, heartbeat is not enabled. A heartbeat is an event sent to _internal index with metadata for the current collector/host.",
            "required": false,
            "path_tokens": [
              "heartbeat",
              "interval"
            ],
            "format": "duration"
          },
          {
            "name": "Startup",
            "type": "bool",
            "description": "Startup is used to send heartbeat events on exporter's startup.",
            "required": false,
            "path_tokens": [
              "heartbeat",
              "startup"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled is the bool to enable telemetry inside splunk hec exporter",
            "required": false,
            "default": false,
            "path_tokens": [
              "telemetry",
              "enabled"
            ]
          },
          {
            "name": "OverrideMetricsNames",
            "type": "stringMap",
            "description": "OverrideMetricsNames is the map to override metrics for internal metrics in splunk hec exporter",
            "required": false,
            "path_tokens": [
              "telemetry",
              "override_metrics_names"
            ]
          },
          {
            "name": "ExtraAttributes",
            "type": "stringMap",
            "description": "ExtraAttributes is the extra attributes for metrics inside splunk hex exporter",
            "required": false,
            "path_tokens": [
              "telemetry",
              "extra_attributes"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "tinybird",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": true,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "default": 524288,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "default": "configcompression.TypeZstd",
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "default": "defaultTransport.MaxIdleConns",
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "default": "defaultTransport.IdleConnTimeout",
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "default": true,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Token",
            "type": "custom",
            "description": "Tinybird API token.",
            "required": false,
            "default": "",
            "path_tokens": [
              "token"
            ],
            "sensitive": true
          },
          {
            "name": "Datasource",
            "type": "string",
            "description": "",
            "required": false,
            "default": "gauge",
            "path_tokens": [
              "metrics",
              "gauge",
              "datasource"
            ]
          },
          {
            "name": "Datasource",
            "type": "string",
            "description": "",
            "required": false,
            "default": "sum",
            "path_tokens": [
              "metrics",
              "sum",
              "datasource"
            ]
          },
          {
            "name": "Datasource",
            "type": "string",
            "description": "",
            "required": false,
            "default": "histogram",
            "path_tokens": [
              "metrics",
              "histogram",
              "datasource"
            ]
          },
          {
            "name": "Datasource",
            "type": "string",
            "description": "",
            "required": false,
            "default": "exponential_histogram",
            "path_tokens": [
              "metrics",
              "exponential_histogram",
              "datasource"
            ]
          },
          {
            "name": "Datasource",
            "type": "string",
            "description": "",
            "required": false,
            "default": "traces",
            "path_tokens": [
              "traces",
              "datasource"
            ]
          },
          {
            "name": "Datasource",
            "type": "string",
            "description": "",
            "required": false,
            "default": "logs",
            "path_tokens": [
              "logs",
              "datasource"
            ]
          },
          {
            "name": "Wait",
            "type": "bool",
            "description": "Wait for data to be ingested before returning a response.",
            "required": false,
            "default": false,
            "path_tokens": [
              "wait"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sumologic",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "CompressEncoding",
            "type": "custom",
            "description": "Compression encoding format, either empty string, gzip or deflate (default gzip) Empty string means no compression NOTE: CompressEncoding is deprecated and will be removed in an upcoming release",
            "required": false,
            "path_tokens": [
              "compress_encoding"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "Max HTTP request body size in bytes before compression (if applied). By default 1MB is recommended.",
            "required": false,
            "default": 1048576,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "LogFormat",
            "type": "enum",
            "description": "Logs related configuration Format to post logs into Sumo. (default json)   * text - Logs will appear in Sumo Logic in text format.   * json - Logs will appear in Sumo Logic in json format.   * otlp - Logs will be send in otlp format and will appear in Sumo Logic:     * in json format if record level attributes exists     * in text format in case of no level attributes See Sumo Logic documentation for more details: https://help.sumologic.com/docs/send-data/opentelemetry-collector/data-source-configurations/mapping-records-resources/",
            "required": false,
            "path_tokens": [
              "log_format"
            ],
            "enum_values": [
              "json",
              "otlp",
              "text"
            ]
          },
          {
            "name": "MetricFormat",
            "type": "enum",
            "description": "Metrics related configuration The format of metrics you will be sending, either otlp or prometheus (Default is otlp)",
            "required": false,
            "path_tokens": [
              "metric_format"
            ],
            "enum_values": [
              "carbon2",
              "graphite",
              "otlp",
              "prometheus"
            ]
          },
          {
            "name": "DecomposeOtlpHistograms",
            "type": "bool",
            "description": "Decompose OTLP Histograms into individual metrics, similar to how they're represented in Prometheus format",
            "required": false,
            "path_tokens": [
              "decompose_otlp_histograms"
            ]
          },
          {
            "name": "Client",
            "type": "string",
            "description": "Sumo specific options Name of the client",
            "required": false,
            "default": "otelcol",
            "path_tokens": [
              "client"
            ]
          },
          {
            "name": "StickySessionEnabled",
            "type": "bool",
            "description": "StickySessionEnabled defines if sticky session support is enable. By default this is false.",
            "required": false,
            "default": false,
            "path_tokens": [
              "sticky_session_enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "ack",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "storage",
              "[]"
            ]
          },
          {
            "name": "MaxNumPartition",
            "type": "int",
            "description": "MaxNumPartition Specifies the maximum number of partitions that clients can acquire for this extension instance. Implementation defines how limit exceeding should be handled.",
            "required": false,
            "default": "1_000_000",
            "path_tokens": [
              "max_number_of_partition"
            ]
          },
          {
            "name": "MaxNumPendingAcksPerPartition",
            "type": "int",
            "description": "MaxNumPendingAcksPerPartition Specifies the maximum number of ackIDs and their corresponding status information that are waiting to be queried in each partition.",
            "required": false,
            "default": "1_000_000",
            "path_tokens": [
              "max_number_of_pending_acks_per_partition"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "otelarrow",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the timeout for every attempt to send data to the backend. A zero timeout means no timeout.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "default": true,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "default": "backoff.DefaultRandomizationFactor",
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "default": "backoff.DefaultMultiplier",
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "default": "30s",
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "NumStreams",
            "type": "int",
            "description": "NumStreams determines the number of OTel Arrow streams.",
            "required": false,
            "default": "arrow.DefaultNumStreams",
            "path_tokens": [
              "arrow",
              "num_streams"
            ]
          },
          {
            "name": "MaxStreamLifetime",
            "type": "duration",
            "description": "MaxStreamLifetime should be set to less than the value of grpc: keepalive: max_connection_age_grace plus the timeout.",
            "required": false,
            "default": "arrow.DefaultMaxStreamLifetime",
            "path_tokens": [
              "arrow",
              "max_stream_lifetime"
            ],
            "format": "duration"
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "Level is meaningful in the range [0, 10].  No invalid values, they all map into 4 default configurations.  (default: 5) See `zstdlib.WithEncoderLevel()`.",
            "required": false,
            "default": 5,
            "path_tokens": [
              "arrow",
              "zstd",
              "level"
            ],
            "enum_values": [
              "defaultlevel",
              "maxlevel",
              "minlevel"
            ]
          },
          {
            "name": "WindowSizeMiB",
            "type": "int",
            "description": "WindowSizeMiB is a Zstd-library parameter that controls how much window of text is visible to the compressor at a time. It is the dominant factor that determines memory usage. If zero, the window size is determined by level.  (default: 0) See `zstdlib.WithWindowSize()`.",
            "required": false,
            "path_tokens": [
              "arrow",
              "zstd",
              "window_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "Concurrency",
            "type": "int",
            "description": "Concurrency is a Zstd-library parameter that configures the use of background goroutines to improve compression speed. 0 means to let the library decide (it will use up to GOMAXPROCS), and 1 means to avoid background workers.  (default: 1) See `zstdlib.WithEncoderConcurrency()`.",
            "required": false,
            "default": 1,
            "path_tokens": [
              "arrow",
              "zstd",
              "concurrency"
            ]
          },
          {
            "name": "PayloadCompression",
            "type": "enum",
            "description": "PayloadCompression is applied on the Arrow IPC stream internally and may have different results from using gRPC-level compression.  This is disabled by default, since gRPC-level compression is enabled by default.  This can be set to \"zstd\" to turn on Arrow-Zstd compression. Note that `Zstd` applies to gRPC, not Arrow compression.",
            "required": false,
            "default": "arrow.DefaultPayloadCompression",
            "path_tokens": [
              "arrow",
              "payload_compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Disabled",
            "type": "bool",
            "description": "Disabled prevents using OTel-Arrow streams.  The exporter falls back to standard OTLP.",
            "required": false,
            "path_tokens": [
              "arrow",
              "disabled"
            ]
          },
          {
            "name": "DisableDowngrade",
            "type": "bool",
            "description": "DisableDowngrade prevents this exporter from fallback back to standard OTLP.  If the Arrow service is unavailable, it will retry and/or fail.",
            "required": false,
            "path_tokens": [
              "arrow",
              "disable_downgrade"
            ]
          },
          {
            "name": "Prioritizer",
            "type": "enum",
            "description": "Prioritizer is a policy name for how load is distributed across streams.",
            "required": false,
            "default": "arrow.DefaultPrioritizer",
            "path_tokens": [
              "arrow",
              "prioritizer"
            ],
            "enum_values": [
              "leastloaded"
            ]
          },
          {
            "name": "UserDialOptions",
            "type": "array",
            "description": "UserDialOptions cannot be configured via `mapstructure` schemes.  This is useful for custom purposes where the exporter is built and configured via code instead of yaml. Uses include custom dialer, custom user-agent, etc.",
            "required": false,
            "path_tokens": [
              "[]",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "MetadataKeys",
            "type": "stringArray",
            "description": "MetadataKeys is a list of client.Metadata keys that will be used to form distinct exporters.  If this setting is empty, a single exporter instance will be used.  When this setting is not empty, one exporter will be used per distinct combination of values for the listed metadata keys. Empty value and unset metadata are treated as distinct cases. Entries are case-insensitive.  Duplicated entries will trigger a validation error.",
            "required": false,
            "path_tokens": [
              "metadata_keys"
            ]
          },
          {
            "name": "MetadataCardinalityLimit",
            "type": "int",
            "description": "MetadataCardinalityLimit indicates the maximum number of exporter instances that will be created through a distinct combination of MetadataKeys.",
            "required": false,
            "path_tokens": [
              "metadata_cardinality_limit"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "asapauth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "KeyID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "key_id"
            ]
          },
          {
            "name": "TTL",
            "type": "duration",
            "description": "",
            "required": false,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "ttl"
            ],
            "format": "duration"
          },
          {
            "name": "Issuer",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "issuer"
            ]
          },
          {
            "name": "Audience",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "audience"
            ]
          },
          {
            "name": "PrivateKey",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "private_key"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "bearertokenauth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Header",
            "type": "string",
            "description": "Header specifies the auth-header for the token. Defaults to \"Authorization\"",
            "required": false,
            "default": "Authorization",
            "path_tokens": [
              "header"
            ]
          },
          {
            "name": "Scheme",
            "type": "string",
            "description": "Scheme specifies the auth-scheme for the token. Defaults to \"Bearer\"",
            "required": false,
            "default": "Bearer",
            "path_tokens": [
              "scheme"
            ]
          },
          {
            "name": "BearerToken",
            "type": "custom",
            "description": "BearerToken specifies the bearer token to use for every RPC.",
            "required": false,
            "validation": {
              "anyOf": "token,filename"
            },
            "path_tokens": [
              "token"
            ],
            "sensitive": true
          },
          {
            "name": "Tokens",
            "type": "array",
            "description": "Tokens specifies multiple bearer tokens to use for every RPC.",
            "required": false,
            "path_tokens": [
              "tokens"
            ],
            "sensitive": true
          },
          {
            "name": "Filename",
            "type": "string",
            "description": "Filename points to a file that contains the bearer token(s) to use for every RPC.",
            "required": false,
            "validation": {
              "anyOf": "token,filename"
            },
            "path_tokens": [
              "filename"
            ]
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "anyOf",
          "keys": [
            [
              "filename"
            ],
            [
              "token"
            ]
          ]
        }
      ]
    },
    {
      "name": "cgroupruntime",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "gomaxprocs",
              "enabled"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "default": true,
            "path_tokens": [
              "gomemlimit",
              "enabled"
            ]
          },
          {
            "name": "Ratio",
            "type": "double",
            "description": "",
            "required": false,
            "default": 0.9,
            "validation": {
              "max": "1",
              "minExclusive": "0"
            },
            "path_tokens": [
              "gomemlimit",
              "ratio"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "azureauth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ClientID",
            "type": "string",
            "description": "if left empty, then it is system managed",
            "required": false,
            "path_tokens": [
              "managed_identity",
              "client_id"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "workload_identity",
              "client_id"
            ]
          },
          {
            "name": "TenantID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "workload_identity",
              "tenant_id"
            ]
          },
          {
            "name": "FederatedTokenFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "workload_identity",
              "federated_token_file"
            ],
            "sensitive": true
          },
          {
            "name": "TenantID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "service_principal",
              "tenant_id"
            ]
          },
          {
            "name": "ClientID",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "service_principal",
              "client_id"
            ]
          },
          {
            "name": "ClientSecret",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "service_principal",
              "client_secret"
            ],
            "sensitive": true
          },
          {
            "name": "ClientCertificatePath",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "service_principal",
              "client_certificate_path"
            ],
            "format": "pem",
            "sensitive": true
          },
          {
            "name": "UseDefault",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "use_default"
            ]
          },
          {
            "name": "Scopes",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "scopes"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "basicauth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "File",
            "type": "string",
            "description": "Path to the htpasswd file.",
            "required": false,
            "path_tokens": [
              "htpasswd",
              "file"
            ]
          },
          {
            "name": "Inline",
            "type": "string",
            "description": "Inline contents of the htpasswd file.",
            "required": false,
            "path_tokens": [
              "htpasswd",
              "inline"
            ]
          },
          {
            "name": "Username",
            "type": "string",
            "description": "Username holds the username to use for client authentication.",
            "required": false,
            "path_tokens": [
              "client_auth",
              "username"
            ]
          },
          {
            "name": "Password",
            "type": "custom",
            "description": "Password holds the password to use for client authentication.",
            "required": false,
            "path_tokens": [
              "client_auth",
              "password"
            ],
            "sensitive": true
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "awsproxy",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. The address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ProxyAddress",
            "type": "string",
            "description": "ProxyAddress defines the proxy address that the local TCP server forwards HTTP requests to AWS X-Ray backend through.",
            "required": false,
            "path_tokens": [
              "proxy_address"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Region",
            "type": "string",
            "description": "Region is the AWS region the local TCP server forwards requests to.",
            "required": false,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "RoleARN",
            "type": "string",
            "description": "RoleARN is the IAM role used by the local TCP server when communicating with the AWS X-Ray service.",
            "required": false,
            "path_tokens": [
              "role_arn"
            ]
          },
          {
            "name": "AWSEndpoint",
            "type": "string",
            "description": "AWSEndpoint is the X-Ray service endpoint which the local TCP server forwards requests to.",
            "required": false,
            "path_tokens": [
              "aws_endpoint"
            ]
          },
          {
            "name": "LocalMode",
            "type": "bool",
            "description": "LocalMode determines whether the EC2 instance metadata endpoint will be called or not. Set to `true` to skip EC2 instance metadata check.",
            "required": false,
            "path_tokens": [
              "local_mode"
            ]
          },
          {
            "name": "ServiceName",
            "type": "string",
            "description": "ServiceName determines which service the requests are sent to. will be default to `xray`. This is mandatory for SigV4",
            "required": false,
            "path_tokens": [
              "service_name"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "signalfx",
      "type": "exporter",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enqueue and batch before exporting.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "enabled"
            ]
          },
          {
            "name": "WaitForResult",
            "type": "bool",
            "description": "WaitForResult determines if incoming requests are blocked until the request is processed or not. Currently, this option is not available when persistent queue is configured using the storage configuration.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "wait_for_result"
            ]
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "sizer",
              "val"
            ]
          },
          {
            "name": "QueueSize",
            "type": "int",
            "description": "QueueSize represents the maximum data size allowed for concurrent storage and processing.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "queue_size"
            ]
          },
          {
            "name": "BlockOnOverflow",
            "type": "bool",
            "description": "BlockOnOverflow determines the behavior when the component's TotalSize limit is reached. If true, the component will wait for space; otherwise, operations will immediately return a retryable error.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "block_on_overflow"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "storage",
              "[]"
            ]
          },
          {
            "name": "NumConsumers",
            "type": "int",
            "description": "NumConsumers is the maximum number of concurrent consumers from the queue. This applies across all different optional configurations from above (e.g. wait_for_result, blockOnOverflow, persistent, etc.). TODO: This will also control the maximum number of shards, when supported:  https://github.com/open-telemetry/opentelemetry-collector/issues/12473.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "num_consumers"
            ]
          },
          {
            "name": "FlushTimeout",
            "type": "duration",
            "description": "FlushTimeout sets the time after which a batch will be sent regardless of its size.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "flush_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "val",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "sizer",
              "val"
            ]
          },
          {
            "name": "MinSize",
            "type": "int",
            "description": "MinSize defines the configuration for the minimum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "min_size"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "MaxSize defines the configuration for the maximum size of a batch.",
            "required": false,
            "path_tokens": [
              "sending_queue",
              "batch",
              "max_size"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not retry sending batches in case of export failure.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "enabled"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "InitialInterval the time to wait after the first failure before retrying.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RandomizationFactor",
            "type": "double",
            "description": "RandomizationFactor is a random factor used to calculate next backoffs Randomized interval = RetryInterval * (1 ± RandomizationFactor)",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "randomization_factor"
            ]
          },
          {
            "name": "Multiplier",
            "type": "double",
            "description": "Multiplier is the value multiplied by the backoff interval bounds",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "multiplier"
            ]
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between consecutive retries will always be `MaxInterval`.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a request/batch. Once this value is reached, the data is discarded. If set to 0, the retries are never stopped.",
            "required": false,
            "path_tokens": [
              "retry_on_failure",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "AccessToken",
            "type": "custom",
            "description": "AccessToken is the authentication token provided by SignalFx.",
            "required": true,
            "path_tokens": [
              "access_token"
            ],
            "sensitive": true
          },
          {
            "name": "Realm",
            "type": "string",
            "description": "Realm is the SignalFx realm where data is going to be sent to.",
            "required": true,
            "path_tokens": [
              "realm"
            ]
          },
          {
            "name": "IngestURL",
            "type": "string",
            "description": "IngestURL is the destination to where SignalFx metrics will be sent to, it is intended for tests and debugging. The value of Realm is ignored if the URL is specified. The exporter will automatically append the appropriate path: \"/v2/datapoint\" for metrics, and \"/v2/event\" for events.",
            "required": false,
            "path_tokens": [
              "ingest_url"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "ingest_tls",
              "server_name_override"
            ]
          },
          {
            "name": "APIURL",
            "type": "string",
            "description": "APIURL is the destination to where SignalFx metadata will be sent. This value takes precedence over the value of Realm",
            "required": false,
            "path_tokens": [
              "api_url"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "api_tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "api_tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "api_tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "api_tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "api_tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "api_tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "api_tls",
              "server_name_override"
            ]
          },
          {
            "name": "LogDataPoints",
            "type": "bool",
            "description": "Whether to log datapoints dispatched to Splunk Observability Cloud",
            "required": false,
            "path_tokens": [
              "log_data_points"
            ]
          },
          {
            "name": "LogDimensionUpdates",
            "type": "bool",
            "description": "Whether to log dimension updates being sent to SignalFx.",
            "required": false,
            "path_tokens": [
              "log_dimension_updates"
            ]
          },
          {
            "name": "MaxBuffered",
            "type": "int",
            "description": "",
            "required": false,
            "default": 10000,
            "path_tokens": [
              "dimension_client",
              "max_buffered"
            ]
          },
          {
            "name": "SendDelay",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "dimension_client",
              "send_delay"
            ],
            "format": "duration"
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "",
            "required": false,
            "default": 20,
            "path_tokens": [
              "dimension_client",
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "",
            "required": false,
            "default": 20,
            "path_tokens": [
              "dimension_client",
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "",
            "required": false,
            "default": 20,
            "path_tokens": [
              "dimension_client",
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "dimension_client",
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "dimension_client",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "AccessTokenPassthrough",
            "type": "bool",
            "description": "AccessTokenPassthrough indicates whether to associate datapoints with an organization access token received in request.",
            "required": false,
            "path_tokens": [
              "access_token_passthrough"
            ],
            "sensitive": true
          },
          {
            "name": "DisableDefaultTranslationRules",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "disable_default_translation_rules"
            ]
          },
          {
            "name": "DeltaTranslationTTL",
            "type": "int",
            "description": "DeltaTranslationTTL specifies in seconds the max duration to keep the most recent datapoint for any `delta_metric` specified in TranslationRules. Default is 3600s.",
            "required": false,
            "default": 3600,
            "path_tokens": [
              "delta_translation_ttl"
            ]
          },
          {
            "name": "SyncHostMetadata",
            "type": "bool",
            "description": "SyncHostMetadata defines if the exporter should scrape host metadata and sends it as property updates to SignalFx backend. IMPORTANT: Host metadata synchronization relies on `resourcedetection` processor.            If this option is enabled make sure that `resourcedetection` processor            is enabled in the pipeline with one of the cloud provider detectors            or environment variable detector setting a unique value to            `host.name` attribute within your k8s cluster. Also keep override            And keep `override=true` in resourcedetection config.",
            "required": false,
            "path_tokens": [
              "sync_host_metadata"
            ]
          },
          {
            "name": "RootPath",
            "type": "string",
            "description": "RootPath is the host's root directory used when syncing metadata; applies to linux only.",
            "required": false,
            "path_tokens": [
              "root_path"
            ]
          },
          {
            "name": "ExcludeMetrics",
            "type": "array",
            "description": "ExcludeMetrics defines dpfilter.MetricFilters that will determine metrics to be excluded from sending to SignalFx backend. If translations enabled with TranslationRules options, the exclusion will be applied on translated metrics.",
            "required": false,
            "path_tokens": [
              "exclude_metrics"
            ]
          },
          {
            "name": "IncludeMetrics",
            "type": "array",
            "description": "IncludeMetrics defines dpfilter.MetricFilters to override exclusion any of metric. This option can be used to included metrics that are otherwise dropped by default. See ./translation/default_metrics.go for a list of metrics that are dropped by default.",
            "required": false,
            "path_tokens": [
              "include_metrics"
            ]
          },
          {
            "name": "ExcludeProperties",
            "type": "array",
            "description": "ExcludeProperties defines dpfilter.PropertyFilters to prevent inclusion of properties to include with dimension updates to the SignalFx backend.",
            "required": false,
            "path_tokens": [
              "exclude_properties"
            ]
          },
          {
            "name": "NonAlphanumericDimensionChars",
            "type": "string",
            "description": "NonAlphanumericDimensionChars is a list of allowable characters, in addition to alphanumeric ones, to be used in a dimension key.",
            "required": false,
            "default": "_-.",
            "path_tokens": [
              "nonalphanumeric_dimension_chars"
            ]
          },
          {
            "name": "DropHistogramBuckets",
            "type": "bool",
            "description": "Whether to drop histogram bucket metrics dispatched to Splunk Observability. Default value is set to false.",
            "required": false,
            "path_tokens": [
              "drop_histogram_buckets"
            ]
          },
          {
            "name": "SendOTLPHistograms",
            "type": "bool",
            "description": "Whether to send histogram metrics in OTLP format to Splunk Observability. Default value is set to false.",
            "required": false,
            "path_tokens": [
              "send_otlp_histograms"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "healthcheck",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "Path represents the path the health check service will serve. The default path is \"/\".",
            "required": false,
            "default": "/",
            "path_tokens": [
              "path"
            ]
          },
          {
            "name": "Healthy",
            "type": "string",
            "description": "Healthy represents the body of the response returned when the collector is healthy. The default value is \"\"",
            "required": false,
            "path_tokens": [
              "response_body",
              "healthy"
            ]
          },
          {
            "name": "Unhealthy",
            "type": "string",
            "description": "Unhealthy represents the body of the response returned when the collector is unhealthy. The default value is \"\"",
            "required": false,
            "path_tokens": [
              "response_body",
              "unhealthy"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enable collector pipeline check.",
            "required": false,
            "default": false,
            "path_tokens": [
              "check_collector_pipeline",
              "enabled"
            ]
          },
          {
            "name": "Interval",
            "type": "string",
            "description": "Interval the time range to check healthy status of collector pipeline",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "check_collector_pipeline",
              "interval"
            ]
          },
          {
            "name": "ExporterFailureThreshold",
            "type": "int",
            "description": "ExporterFailureThreshold is the threshold of exporter failure numbers during the Interval",
            "required": false,
            "default": 5,
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "check_collector_pipeline",
              "exporter_failure_threshold"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "headerssetter",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "HeadersConfig",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "headers"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "googleclientauth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "oidcauth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Attribute",
            "type": "string",
            "description": "The attribute (header name) to look for auth data. Optional, default value: \"authorization\".",
            "required": false,
            "default": "authorization",
            "path_tokens": [
              "attribute"
            ]
          },
          {
            "name": "IssuerURL",
            "type": "string",
            "description": "Deprecated: use Providers instead. IssuerURL is the base URL for the OIDC provider. Required.",
            "required": true,
            "path_tokens": [
              "issuer_url"
            ]
          },
          {
            "name": "Audience",
            "type": "string",
            "description": "Deprecated: use Providers instead. Audience of the token, used during the verification. For example: \"https://accounts.google.com\" or \"https://login.salesforce.com\". Required unless IgnoreAudience is true.",
            "required": true,
            "path_tokens": [
              "audience"
            ]
          },
          {
            "name": "IgnoreAudience",
            "type": "bool",
            "description": "Deprecated: use Providers instead. When true, this skips validating the audience field. Optional.",
            "required": false,
            "path_tokens": [
              "ignore_audience"
            ]
          },
          {
            "name": "IssuerCAPath",
            "type": "string",
            "description": "Deprecated: use Providers instead. The local path for the issuer CA's TLS server cert. Optional.",
            "required": false,
            "path_tokens": [
              "issuer_ca_path"
            ]
          },
          {
            "name": "UsernameClaim",
            "type": "string",
            "description": "Deprecated: use Providers instead. The claim to use as the username, in case the token's 'sub' isn't the suitable source. Optional.",
            "required": false,
            "path_tokens": [
              "username_claim"
            ]
          },
          {
            "name": "GroupsClaim",
            "type": "string",
            "description": "Deprecated: use Providers instead. The claim that holds the subject's group membership information. Optional.",
            "required": false,
            "path_tokens": [
              "groups_claim"
            ]
          },
          {
            "name": "Providers",
            "type": "array",
            "description": "Providers allows configuring multiple OIDC providers. Use the getProviderConfigs() method to get the full list of providers, including the legacy configuration.",
            "required": false,
            "path_tokens": [
              "providers"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "httpforwarder",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "ingress",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "ingress",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "ingress",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "ingress",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "ingress",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "ingress",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "ingress",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "ingress",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "ingress",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "ingress",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "ingress",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "ingress",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "ingress",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "ingress",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "ingress",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "ingress",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "egress",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "egress",
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "egress",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "egress",
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "egress",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "egress",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "egress",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "egress",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "egress",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "egress",
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "default": "defaultTransport.MaxIdleConns",
            "path_tokens": [
              "egress",
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "egress",
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "egress",
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "default": "defaultTransport.IdleConnTimeout",
            "path_tokens": [
              "egress",
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "egress",
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "egress",
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "egress",
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "egress",
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "default": true,
            "path_tokens": [
              "egress",
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "egress",
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "jaegerremotesampling",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "http",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "http",
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "http",
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "http",
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "http",
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "http",
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "http",
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "http",
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "http",
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "http",
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "http",
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "http",
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "http",
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "http",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. For TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "grpc",
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Transport",
            "type": "enum",
            "description": "Transport to use. Allowed protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only), \"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".",
            "required": false,
            "path_tokens": [
              "grpc",
              "transport"
            ],
            "enum_values": [
              "ip",
              "ip4",
              "ip6",
              "tcp",
              "tcp4",
              "tcp6",
              "udp",
              "udp4",
              "udp6",
              "unix",
              "unixgram",
              "unixpacket"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "grpc",
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "ClientCAFile",
            "type": "string",
            "description": "Path to the TLS cert to use by the server to verify a client certificate. (optional) This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "client_ca_file"
            ]
          },
          {
            "name": "ReloadClientCAFile",
            "type": "bool",
            "description": "Reload the ClientCAs file when it is modified (optional, default false)",
            "required": false,
            "path_tokens": [
              "grpc",
              "tls",
              "client_ca_file_reload"
            ]
          },
          {
            "name": "MaxRecvMsgSizeMiB",
            "type": "int",
            "description": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.",
            "required": false,
            "path_tokens": [
              "grpc",
              "max_recv_msg_size_mib"
            ],
            "unit": "MiB"
          },
          {
            "name": "MaxConcurrentStreams",
            "type": "int",
            "description": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport. It has effect only for streaming RPCs.",
            "required": false,
            "path_tokens": [
              "grpc",
              "max_concurrent_streams"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize. (https://godoc.org/google.golang.org/grpc#ReadBufferSize).",
            "required": false,
            "path_tokens": [
              "grpc",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize. (https://godoc.org/google.golang.org/grpc#WriteBufferSize).",
            "required": false,
            "path_tokens": [
              "grpc",
              "write_buffer_size"
            ]
          },
          {
            "name": "MaxConnectionIdle",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_idle"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAge",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age"
            ],
            "format": "duration"
          },
          {
            "name": "MaxConnectionAgeGrace",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "keepalive",
              "server_parameters",
              "max_connection_age_grace"
            ],
            "format": "duration"
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "keepalive",
              "server_parameters",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "keepalive",
              "server_parameters",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "MinTime",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "keepalive",
              "enforcement_policy",
              "min_time"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "keepalive",
              "enforcement_policy",
              "permit_without_stream"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "grpc",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "Include propagates the incoming connection's metadata to downstream consumers.",
            "required": false,
            "path_tokens": [
              "grpc",
              "include_metadata"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC server.",
            "required": false,
            "path_tokens": [
              "grpc",
              "middlewares"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target to which the exporter is going to send traces or metrics, using the gRPC protocol. The valid syntax is described at https://github.com/grpc/grpc/blob/master/doc/naming.md.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Time",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "keepalive",
              "time"
            ],
            "format": "duration"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "keepalive",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "PermitWithoutStream",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "keepalive",
              "permit_without_stream"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for gRPC client. See grpc.WithReadBufferSize. (https://godoc.org/google.golang.org/grpc#WithReadBufferSize).",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for gRPC gRPC. See grpc.WithWriteBufferSize. (https://godoc.org/google.golang.org/grpc#WithWriteBufferSize).",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "write_buffer_size"
            ]
          },
          {
            "name": "WaitForReady",
            "type": "bool",
            "description": "WaitForReady parameter configures client to wait for ready state before sending data. (https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "wait_for_ready"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "The headers associated with gRPC requests.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "BalancerName",
            "type": "string",
            "description": "Sets the balancer in grpclb_policy to discover the servers. Default is pick_first. https://github.com/grpc/grpc-go/blob/master/examples/features/load_balancing/README.md",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "balancer_name"
            ]
          },
          {
            "name": "Authority",
            "type": "string",
            "description": "WithAuthority parameter configures client to rewrite \":authority\" header (godoc.org/google.golang.org/grpc#WithAuthority)",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "authority"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares for the gRPC client.",
            "required": false,
            "path_tokens": [
              "source",
              "remote",
              "middlewares"
            ]
          },
          {
            "name": "File",
            "type": "string",
            "description": "File specifies a local file as the strategies source",
            "required": false,
            "validation": {
              "anyOf": "source.file,source.remote"
            },
            "path_tokens": [
              "source",
              "file"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval determines the periodicity to refresh the strategies",
            "required": false,
            "path_tokens": [
              "source",
              "reload_interval"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "anyOf",
          "keys": [
            [
              "grpc"
            ],
            [
              "http"
            ]
          ]
        },
        {
          "kind": "oneOf",
          "keys": [
            [
              "source",
              "file"
            ],
            [
              "source",
              "remote"
            ]
          ]
        }
      ]
    },
    {
      "name": "opamp",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "endpoint"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "auth",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "ws",
              "auth",
              "[]"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "endpoint"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "auth",
              "[]"
            ],
            "item_type": "object"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "auth",
              "[]"
            ]
          },
          {
            "name": "PollingInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "server",
              "http",
              "polling_interval"
            ],
            "format": "duration"
          },
          {
            "name": "InstanceUID",
            "type": "string",
            "description": "InstanceUID is a UUID formatted as a 36 character string in canonical representation. Auto-generated on start if missing.",
            "required": false,
            "path_tokens": [
              "instance_uid"
            ]
          },
          {
            "name": "ReportsEffectiveConfig",
            "type": "bool",
            "description": "ReportsEffectiveConfig enables the OpAMP ReportsEffectiveConfig Capability. (default: true)",
            "required": false,
            "default": true,
            "path_tokens": [
              "capabilities",
              "reports_effective_config"
            ]
          },
          {
            "name": "ReportsHealth",
            "type": "bool",
            "description": "ReportsHealth enables the OpAMP ReportsHealth Capability. (default: true)",
            "required": false,
            "default": true,
            "path_tokens": [
              "capabilities",
              "reports_health"
            ]
          },
          {
            "name": "ReportsAvailableComponents",
            "type": "bool",
            "description": "ReportsAvailableComponents enables the OpAMP ReportsAvailableComponents Capability (default: true)",
            "required": false,
            "default": true,
            "path_tokens": [
              "capabilities",
              "reports_available_components"
            ]
          },
          {
            "name": "NonIdentifyingAttributes",
            "type": "stringMap",
            "description": "NonIdentifyingAttributes are a map of key-value pairs that may be specified to provide extra information about the agent to the OpAMP server.",
            "required": false,
            "path_tokens": [
              "agent_description",
              "non_identifying_attributes"
            ]
          },
          {
            "name": "IncludeResourceAttributes",
            "type": "bool",
            "description": "IncludeResourceAttributes determines whether the agent should copy its resource attributes to the non identifying attributes. (default: false)",
            "required": false,
            "path_tokens": [
              "agent_description",
              "include_resource_attributes"
            ]
          },
          {
            "name": "PPID",
            "type": "int",
            "description": "PPID is the process ID of the parent for the collector. If the PPID is specified, the extension will continuously poll for the status of the parent process, and emit a fatal error when the parent process is no longer running. If unspecified, the orphan detection logic does not run.",
            "required": false,
            "path_tokens": [
              "ppid"
            ]
          },
          {
            "name": "PPIDPollInterval",
            "type": "duration",
            "description": "PPIDPollInterval is the time between polling for whether PPID is running.",
            "required": false,
            "default": "5s",
            "path_tokens": [
              "ppid_poll_interval"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "remotetap",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "pprof",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the address for this network connection. The address has the form \"host:port\". The host must be a literal IP address, or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name. If the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or \"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout is the maximum amount of time a dial will wait for a connect to complete. The default is no timeout.",
            "required": false,
            "path_tokens": [
              "dialer",
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "BlockProfileFraction",
            "type": "int",
            "description": "Fraction of blocking events that are profiled. A value \u003c= 0 disables profiling. See https://golang.org/pkg/runtime/#SetBlockProfileRate for details.",
            "required": false,
            "path_tokens": [
              "block_profile_fraction"
            ]
          },
          {
            "name": "MutexProfileFraction",
            "type": "int",
            "description": "Fraction of mutex contention events that are profiled. A value \u003c= 0 disables profiling. See https://golang.org/pkg/runtime/#SetMutexProfileFraction for details.",
            "required": false,
            "path_tokens": [
              "mutex_profile_fraction"
            ]
          },
          {
            "name": "SaveToFile",
            "type": "string",
            "description": "Optional file name to save the CPU profile to. The profiling starts when the Collector starts and is saved to the file when the Collector is terminated.",
            "required": false,
            "path_tokens": [
              "save_to_file"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "k8sleaderelector",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "AuthType",
            "type": "enum",
            "description": "How to authenticate to the K8s API server.  This can be one of `none` (for no auth), `serviceAccount` (to use the standard service account token provided to the agent pod), or `kubeConfig` to use credentials from `~/.kube/config`.",
            "required": false,
            "path_tokens": [
              "auth_type"
            ],
            "enum_values": [
              "kubeConfig",
              "none",
              "serviceAccount",
              "tls"
            ]
          },
          {
            "name": "Context",
            "type": "string",
            "description": "When using auth_type `kubeConfig`, override the current context.",
            "required": false,
            "path_tokens": [
              "context"
            ]
          },
          {
            "name": "LeaseName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "lease_name"
            ]
          },
          {
            "name": "LeaseNamespace",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "lease_namespace"
            ]
          },
          {
            "name": "LeaseDuration",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "15s",
            "path_tokens": [
              "lease_duration"
            ],
            "format": "duration"
          },
          {
            "name": "RenewDuration",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "10s",
            "path_tokens": [
              "renew_deadline"
            ],
            "format": "duration"
          },
          {
            "name": "RetryPeriod",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "2s",
            "path_tokens": [
              "retry_period"
            ],
            "format": "duration"
          },
          {
            "name": "makeClient",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "make_client"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "oauth2clientauth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ClientID",
            "type": "string",
            "description": "ClientID is the application's ID. See https://datatracker.ietf.org/doc/html/rfc6749#section-2.2",
            "required": false,
            "validation": {
              "anyOf": "client_id,client_id_file"
            },
            "path_tokens": [
              "client_id"
            ]
          },
          {
            "name": "ClientIDFile",
            "type": "string",
            "description": "ClientIDFile is the file path to read the application's ID from.",
            "required": false,
            "validation": {
              "anyOf": "client_id,client_id_file"
            },
            "path_tokens": [
              "client_id_file"
            ]
          },
          {
            "name": "ClientSecret",
            "type": "custom",
            "description": "ClientSecret is the application's secret. See https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1",
            "required": false,
            "validation": {
              "anyOf": "client_secret,client_secret_file"
            },
            "path_tokens": [
              "client_secret"
            ],
            "sensitive": true
          },
          {
            "name": "ClientSecretFile",
            "type": "string",
            "description": "ClientSecretFile is the file pathg to read the application's secret from.",
            "required": false,
            "validation": {
              "anyOf": "client_secret,client_secret_file"
            },
            "path_tokens": [
              "client_secret_file"
            ],
            "sensitive": true
          },
          {
            "name": "EndpointParams",
            "type": "custom",
            "description": "EndpointParams specifies additional parameters for requests to the token endpoint.",
            "required": false,
            "path_tokens": [
              "endpoint_params"
            ]
          },
          {
            "name": "TokenURL",
            "type": "string",
            "description": "TokenURL is the resource server's token endpoint URL. This is a constant specific to each server. See https://datatracker.ietf.org/doc/html/rfc6749#section-3.2",
            "required": true,
            "path_tokens": [
              "token_url"
            ],
            "sensitive": true
          },
          {
            "name": "Scopes",
            "type": "stringArray",
            "description": "Scope specifies optional requested permissions. See https://datatracker.ietf.org/doc/html/rfc6749#section-3.3",
            "required": false,
            "path_tokens": [
              "scopes"
            ]
          },
          {
            "name": "CAFile",
            "type": "string",
            "description": "Path to the CA cert. For a client this verifies the server certificate. For a server this verifies client certificates. If empty uses system root CA. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_file"
            ]
          },
          {
            "name": "CAPem",
            "type": "custom",
            "description": "In memory PEM encoded cert. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "ca_pem"
            ],
            "sensitive": true
          },
          {
            "name": "IncludeSystemCACertsPool",
            "type": "bool",
            "description": "If true, load system CA certificates pool in addition to the certificates configured in this struct.",
            "required": false,
            "path_tokens": [
              "tls",
              "include_system_ca_certs_pool"
            ]
          },
          {
            "name": "CertFile",
            "type": "string",
            "description": "Path to the TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_file"
            ]
          },
          {
            "name": "CertPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "cert_pem"
            ],
            "sensitive": true
          },
          {
            "name": "KeyFile",
            "type": "string",
            "description": "Path to the TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_file"
            ]
          },
          {
            "name": "KeyPem",
            "type": "custom",
            "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "key_pem"
            ],
            "sensitive": true
          },
          {
            "name": "MinVersion",
            "type": "string",
            "description": "MinVersion sets the minimum TLS version that is acceptable. If not set, TLS 1.2 will be used. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "min_version"
            ]
          },
          {
            "name": "MaxVersion",
            "type": "string",
            "description": "MaxVersion sets the maximum TLS version that is acceptable. If not set, refer to crypto/tls for defaults. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "max_version"
            ]
          },
          {
            "name": "CipherSuites",
            "type": "stringArray",
            "description": "CipherSuites is a list of TLS cipher suites that the TLS transport can use. If left blank, a safe default list is used. See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.",
            "required": false,
            "path_tokens": [
              "tls",
              "cipher_suites"
            ]
          },
          {
            "name": "ReloadInterval",
            "type": "duration",
            "description": "ReloadInterval specifies the duration after which the certificate will be reloaded If not set, it will never be reloaded (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "reload_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CurvePreferences",
            "type": "stringArray",
            "description": "contains the elliptic curves that will be used in an ECDHE handshake, in preference order Defaults to empty list and \"crypto/tls\" defaults are used, internally.",
            "required": false,
            "path_tokens": [
              "tls",
              "curve_preferences"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "enabled"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "The path to the TPM device or Unix domain socket. For instance /dev/tpm0 or /dev/tpmrm0.",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "path"
            ]
          },
          {
            "name": "OwnerAuth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "owner_auth"
            ]
          },
          {
            "name": "Auth",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "tls",
              "tpm",
              "auth"
            ]
          },
          {
            "name": "Insecure",
            "type": "bool",
            "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security. See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional, default false)",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure"
            ]
          },
          {
            "name": "InsecureSkipVerify",
            "type": "bool",
            "description": "InsecureSkipVerify will enable TLS but not verify the certificate.",
            "required": false,
            "path_tokens": [
              "tls",
              "insecure_skip_verify"
            ]
          },
          {
            "name": "ServerName",
            "type": "string",
            "description": "ServerName requested by client for virtual hosting. This sets the ServerName in the TLSConfig. Please refer to https://godoc.org/crypto/tls#Config for more information. (optional)",
            "required": false,
            "path_tokens": [
              "tls",
              "server_name_override"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout` for the underneath client to authorization server while fetching and refreshing tokens.",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ExpiryBuffer",
            "type": "duration",
            "description": "ExpiryBuffer specifies the time buffer before token expiry to refresh it.",
            "required": false,
            "default": "5m",
            "path_tokens": [
              "expiry_buffer"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": [
        {
          "kind": "anyOf",
          "keys": [
            [
              "client_id"
            ],
            [
              "client_id_file"
            ]
          ]
        },
        {
          "kind": "anyOf",
          "keys": [
            [
              "client_secret"
            ],
            [
              "client_secret_file"
            ]
          ]
        }
      ]
    },
    {
      "name": "solarwindsapmsettings",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "endpoint"
            ]
          },
          {
            "name": "Key",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "key"
            ]
          },
          {
            "name": "Interval",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "interval"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "count",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Spans",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "spans"
            ]
          },
          {
            "name": "SpanEvents",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "spanevents"
            ]
          },
          {
            "name": "Metrics",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics"
            ]
          },
          {
            "name": "DataPoints",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "datapoints"
            ]
          },
          {
            "name": "Logs",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs"
            ]
          },
          {
            "name": "Profiles",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "profiles"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sumologic",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "InstallationToken",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "installation_token"
            ],
            "sensitive": true
          },
          {
            "name": "CollectorName",
            "type": "string",
            "description": "CollectorName is the name under which collector will be registered. Please note that registering a collector under a name which is already used is not allowed.",
            "required": false,
            "path_tokens": [
              "collector_name"
            ]
          },
          {
            "name": "CollectorEnvironment",
            "type": "string",
            "description": "CollectorEnvironment is the environment which will be used when updating the collector metadata.",
            "required": false,
            "path_tokens": [
              "collector_environment"
            ]
          },
          {
            "name": "CollectorDescription",
            "type": "string",
            "description": "CollectorDescription is the description which will be used when the collector is being registered.",
            "required": false,
            "path_tokens": [
              "collector_description"
            ]
          },
          {
            "name": "CollectorCategory",
            "type": "string",
            "description": "CollectorCategory is the collector category which will be used when the collector is being registered.",
            "required": false,
            "path_tokens": [
              "collector_category"
            ]
          },
          {
            "name": "CollectorFields",
            "type": "stringMap",
            "description": "CollectorFields defines the collector fields. For more information on this subject visit: https://help.sumologic.com/docs/manage/fields",
            "required": false,
            "path_tokens": [
              "collector_fields"
            ]
          },
          {
            "name": "DiscoverCollectorTags",
            "type": "bool",
            "description": "DiscoverCollectorTags enables collector metadata tag auto-discovery.",
            "required": false,
            "default": true,
            "path_tokens": [
              "discover_collector_tags"
            ]
          },
          {
            "name": "APIBaseURL",
            "type": "string",
            "description": "",
            "required": false,
            "default": "https://open-collectors.sumologic.com",
            "path_tokens": [
              "api_base_url"
            ]
          },
          {
            "name": "HeartBeatInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "15s",
            "path_tokens": [
              "heartbeat_interval"
            ],
            "format": "duration"
          },
          {
            "name": "CollectorCredentialsDirectory",
            "type": "string",
            "description": "CollectorCredentialsDirectory is the directory where state files with collector credentials will be stored after successful collector registration. Default value is $HOME/.sumologic-otel-collector",
            "required": false,
            "path_tokens": [
              "collector_credentials_directory"
            ]
          },
          {
            "name": "Clobber",
            "type": "bool",
            "description": "Clobber defines whether to delete any existing collector with the same name and create a new one upon registration. By default this is false.",
            "required": false,
            "default": false,
            "path_tokens": [
              "clobber"
            ]
          },
          {
            "name": "ForceRegistration",
            "type": "bool",
            "description": "ForceRegistration defines whether to force registration every time the collector starts. This will cause the collector to not look at the locally stored credentials and to always reach out to API to register itself. NOTE: if clobber is unset (default) then setting this to true will create a new collector on Sumo UI on every collector start. By default this is false.",
            "required": false,
            "default": false,
            "path_tokens": [
              "force_registration"
            ]
          },
          {
            "name": "Ephemeral",
            "type": "bool",
            "description": "Ephemeral defines whether the collector will be deleted after 12 hours of inactivity. By default this is false.",
            "required": false,
            "default": false,
            "path_tokens": [
              "ephemeral"
            ]
          },
          {
            "name": "TimeZone",
            "type": "string",
            "description": "TimeZone defines the time zone of the Collector. For a list of possible values, refer to the \"TZ\" column in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List.",
            "required": false,
            "default": "",
            "path_tokens": [
              "time_zone"
            ]
          },
          {
            "name": "InitialInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "backoff.DefaultInitialInterval",
            "path_tokens": [
              "backoff",
              "initial_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "backoff.DefaultMaxInterval",
            "path_tokens": [
              "backoff",
              "max_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MaxElapsedTime",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "backoff.DefaultMaxElapsedTime",
            "path_tokens": [
              "backoff",
              "max_elapsed_time"
            ],
            "format": "duration"
          },
          {
            "name": "StickySessionEnabled",
            "type": "bool",
            "description": "StickySessionEnabled defines if sticky session support is enable. By default this is false.",
            "required": false,
            "default": false,
            "path_tokens": [
              "sticky_session_enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "exceptions",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Dimensions",
            "type": "array",
            "description": "Dimensions defines the list of additional dimensions on top of the provided: - service.name - span.name - span.kind - status.code The dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes: https://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go.",
            "required": false,
            "path_tokens": [
              "dimensions"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "exemplars",
              "enabled"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "roundrobin",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "failover",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "PipelinePriority",
            "type": "array",
            "description": "PipelinePriority is the list of pipeline level priorities in a 1 - n configuration, multiple pipelines can sit at a single priority level and will be routed in a fanout. If any pipeline at a level fails, the level is considered unhealthy",
            "required": false,
            "path_tokens": [
              "priority_levels"
            ]
          },
          {
            "name": "RetryInterval",
            "type": "duration",
            "description": "RetryInterval is the frequency at which the pipeline levels will attempt to recover by going over all levels below the current",
            "required": false,
            "default": "10m",
            "validation": {
              "minExclusive": "0"
            },
            "path_tokens": [
              "retry_interval"
            ],
            "format": "duration"
          },
          {
            "name": "RetryGap",
            "type": "duration",
            "description": "**Deprecated** RetryGap is how much time will pass between trying two separate priority levels in a single RetryInterval If the priority list has 3 levels, the RetryInterval is 5m, and the retryGap is 1m, within the 5m RetryInterval, the connector will only try one level every 1m, and will return to the stable level in the interim",
            "required": false,
            "default": 0,
            "path_tokens": [
              "retry_gap"
            ],
            "format": "duration"
          },
          {
            "name": "MaxRetries",
            "type": "int",
            "description": "**Deprecated** MaxRetry is the maximum retries per level, once this limit is hit for a level, even if the next pipeline level fails, it will not try to recover the level that exceeded the maximum retries",
            "required": false,
            "default": 0,
            "path_tokens": [
              "max_retries"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "grafanacloud",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "HostIdentifiers",
            "type": "stringArray",
            "description": "HostIdentifiers defines the list of resource attributes used to derive a unique `grafana.host.id` value. In most cases, this should be [ \"host.id\" ]",
            "required": false,
            "path_tokens": [
              "host_identifiers"
            ]
          },
          {
            "name": "MetricsFlushInterval",
            "type": "duration",
            "description": "",
            "required": false,
            "default": "60s",
            "path_tokens": [
              "metrics_flush_interval"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "datadog",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "IgnoreResources",
            "type": "stringArray",
            "description": "ignored resources A blacklist of regular expressions can be provided to disable certain traces based on their resource name all entries must be surrounded by double quotes and separated by commas. ignore_resources: [\"(GET|POST) /healthcheck\"]",
            "required": false,
            "path_tokens": [
              "traces",
              "ignore_resources"
            ]
          },
          {
            "name": "SpanNameRemappings",
            "type": "stringMap",
            "description": "SpanNameRemappings is the map of datadog span names and preferred name to map to. This can be used to automatically map Datadog Span Operation Names to an updated value. All entries should be key/value pairs. span_name_remappings:   io.opentelemetry.javaagent.spring.client: spring.client   instrumentation:express.server: express   go.opentelemetry.io_contrib_instrumentation_net_http_otelhttp.client: http.client",
            "required": false,
            "path_tokens": [
              "traces",
              "span_name_remappings"
            ]
          },
          {
            "name": "SpanNameAsResourceName",
            "type": "bool",
            "description": "If set to true the OpenTelemetry span name will used in the Datadog resource name. If set to false the resource name will be filled with the instrumentation library name + span kind. The default value is `false`.",
            "required": false,
            "path_tokens": [
              "traces",
              "span_name_as_resource_name"
            ]
          },
          {
            "name": "ComputeStatsBySpanKind",
            "type": "bool",
            "description": "If set to true, enables an additional stats computation check on spans to see they have an eligible `span.kind` (server, consumer, client, producer). If enabled, a span with an eligible `span.kind` will have stats computed. If disabled, only top-level and measured spans will have stats computed. NOTE: For stats computed from OTel traces, only top-level spans are considered when this option is off. If you are sending OTel traces and want stats on non-top-level spans, this flag will need to be enabled. If you are sending OTel traces and do not want stats computed by span kind, you need to disable this flag and disable `compute_top_level_by_span_kind`.",
            "required": false,
            "path_tokens": [
              "traces",
              "compute_stats_by_span_kind"
            ]
          },
          {
            "name": "ComputeTopLevelBySpanKind",
            "type": "bool",
            "description": "If set to true, root spans and spans with a server or consumer `span.kind` will be marked as top-level. Additionally, spans with a client or producer `span.kind` will have stats computed. Enabling this config option may increase the number of spans that generate trace metrics, and may change which spans appear as top-level in Datadog. ComputeTopLevelBySpanKind needs to be enabled in both the Datadog connector and Datadog exporter configs if both components are being used. The default value is `false`.",
            "required": false,
            "path_tokens": [
              "traces",
              "compute_top_level_by_span_kind"
            ]
          },
          {
            "name": "PeerServiceAggregation",
            "type": "bool",
            "description": "If set to true, enables `peer.service` aggregation in the exporter. If disabled, aggregated trace stats will not include `peer.service` as a dimension. For the best experience with `peer.service`, it is recommended to also enable `compute_stats_by_span_kind`. If enabling both causes the datadog exporter to consume too many resources, try disabling `compute_stats_by_span_kind` first. If the overhead remains high, it will be due to a high cardinality of `peer.service` values from the traces. You may need to check your instrumentation. Deprecated: Please use PeerTagsAggregation instead",
            "required": false,
            "path_tokens": [
              "traces",
              "peer_service_aggregation"
            ]
          },
          {
            "name": "PeerTagsAggregation",
            "type": "bool",
            "description": "If set to true, enables aggregation of peer related tags (e.g., `peer.service`, `db.instance`, etc.) in the datadog exporter. If disabled, aggregated trace stats will not include these tags as dimensions on trace metrics. For the best experience with peer tags, Datadog also recommends enabling `compute_stats_by_span_kind`. If you are using an OTel tracer, it's best to have both enabled because client/producer spans with relevant peer tags may not be marked by the datadog exporter as top-level spans. If enabling both causes the datadog exporter to consume too many resources, try disabling `compute_stats_by_span_kind` first. A high cardinality of peer tags or APM resources can also contribute to higher CPU and memory consumption. You can check for the cardinality of these fields by making trace search queries in the Datadog UI. The default list of peer tags can be found in https://github.com/DataDog/datadog-agent/blob/main/pkg/trace/stats/concentrator.go.",
            "required": false,
            "path_tokens": [
              "traces",
              "peer_tags_aggregation"
            ]
          },
          {
            "name": "PeerTags",
            "type": "stringArray",
            "description": "[BETA] Optional list of supplementary peer tags that go beyond the defaults. The Datadog backend validates all tags and will drop ones that are unapproved. The default set of peer tags can be found at https://github.com/DataDog/datadog-agent/blob/505170c4ac8c3cbff1a61cf5f84b28d835c91058/pkg/trace/stats/concentrator.go#L55.",
            "required": false,
            "path_tokens": [
              "traces",
              "peer_tags"
            ]
          },
          {
            "name": "TraceBuffer",
            "type": "int",
            "description": "TraceBuffer specifies the number of Datadog Agent TracerPayloads to buffer before dropping. The default value is 1000.",
            "required": false,
            "path_tokens": [
              "traces",
              "trace_buffer"
            ]
          },
          {
            "name": "ResourceAttributesAsContainerTags",
            "type": "stringArray",
            "description": "ResourceAttributesAsContainerTags specifies the list of resource attributes to be used as container tags.",
            "required": false,
            "path_tokens": [
              "traces",
              "resource_attributes_as_container_tags"
            ]
          },
          {
            "name": "BucketInterval",
            "type": "duration",
            "description": "BucketInterval specifies the time interval size of aggregation buckets that aggregate the Datadog trace metrics. It is also the time interval that Datadog trace metrics payloads are flushed to the pipeline. If you are concerned about the metric volume generated by the Datadog connector and the resulting networking egress, try increasing bucket_interval. Default is 10s if unset.",
            "required": false,
            "path_tokens": [
              "traces",
              "bucket_interval"
            ],
            "format": "duration"
          },
          {
            "name": "IgnoreMissingDatadogFields",
            "type": "bool",
            "description": "IgnoreMissingDatadogFields specifies whether we should recompute DD span fields if the corresponding \"datadog.\" namespaced span attributes are missing. If it is false (default), we will use the incoming \"datadog.\" namespaced OTLP span attributes to construct the DD span, and if they are missing, we will recompute them from the other OTLP semantic convention attributes. If it is true, we will only populate a field if its associated \"datadog.\" OTLP span attribute exists, otherwise we will leave it empty.",
            "required": false,
            "path_tokens": [
              "traces",
              "ignore_missing_datadog_fields"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sigv4auth",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Region",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "region"
            ]
          },
          {
            "name": "Service",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "service"
            ]
          },
          {
            "name": "ARN",
            "type": "string",
            "description": "",
            "required": true,
            "path_tokens": [
              "assume_role",
              "arn"
            ]
          },
          {
            "name": "SessionName",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "assume_role",
              "session_name"
            ]
          },
          {
            "name": "STSRegion",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "assume_role",
              "sts_region"
            ]
          },
          {
            "name": "WebIdentityTokenFile",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "assume_role",
              "web_identity_token_file"
            ],
            "sensitive": true
          },
          {
            "name": "credsProvider",
            "type": "custom",
            "description": "",
            "required": false,
            "path_tokens": [
              "creds_provider"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "otlpjson",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "routing",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "ErrorMode",
            "type": "enum",
            "description": "ErrorMode determines how the processor reacts to errors that occur while processing an OTTL condition. Valid values are `ignore` and `propagate`. `ignore` means the processor ignores errors returned by conditions and continues on to the next condition. This is the recommended mode. If `ignore` is used and a statement's condition has an error then the payload will be routed to the default exporter. `propagate` means the processor returns the error up the pipeline.  This will result in the payload being dropped from the collector. The default value is `propagate`.",
            "required": false,
            "default": "ottl.PropagateError",
            "path_tokens": [
              "error_mode"
            ],
            "enum_values": [
              "ignore",
              "propagate",
              "silent"
            ]
          },
          {
            "name": "DefaultPipelines",
            "type": "array",
            "description": "DefaultPipelines contains the list of pipelines to use when a more specific record can't be found in the routing table. Optional.",
            "required": false,
            "path_tokens": [
              "default_pipelines"
            ]
          },
          {
            "name": "Table",
            "type": "array",
            "description": "Table contains the routing table for this processor. Required.",
            "required": false,
            "path_tokens": [
              "table"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "servicegraph",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "MetricsExporter",
            "type": "string",
            "description": "MetricsExporter is the name of the metrics exporter to use to ship metrics. Deprecated: The exporter is defined as part of the pipeline and this option is currently noop.",
            "required": false,
            "path_tokens": [
              "metrics_exporter"
            ]
          },
          {
            "name": "LatencyHistogramBuckets",
            "type": "array",
            "description": "LatencyHistogramBuckets is the list of durations representing latency histogram buckets. See defaultLatencyHistogramBucketsMs in processor.go for the default value. make sure use either `LatencyHistogramBuckets` or `ExponentialHistogramMaxSize`",
            "required": true,
            "path_tokens": [
              "latency_histogram_buckets"
            ]
          },
          {
            "name": "ExponentialHistogramMaxSize",
            "type": "int",
            "description": "ExponentialHistogramMaxSize is the setting of exponential histogram",
            "required": false,
            "validation": {
              "max": "0",
              "min": "0"
            },
            "path_tokens": [
              "exponential_histogram_max_size"
            ]
          },
          {
            "name": "Dimensions",
            "type": "stringArray",
            "description": "Dimensions defines the list of additional dimensions on top of the provided: - client - server - failed - connection_type The dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes: https://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go.",
            "required": false,
            "path_tokens": [
              "dimensions"
            ]
          },
          {
            "name": "MaxItems",
            "type": "int",
            "description": "MaxItems is the maximum number of items to keep in the store.",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "store",
              "max_items"
            ]
          },
          {
            "name": "TTL",
            "type": "duration",
            "description": "TTL is the time to live for items in the store.",
            "required": false,
            "default": "2s",
            "path_tokens": [
              "store",
              "ttl"
            ],
            "format": "duration"
          },
          {
            "name": "CacheLoop",
            "type": "duration",
            "description": "CacheLoop is the time to cleans the cache periodically.",
            "required": false,
            "default": "time.Minute",
            "path_tokens": [
              "cache_loop"
            ],
            "format": "duration"
          },
          {
            "name": "StoreExpirationLoop",
            "type": "duration",
            "description": "CacheLoop is the time to expire old entries from the store periodically.",
            "required": false,
            "default": "2s",
            "path_tokens": [
              "store_expiration_loop"
            ],
            "format": "duration"
          },
          {
            "name": "VirtualNodePeerAttributes",
            "type": "stringArray",
            "description": "VirtualNodePeerAttributes the list of attributes need to match, the higher the front, the higher the priority.",
            "required": false,
            "path_tokens": [
              "virtual_node_peer_attributes"
            ]
          },
          {
            "name": "VirtualNodeExtraLabel",
            "type": "bool",
            "description": "VirtualNodeExtraLabel enables the `virtual_node` label to be added to the spans.",
            "required": false,
            "path_tokens": [
              "virtual_node_extra_label"
            ]
          },
          {
            "name": "MetricsFlushInterval",
            "type": "custom",
            "description": "MetricsFlushInterval is the interval at which metrics are flushed to the exporter. If set to 0, metrics are flushed on every received batch of traces. Default is 60s if unset.",
            "required": false,
            "path_tokens": [
              "metrics_flush_interval"
            ]
          },
          {
            "name": "DatabaseNameAttributes",
            "type": "stringArray",
            "description": "DatabaseNameAttributes is the attribute name list of attributes need to match used to identify the database name from span attributes, the higher the front, the higher the priority. The default value is {\"db.name\"}.",
            "required": false,
            "path_tokens": [
              "database_name_attributes"
            ]
          },
          {
            "name": "MetricsTimestampOffset",
            "type": "duration",
            "description": "MetricsTimestampOffset is the offset to subtract from metric timestamps. If set to a positive duration, metric timestamps will be set to (current time - offset), effectively shifting metrics to appear as if they were generated in the past. Default is 0, which means no offset is applied.",
            "required": false,
            "default": 0,
            "path_tokens": [
              "metrics_timestamp_offset"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "sum",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Spans",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "spans"
            ]
          },
          {
            "name": "SpanEvents",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "spanevents"
            ]
          },
          {
            "name": "Metrics",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "metrics"
            ]
          },
          {
            "name": "DataPoints",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "datapoints"
            ]
          },
          {
            "name": "Logs",
            "type": "stringMap",
            "description": "",
            "required": false,
            "path_tokens": [
              "logs"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "datadog",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Key",
            "type": "custom",
            "description": "Key is the Datadog API key to associate your Agent's data with your organization. Create a new API key here: https://app.datadoghq.com/account/settings",
            "required": true,
            "path_tokens": [
              "api",
              "key"
            ],
            "sensitive": true
          },
          {
            "name": "Site",
            "type": "string",
            "description": "Site is the site of the Datadog intake to send data to. The default value is \"datadoghq.com\".",
            "required": true,
            "path_tokens": [
              "api",
              "site"
            ]
          },
          {
            "name": "FailOnInvalidKey",
            "type": "bool",
            "description": "FailOnInvalidKey states whether to exit at startup on invalid API key. The default value is false.",
            "required": false,
            "path_tokens": [
              "api",
              "fail_on_invalid_key"
            ]
          },
          {
            "name": "Hostname",
            "type": "string",
            "description": "If Hostname is empty extension will use available system APIs and cloud provider endpoints.",
            "required": false,
            "path_tokens": [
              "hostname"
            ]
          }
        ],
        "examples": [
          "receivers:\n  otlp:\n    protocols:\n      grpc:\n      http:\n  hostmetrics:\n    collection_interval: 30s\n    scrapers:\n      cpu:\n      memory:\n      disk:\n      load:\n      network:\n\nprocessors:\n  batch:\n    send_batch_size: 1024\n    timeout: 10s\n  memory_limiter:\n    check_interval: 1s\n    limit_mib: 4000\n    spike_limit_mib: 800\n\nexporters:\n  debug:\n    verbosity: detailed\n  otlphttp:\n    endpoint: \"http://localhost:4318\"\n\nextensions:\n  health_check:\n    endpoint: \"0.0.0.0:13133\"\n  pprof:\n    endpoint: \"0.0.0.0:17777\"\n\nconnectors:\n  datadog/connector:\n\nservice:\n  telemetry:\n    logs:\n      level: \"info\"\n    metrics:\n      level: \"detailed\"\n  extensions: [health_check, pprof]\n  pipelines:\n    traces:\n      receivers: [otlp]\n      processors: [memory_limiter, batch]\n      exporters: [debug, otlphttp, datadog/connector]\n    metrics:\n      receivers: [otlp, hostmetrics, datadog/connector]\n      processors: [memory_limiter, batch]\n      exporters: [debug, otlphttp]\n    logs:\n      receivers: [otlp]\n      processors: [memory_limiter, batch]\n      exporters: [debug, otlphttp]"
        ]
      },
      "constraints": []
    },
    {
      "name": "spanmetrics",
      "type": "connector",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Dimensions",
            "type": "array",
            "description": "Dimensions defines the list of additional dimensions on top of the provided: - service.name - span.kind - span.kind - status.code The dimensions will be fetched from the span's attributes. Examples of some conventionally used attributes: https://github.com/open-telemetry/opentelemetry-collector/blob/main/model/semconv/opentelemetry.go.",
            "required": false,
            "path_tokens": [
              "dimensions"
            ]
          },
          {
            "name": "CallsDimensions",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "calls_dimensions"
            ]
          },
          {
            "name": "ExcludeDimensions",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "exclude_dimensions"
            ]
          },
          {
            "name": "DimensionsCacheSize",
            "type": "int",
            "description": "DimensionsCacheSize defines the size of cache for storing Dimensions, which helps to avoid cache memory growing indefinitely over the lifetime of the collector. Optional. See defaultDimensionsCacheSize in connector.go for the default value. Deprecated [v0.130.0]:  Please use AggregationCardinalityLimit instead",
            "required": false,
            "path_tokens": [
              "dimensions_cache_size"
            ]
          },
          {
            "name": "ResourceMetricsCacheSize",
            "type": "int",
            "description": "ResourceMetricsCacheSize defines the size of the cache holding metrics for a service. This is mostly relevant for cumulative temporality to avoid memory leaks and correct metric timestamp resets. Optional. See defaultResourceMetricsCacheSize in connector.go for the default value.",
            "required": false,
            "default": 1000,
            "path_tokens": [
              "resource_metrics_cache_size"
            ]
          },
          {
            "name": "ResourceMetricsKeyAttributes",
            "type": "stringArray",
            "description": "ResourceMetricsKeyAttributes filters the resource attributes used to create the resource metrics key hash. This can be used to avoid situations where resource attributes may change across service restarts, causing metric counters to break (and duplicate). A resource does not need to have all of the attributes. The list must include enough attributes to properly identify unique resources or risk aggregating data from more than one service and span. e.g. [\"service.name\", \"telemetry.sdk.language\", \"telemetry.sdk.name\"] See https://opentelemetry.io/docs/specs/semconv/resource/ for possible attributes.",
            "required": false,
            "path_tokens": [
              "resource_metrics_key_attributes"
            ]
          },
          {
            "name": "AggregationTemporality",
            "type": "string",
            "description": "",
            "required": false,
            "default": "AGGREGATION_TEMPORALITY_CUMULATIVE",
            "path_tokens": [
              "aggregation_temporality"
            ]
          },
          {
            "name": "Disable",
            "type": "bool",
            "description": "",
            "required": false,
            "default": false,
            "path_tokens": [
              "histogram",
              "disable"
            ]
          },
          {
            "name": "Unit",
            "type": "enum",
            "description": "",
            "required": false,
            "default": "milliseconds",
            "path_tokens": [
              "histogram",
              "unit"
            ],
            "enum_values": [
              "milliseconds",
              "millisecondsstr",
              "seconds",
              "secondsstr"
            ]
          },
          {
            "name": "MaxSize",
            "type": "int",
            "description": "",
            "required": false,
            "path_tokens": [
              "histogram",
              "exponential",
              "max_size"
            ]
          },
          {
            "name": "Buckets",
            "type": "array",
            "description": "Buckets is the list of durations representing explicit histogram buckets.",
            "required": false,
            "path_tokens": [
              "histogram",
              "explicit",
              "buckets"
            ]
          },
          {
            "name": "Dimensions",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "histogram",
              "dimensions"
            ]
          },
          {
            "name": "MetricsFlushInterval",
            "type": "duration",
            "description": "MetricsEmitInterval is the time period between when metrics are flushed or emitted to the configured MetricsExporter.",
            "required": false,
            "default": "60s",
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "metrics_flush_interval"
            ],
            "format": "duration"
          },
          {
            "name": "MetricsExpiration",
            "type": "duration",
            "description": "MetricsExpiration is the time period after which, if no new spans are received, metrics are considered stale and will no longer be exported. Default value (0) means that the metrics will never expire.",
            "required": false,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "metrics_expiration"
            ],
            "format": "duration"
          },
          {
            "name": "TimestampCacheSize",
            "type": "custom",
            "description": "TimestampCacheSize controls the size of the cache used to keep track of delta metrics' TimestampUnixNano the last time it was flushed",
            "required": false,
            "path_tokens": [
              "metric_timestamp_cache_size"
            ]
          },
          {
            "name": "Namespace",
            "type": "string",
            "description": "Namespace is the namespace of the metrics emitted by the connector.",
            "required": false,
            "default": "traces.span.metrics",
            "path_tokens": [
              "namespace"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "exemplars",
              "enabled"
            ]
          },
          {
            "name": "MaxPerDataPoint",
            "type": "int",
            "description": "",
            "required": false,
            "default": 5,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "exemplars",
              "max_per_data_point"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled is a flag to enable events.",
            "required": false,
            "path_tokens": [
              "events",
              "enabled"
            ]
          },
          {
            "name": "Dimensions",
            "type": "array",
            "description": "Dimensions defines the list of dimensions to add to the events metric.",
            "required": false,
            "path_tokens": [
              "events",
              "dimensions"
            ]
          },
          {
            "name": "IncludeInstrumentationScope",
            "type": "stringArray",
            "description": "",
            "required": false,
            "path_tokens": [
              "include_instrumentation_scope"
            ]
          },
          {
            "name": "AggregationCardinalityLimit",
            "type": "int",
            "description": "",
            "required": false,
            "default": 0,
            "validation": {
              "min": "0"
            },
            "path_tokens": [
              "aggregation_cardinality_limit"
            ]
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "healthcheckv2",
      "type": "extension",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Endpoint",
            "type": "string",
            "description": "Endpoint configures the listening address for the server.",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "hostport"
          },
          {
            "name": "AllowedOrigins",
            "type": "stringArray",
            "description": "AllowedOrigins sets the allowed values of the Origin header for HTTP/JSON requests to an OTLP receiver. An origin may contain a wildcard (*) to replace 0 or more characters (e.g., \"http://*.domain.com\", or \"*\" to allow any origin).",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_origins"
            ]
          },
          {
            "name": "AllowedHeaders",
            "type": "stringArray",
            "description": "AllowedHeaders sets what headers will be allowed in CORS requests. The Accept, Accept-Language, Content-Type, and Content-Language headers are implicitly allowed. If no headers are listed, X-Requested-With will also be accepted by default. Include \"*\" to allow any request header.",
            "required": false,
            "path_tokens": [
              "cors",
              "allowed_headers"
            ]
          },
          {
            "name": "MaxAge",
            "type": "int",
            "description": "MaxAge sets the value of the Access-Control-Max-Age response header. Set it to the number of seconds that browsers should cache a CORS preflight response for.",
            "required": false,
            "path_tokens": [
              "cors",
              "max_age"
            ]
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "RequestParameters",
            "type": "stringArray",
            "description": "RequestParameters is a list of parameters that should be extracted from the request and added to the context. When a parameter is found in both the query string and the header, the value from the query string will be used.",
            "required": false,
            "path_tokens": [
              "auth",
              "request_params"
            ]
          },
          {
            "name": "MaxRequestBodySize",
            "type": "int",
            "description": "MaxRequestBodySize sets the maximum request body size in bytes. Default: 20MiB.",
            "required": false,
            "path_tokens": [
              "max_request_body_size"
            ],
            "unit": "bytes"
          },
          {
            "name": "IncludeMetadata",
            "type": "bool",
            "description": "IncludeMetadata propagates the client metadata from the incoming requests to the downstream consumers",
            "required": false,
            "path_tokens": [
              "include_metadata"
            ]
          },
          {
            "name": "ResponseHeaders",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP response sent to the client. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "response_headers"
            ],
            "sensitive": true
          },
          {
            "name": "CompressionAlgorithms",
            "type": "stringArray",
            "description": "CompressionAlgorithms configures the list of compression algorithms the server can accept. Default: [\"\", \"gzip\", \"zstd\", \"zlib\", \"snappy\", \"deflate\"]",
            "required": false,
            "path_tokens": [
              "compression_algorithms"
            ]
          },
          {
            "name": "ReadTimeout",
            "type": "duration",
            "description": "ReadTimeout is the maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout. Because ReadTimeout does not let Handlers make per-request decisions on each request body's acceptable deadline or upload rate, most users will prefer to use ReadHeaderTimeout. It is valid to use them both.",
            "required": false,
            "path_tokens": [
              "read_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "ReadHeaderTimeout",
            "type": "duration",
            "description": "ReadHeaderTimeout is the amount of time allowed to read request headers. The connection's read deadline is reset after reading the headers and the Handler can decide what is considered too slow for the body. If ReadHeaderTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "read_header_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "WriteTimeout",
            "type": "duration",
            "description": "WriteTimeout is the maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Like ReadTimeout, it does not let Handlers make decisions on a per-request basis. A zero or negative value means there will be no timeout.",
            "required": false,
            "path_tokens": [
              "write_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "IdleTimeout",
            "type": "duration",
            "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout.",
            "required": false,
            "path_tokens": [
              "idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP server. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Path",
            "type": "string",
            "description": "Path represents the path the health check service will serve. The default path is \"/\".",
            "required": false,
            "path_tokens": [
              "path"
            ]
          },
          {
            "name": "Healthy",
            "type": "string",
            "description": "Healthy represents the body of the response returned when the collector is healthy. The default value is \"\"",
            "required": false,
            "path_tokens": [
              "response_body",
              "healthy"
            ]
          },
          {
            "name": "Unhealthy",
            "type": "string",
            "description": "Unhealthy represents the body of the response returned when the collector is unhealthy. The default value is \"\"",
            "required": false,
            "path_tokens": [
              "response_body",
              "unhealthy"
            ]
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled indicates whether to not enable collector pipeline check.",
            "required": false,
            "path_tokens": [
              "check_collector_pipeline",
              "enabled"
            ]
          },
          {
            "name": "Interval",
            "type": "string",
            "description": "Interval the time range to check healthy status of collector pipeline",
            "required": false,
            "path_tokens": [
              "check_collector_pipeline",
              "interval"
            ]
          },
          {
            "name": "ExporterFailureThreshold",
            "type": "int",
            "description": "ExporterFailureThreshold is the threshold of exporter failure numbers during the Interval",
            "required": false,
            "path_tokens": [
              "check_collector_pipeline",
              "exporter_failure_threshold"
            ]
          },
          {
            "name": "UseV2",
            "type": "bool",
            "description": "UseV2 is an explicit opt-in to v2 behavior. When true, LegacyConfig will be ignored.",
            "required": false,
            "path_tokens": [
              "use_v2"
            ]
          },
          {
            "name": "IncludePermanent",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "component_health",
              "include_permanent_errors"
            ]
          },
          {
            "name": "IncludeRecoverable",
            "type": "bool",
            "description": "",
            "required": false,
            "path_tokens": [
              "component_health",
              "include_recoverable_errors"
            ]
          },
          {
            "name": "RecoveryDuration",
            "type": "duration",
            "description": "",
            "required": false,
            "path_tokens": [
              "component_health",
              "recovery_duration"
            ],
            "format": "duration"
          }
        ],
        "examples": null
      },
      "constraints": []
    },
    {
      "name": "resourcedetection",
      "type": "processor",
      "description": "",
      "config": {
        "fields": [
          {
            "name": "Detectors",
            "type": "stringArray",
            "description": "Detectors is an ordered list of named detectors that should be run to attempt to detect resource information.",
            "required": false,
            "path_tokens": [
              "detectors"
            ]
          },
          {
            "name": "Override",
            "type": "bool",
            "description": "Override indicates whether any existing resource attributes should be overridden or preserved. Defaults to true.",
            "required": false,
            "default": true,
            "path_tokens": [
              "override"
            ]
          },
          {
            "name": "Endpoint",
            "type": "string",
            "description": "The target URL to send data to (e.g.: http://some.url:9411/v1/traces).",
            "required": false,
            "path_tokens": [
              "endpoint"
            ],
            "format": "url"
          },
          {
            "name": "ProxyURL",
            "type": "string",
            "description": "ProxyURL setting for the collector",
            "required": false,
            "path_tokens": [
              "proxy_url"
            ]
          },
          {
            "name": "ReadBufferSize",
            "type": "int",
            "description": "ReadBufferSize for HTTP client. See http.Transport.ReadBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "read_buffer_size"
            ]
          },
          {
            "name": "WriteBufferSize",
            "type": "int",
            "description": "WriteBufferSize for HTTP client. See http.Transport.WriteBufferSize. Default is 0.",
            "required": false,
            "path_tokens": [
              "write_buffer_size"
            ]
          },
          {
            "name": "Timeout",
            "type": "duration",
            "description": "Timeout parameter configures `http.Client.Timeout`. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Headers",
            "type": "stringMap",
            "description": "Additional headers attached to each HTTP request sent by the client. Existing header values are overwritten if collision happens. Header values are opaque since they may be sensitive.",
            "required": false,
            "path_tokens": [
              "headers"
            ],
            "sensitive": true
          },
          {
            "name": "name",
            "type": "array",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ],
            "item_type": "componentRef",
            "ref_kind": "extension",
            "ref_scope": "authenticator"
          },
          {
            "name": "nameVal",
            "type": "string",
            "description": "",
            "required": false,
            "path_tokens": [
              "auth",
              "authenticator",
              "[]"
            ]
          },
          {
            "name": "Compression",
            "type": "enum",
            "description": "The compression key for supported compression types within collector.",
            "required": false,
            "path_tokens": [
              "compression"
            ],
            "enum_values": [
              "deflate",
              "gzip",
              "lz4",
              "none",
              "snappy",
              "x-snappy-framed",
              "zlib",
              "zstd"
            ]
          },
          {
            "name": "Level",
            "type": "enum",
            "description": "",
            "required": false,
            "path_tokens": [
              "compression_params",
              "level"
            ]
          },
          {
            "name": "MaxIdleConns",
            "type": "int",
            "description": "MaxIdleConns is used to set a limit to the maximum idle HTTP connections the client can keep open. By default, it is set to 100. Zero means no limit.",
            "required": false,
            "path_tokens": [
              "max_idle_conns"
            ]
          },
          {
            "name": "MaxIdleConnsPerHost",
            "type": "int",
            "description": "MaxIdleConnsPerHost is used to set a limit to the maximum idle HTTP connections the host can keep open. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_idle_conns_per_host"
            ]
          },
          {
            "name": "MaxConnsPerHost",
            "type": "int",
            "description": "MaxConnsPerHost limits the total number of connections per host, including connections in the dialing, active, and idle states. Default is 0 (unlimited).",
            "required": false,
            "path_tokens": [
              "max_conns_per_host"
            ]
          },
          {
            "name": "IdleConnTimeout",
            "type": "duration",
            "description": "IdleConnTimeout is the maximum amount of time a connection will remain open before closing itself. By default, it is set to 90 seconds.",
            "required": false,
            "path_tokens": [
              "idle_conn_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "DisableKeepAlives",
            "type": "bool",
            "description": "DisableKeepAlives, if true, disables HTTP keep-alives and will only use the connection to the server for a single HTTP request. WARNING: enabling this option can result in significant overhead establishing a new HTTP(S) connection for every request. Before enabling this option please consider whether changes to idle connection settings can achieve your goal.",
            "required": false,
            "path_tokens": [
              "disable_keep_alives"
            ]
          },
          {
            "name": "HTTP2ReadIdleTimeout",
            "type": "duration",
            "description": "This is needed in case you run into https://github.com/golang/go/issues/59690 https://github.com/golang/go/issues/36026 HTTP2ReadIdleTimeout if the connection has been idle for the configured value send a ping frame for health check 0s means no health check will be performed.",
            "required": false,
            "path_tokens": [
              "http2_read_idle_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "HTTP2PingTimeout",
            "type": "duration",
            "description": "HTTP2PingTimeout if there's no response to the ping within the configured value, the connection will be closed. If not set or set to 0, it defaults to 15s.",
            "required": false,
            "path_tokens": [
              "http2_ping_timeout"
            ],
            "format": "duration"
          },
          {
            "name": "Enabled",
            "type": "bool",
            "description": "Enabled if true, cookies from HTTP responses will be reused in further HTTP requests with the same server.",
            "required": false,
            "path_tokens": [
              "cookies",
              "enabled"
            ]
          },
          {
            "name": "ForceAttemptHTTP2",
            "type": "bool",
            "description": "Enabling ForceAttemptHTTP2 forces the HTTP transport to use the HTTP/2 protocol. By default, this is set to true. NOTE: HTTP/2 does not support settings such as MaxConnsPerHost, MaxIdleConnsPerHost and MaxIdleConns.",
            "required": false,
            "path_tokens": [
              "force_attempt_http2"
            ]
          },
          {
            "name": "Middlewares",
            "type": "array",
            "description": "Middlewares are used to add custom functionality to the HTTP client. Middleware handlers are called in the order they appear in this list, with the first middleware becoming the outermost handler.",
            "required": false,
            "path_tokens": [
              "middlewares"
            ]
          },
          {
            "name": "Attributes",
            "type": "stringArray",
            "description": "Attributes is an allowlist of attributes to add. If a supplied attribute is not a valid attribute of a supplied detector it will be ignored. Deprecated: Please use detector's resource_attributes config instead",
            "required": false,
            "path_tokens": [
              "attributes"
            ]
          }
        ],
        "examples": [
          "default:\nall_set:\n  resource_attributes:\n    cloud.account.id:\n      enabled: true\n    cloud.availability_zone:\n      enabled: true\n    cloud.platform:\n      enabled: true\n    cloud.provider:\n      enabled: true\n    cloud.region:\n      enabled: true\n    host.id:\n      enabled: true\n    host.image.id:\n      enabled: true\n    host.name:\n      enabled: true\n    host.type:\n      enabled: true\nnone_set:\n  resource_attributes:\n    cloud.account.id:\n      enabled: false\n    cloud.availability_zone:\n      enabled: false\n    cloud.platform:\n      enabled: false\n    cloud.provider:\n      enabled: false\n    cloud.region:\n      enabled: false\n    host.id:\n      enabled: false\n    host.image.id:\n      enabled: false\n    host.name:\n      enabled: false\n    host.type:\n      enabled: false\n",
          "default:\nall_set:\n  resource_attributes:\n    aws.ecs.cluster.arn:\n      enabled: true\n    aws.ecs.launchtype:\n      enabled: true\n    aws.ecs.task.arn:\n      enabled: true\n    aws.ecs.task.family:\n      enabled: true\n    aws.ecs.task.id:\n      enabled: true\n    aws.ecs.task.revision:\n      enabled: true\n    aws.log.group.arns:\n      enabled: true\n    aws.log.group.names:\n      enabled: true\n    aws.log.stream.arns:\n      enabled: true\n    aws.log.stream.names:\n      enabled: true\n    cloud.account.id:\n      enabled: true\n    cloud.availability_zone:\n      enabled: true\n    cloud.platform:\n      enabled: true\n    cloud.provider:\n      enabled: true\n    cloud.region:\n      enabled: true\nnone_set:\n  resource_attributes:\n    aws.ecs.cluster.arn:\n      enabled: false\n    aws.ecs.launchtype:\n      enabled: false\n    aws.ecs.task.arn:\n      enabled: false\n    aws.ecs.task.family:\n      enabled: false\n    aws.ecs.task.id:\n      enabled: false\n    aws.ecs.task.revision:\n      enabled: false\n    aws.log.group.arns:\n      enabled: false\n    aws.log.group.names:\n      enabled: false\n    aws.log.stream.arns:\n      enabled: false\n    aws.log.stream.names:\n      enabled: false\n    cloud.account.id:\n      enabled: false\n    cloud.availability_zone:\n      enabled: false\n    cloud.platform:\n      enabled: false\n    cloud.provider:\n      enabled: false\n    cloud.region:\n      enabled: false\n",
          "default:\nall_set:\n  resource_attributes:\n    cloud.account.id:\n      enabled: true\n    cloud.availability_zone:\n      enabled: true\n    cloud.platform:\n      enabled: true\n    cloud.provider:\n      enabled: true\n    cloud.region:\n      enabled: true\n    host.id:\n      enabled: true\n    host.image.id:\n      enabled: true\n    host.name:\n      enabled: true\n    host.type:\n      enabled: true\n    k8s.cluster.name:\n      enabled: true\nnone_set:\n  resource_attributes:\n    cloud.account.id:\n      enabled: false\n    cloud.availability_zone:\n      enabled: false\n    cloud.platform:\n      enabled: false\n    cloud.provider:\n      enabled: false\n    cloud.region:\n      enabled: false\n    host.id:\n      enabled: false\n    host.image.id:\n      enabled: false\n    host.name:\n      enabled: false\n    host.type:\n      enabled: false\n    k8s.cluster.name:\n      enabled: false\n"
        ]
      },
      "constraints": []
    }
  ],
  "document": {
    "sections": [
      "receivers",
      "processors",
      "exporters",
      "connectors",
      "extensions",
      "service"
    ],
    "signals": [
      "traces",
      "metrics",
      "logs",
      "profiles"
    ],
    "component_id_pattern": "\u003ctype\u003e[/\u003cinstance\u003e]",
    "supports_instance_suffix": true,
    "pipeline_shape": {
      "receivers": true,
      "processors": true,
      "exporters": true,
      "connectors": true
    },
    "telemetry": {
      "metrics_levels": [
        "none",
        "basic",
        "normal",
        "detailed"
      ],
      "default_level": "basic"
    }
  }
}